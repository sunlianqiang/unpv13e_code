!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A	ping/bsdping.c	/^#define	A(/;"	d	file:
ADDR	debug/backlog.c	/^#define	ADDR	/;"	d	file:
ADDR	debug/qlen.c	/^#define	ADDR	/;"	d	file:
AF_INET6	libfree/inet_ntop.c	/^#define	AF_INET6	/;"	d	file:
AF_INET6	libfree/inet_pton.c	/^#define	AF_INET6	/;"	d	file:
AF_INET6	libfree/test_inet_pton.c	/^#define	AF_INET6	/;"	d	file:
AF_LOCAL	key/unp.h	/^#define AF_LOCAL	/;"	d
AF_LOCAL	lib/unp.h	/^#define AF_LOCAL	/;"	d
AF_LOCAL	libfree/getaddrinfo.c	/^#define	AF_LOCAL	/;"	d	file:
AF_LOCAL	sctp/unp.h	/^#define AF_LOCAL	/;"	d
AI_CANONNAME	lib/addrinfo.h	/^#define	AI_CANONNAME	/;"	d
AI_CANONNAME	libfree/addrinfo.h	/^#define	AI_CANONNAME	/;"	d
AI_CANONNAME	libgai/addrinfo.h	/^#define	AI_CANONNAME	/;"	d
AI_CLONE	libfree/getaddrinfo.c	/^#define	AI_CLONE	/;"	d	file:
AI_CLONE	libgai/gai_hdr.h	/^#define	AI_CLONE	/;"	d
AI_CLONE	libgai/old/savecopy.c	/^#define	AI_CLONE	/;"	d	file:
AI_PASSIVE	lib/addrinfo.h	/^#define	AI_PASSIVE	/;"	d
AI_PASSIVE	libfree/addrinfo.h	/^#define	AI_PASSIVE	/;"	d
AI_PASSIVE	libgai/addrinfo.h	/^#define	AI_PASSIVE	/;"	d
Accept	key/unp.h	/^int		 Accept(int, SA *, socklen_t *);$/;"	p	signature:(int, SA *, socklen_t *)
Accept	lib/unp.h	/^int		 Accept(int, SA *, socklen_t *);$/;"	p	signature:(int, SA *, socklen_t *)
Accept	lib/wrapsock.c	/^Accept(int fd, struct sockaddr *sa, socklen_t *salenptr)$/;"	f	signature:(int fd, struct sockaddr *sa, socklen_t *salenptr)
Accept	sctp/unp.h	/^int		 Accept(int, SA *, socklen_t *);$/;"	p	signature:(int, SA *, socklen_t *)
B	ping/bsdping.c	/^#define	B(/;"	d	file:
BSPACE	ping/bsdping.c	/^char BSPACE = '\\b';		\/* characters written for flood *\/$/;"	v
BUFF	test/tshutdown.c	/^#define	BUFF	/;"	d	file:
BUFFSIZE	key/unp.h	/^#define	BUFFSIZE	/;"	d
BUFFSIZE	lib/unp.h	/^#define	BUFFSIZE	/;"	d
BUFFSIZE	sctp/unp.h	/^#define	BUFFSIZE	/;"	d
BUFFSIZE	threads/example03.c	/^#define	BUFFSIZE	/;"	d	file:
BUFLEN	route/getrt.c	/^#define	BUFLEN	/;"	d	file:
BUFSIZE	ping/ping.h	/^#define	BUFSIZE	/;"	d
BUFSIZE	traceroute/trace.h	/^#define	BUFSIZE	/;"	d
Bind	key/unp.h	/^void	 Bind(int, const SA *, socklen_t);$/;"	p	signature:(int, const SA *, socklen_t)
Bind	lib/unp.h	/^void	 Bind(int, const SA *, socklen_t);$/;"	p	signature:(int, const SA *, socklen_t)
Bind	lib/wrapsock.c	/^Bind(int fd, const struct sockaddr *sa, socklen_t salen)$/;"	f	signature:(int fd, const struct sockaddr *sa, socklen_t salen)
Bind	sctp/unp.h	/^void	 Bind(int, const SA *, socklen_t);$/;"	p	signature:(int, const SA *, socklen_t)
CLR	ping/bsdping.c	/^#define	CLR(/;"	d	file:
CMD	udpcksum/pcap.c	/^#define	CMD	/;"	d	file:
CMSG_LEN	key/unp.h	/^#define	CMSG_LEN(/;"	d
CMSG_LEN	lib/unp.h	/^#define	CMSG_LEN(/;"	d
CMSG_LEN	sctp/unp.h	/^#define	CMSG_LEN(/;"	d
CMSG_SPACE	key/unp.h	/^#define	CMSG_SPACE(/;"	d
CMSG_SPACE	lib/unp.h	/^#define	CMSG_SPACE(/;"	d
CMSG_SPACE	sctp/unp.h	/^#define	CMSG_SPACE(/;"	d
CONTROLLEN	sock/loop.c	/^#define	CONTROLLEN	/;"	d	file:
CONTROLLEN	sock/loopudp.c	/^#define	CONTROLLEN	/;"	d	file:
CONTROL_LEN	advio/old/recvfromflags.c	/^#define	CONTROL_LEN	/;"	d	file:
CONTROL_LEN	advio/old/test01.c	/^#define	CONTROL_LEN	/;"	d	file:
CONTROL_LEN	unixdomain/readcred.c	/^#define	CONTROL_LEN	/;"	d	file:
CONTROL_LEN	unixdomain/tfcred01.c	/^#define	CONTROL_LEN	/;"	d	file:
CPU_VENDOR_OS	config.h	/^#define CPU_VENDOR_OS /;"	d
CPU_VENDOR_OS	sparc64-unknown-freebsd5.1/config.h	/^#define CPU_VENDOR_OS /;"	d
Calloc	key/unp.h	/^void	*Calloc(size_t, size_t);$/;"	p	signature:(size_t, size_t)
Calloc	lib/unp.h	/^void	*Calloc(size_t, size_t);$/;"	p	signature:(size_t, size_t)
Calloc	lib/wrapunix.c	/^Calloc(size_t n, size_t size)$/;"	f	signature:(size_t n, size_t size)
Calloc	sctp/unp.h	/^void	*Calloc(size_t, size_t);$/;"	p	signature:(size_t, size_t)
Child	server/child.h	/^} Child;$/;"	t	typeref:struct:__anon3
Close	key/unp.h	/^void	 Close(int);$/;"	p	signature:(int)
Close	lib/unp.h	/^void	 Close(int);$/;"	p	signature:(int)
Close	lib/wrapunix.c	/^Close(int fd)$/;"	f	signature:(int fd)
Close	sctp/unp.h	/^void	 Close(int);$/;"	p	signature:(int)
Connect	key/unp.h	/^void	 Connect(int, const SA *, socklen_t);$/;"	p	signature:(int, const SA *, socklen_t)
Connect	lib/unp.h	/^void	 Connect(int, const SA *, socklen_t);$/;"	p	signature:(int, const SA *, socklen_t)
Connect	lib/wrapsock.c	/^Connect(int fd, const struct sockaddr *sa, socklen_t salen)$/;"	f	signature:(int fd, const struct sockaddr *sa, socklen_t salen)
Connect	sctp/unp.h	/^void	 Connect(int, const SA *, socklen_t);$/;"	p	signature:(int, const SA *, socklen_t)
Connect_timeo	key/unp.h	/^void	 Connect_timeo(int, const SA *, socklen_t, int);$/;"	p	signature:(int, const SA *, socklen_t, int)
Connect_timeo	lib/connect_timeo.c	/^Connect_timeo(int fd, const SA *sa, socklen_t salen, int sec)$/;"	f	signature:(int fd, const SA *sa, socklen_t salen, int sec)
Connect_timeo	lib/unp.h	/^void	 Connect_timeo(int, const SA *, socklen_t, int);$/;"	p	signature:(int, const SA *, socklen_t, int)
Connect_timeo	sctp/unp.h	/^void	 Connect_timeo(int, const SA *, socklen_t, int);$/;"	p	signature:(int, const SA *, socklen_t, int)
DEFDATALEN	ping/bsdping.c	/^#define	DEFDATALEN	/;"	d	file:
DG	sigio/dgecho01.c	/^} DG;$/;"	t	typeref:struct:__anon8	file:
DGLEN	udpcliserv/dgcliloop1.c	/^#define	DGLEN	/;"	d	file:
DGLEN	udpcliserv/dgcliloop3.c	/^#define	DGLEN	/;"	d	file:
DIR_MODE	key/unp.h	/^#define	DIR_MODE	/;"	d
DIR_MODE	lib/unp.h	/^#define	DIR_MODE	/;"	d
DIR_MODE	sctp/unp.h	/^#define	DIR_MODE	/;"	d
DIR_MODE	sock/ourhdr.h	/^#define	DIR_MODE	/;"	d
DOT	ping/bsdping.c	/^char DOT = '.';$/;"	v
Dg_send_recv	rtt/dg_cli.c	/^ssize_t	Dg_send_recv(int, const void *, size_t, void *, size_t,$/;"	p	file:	signature:(int, const void *, size_t, void *, size_t, const SA *, socklen_t)
Dg_send_recv	rtt/dg_send_recv.c	/^Dg_send_recv(int fd, const void *outbuff, size_t outbytes,$/;"	f	signature:(int fd, const void *outbuff, size_t outbytes, void *inbuff, size_t inbytes, const SA *destaddr, socklen_t destlen)
Dup2	key/unp.h	/^void	 Dup2(int, int);$/;"	p	signature:(int, int)
Dup2	lib/unp.h	/^void	 Dup2(int, int);$/;"	p	signature:(int, int)
Dup2	lib/wrapunix.c	/^Dup2(int fd1, int fd2)$/;"	f	signature:(int fd1, int fd2)
Dup2	sctp/unp.h	/^void	 Dup2(int, int);$/;"	p	signature:(int, int)
EAI_ADDRFAMILY	lib/addrinfo.h	/^#define	EAI_ADDRFAMILY	/;"	d
EAI_ADDRFAMILY	libfree/addrinfo.h	/^#define	EAI_ADDRFAMILY	/;"	d
EAI_ADDRFAMILY	libgai/addrinfo.h	/^#define	EAI_ADDRFAMILY	/;"	d
EAI_AGAIN	lib/addrinfo.h	/^#define	EAI_AGAIN	/;"	d
EAI_AGAIN	libfree/addrinfo.h	/^#define	EAI_AGAIN	/;"	d
EAI_AGAIN	libgai/addrinfo.h	/^#define	EAI_AGAIN	/;"	d
EAI_BADFLAGS	lib/addrinfo.h	/^#define	EAI_BADFLAGS	/;"	d
EAI_BADFLAGS	libfree/addrinfo.h	/^#define	EAI_BADFLAGS	/;"	d
EAI_BADFLAGS	libgai/addrinfo.h	/^#define	EAI_BADFLAGS	/;"	d
EAI_FAIL	lib/addrinfo.h	/^#define	EAI_FAIL	/;"	d
EAI_FAIL	libfree/addrinfo.h	/^#define	EAI_FAIL	/;"	d
EAI_FAIL	libgai/addrinfo.h	/^#define	EAI_FAIL	/;"	d
EAI_FAMILY	lib/addrinfo.h	/^#define	EAI_FAMILY	/;"	d
EAI_FAMILY	libfree/addrinfo.h	/^#define	EAI_FAMILY	/;"	d
EAI_FAMILY	libgai/addrinfo.h	/^#define	EAI_FAMILY	/;"	d
EAI_MEMORY	lib/addrinfo.h	/^#define	EAI_MEMORY	/;"	d
EAI_MEMORY	libfree/addrinfo.h	/^#define	EAI_MEMORY	/;"	d
EAI_MEMORY	libgai/addrinfo.h	/^#define	EAI_MEMORY	/;"	d
EAI_NODATA	lib/addrinfo.h	/^#define	EAI_NODATA	/;"	d
EAI_NODATA	libfree/addrinfo.h	/^#define	EAI_NODATA	/;"	d
EAI_NODATA	libgai/addrinfo.h	/^#define	EAI_NODATA	/;"	d
EAI_NONAME	lib/addrinfo.h	/^#define	EAI_NONAME	/;"	d
EAI_NONAME	libfree/addrinfo.h	/^#define	EAI_NONAME	/;"	d
EAI_NONAME	libgai/addrinfo.h	/^#define	EAI_NONAME	/;"	d
EAI_SERVICE	lib/addrinfo.h	/^#define	EAI_SERVICE	/;"	d
EAI_SERVICE	libfree/addrinfo.h	/^#define	EAI_SERVICE	/;"	d
EAI_SERVICE	libgai/addrinfo.h	/^#define	EAI_SERVICE	/;"	d
EAI_SOCKTYPE	lib/addrinfo.h	/^#define	EAI_SOCKTYPE	/;"	d
EAI_SOCKTYPE	libfree/addrinfo.h	/^#define	EAI_SOCKTYPE	/;"	d
EAI_SOCKTYPE	libgai/addrinfo.h	/^#define	EAI_SOCKTYPE	/;"	d
EAI_SYSTEM	lib/addrinfo.h	/^#define	EAI_SYSTEM	/;"	d
EAI_SYSTEM	libfree/addrinfo.h	/^#define	EAI_SYSTEM	/;"	d
EAI_SYSTEM	libgai/addrinfo.h	/^#define	EAI_SYSTEM	/;"	d
FILE_MODE	key/unp.h	/^#define	FILE_MODE	/;"	d
FILE_MODE	lib/unp.h	/^#define	FILE_MODE	/;"	d
FILE_MODE	sctp/unp.h	/^#define	FILE_MODE	/;"	d
FILE_MODE	sock/ourhdr.h	/^#define	FILE_MODE	/;"	d
F_CONNECTING	nonblock/web.h	/^#define	F_CONNECTING	/;"	d
F_CONNECTING	threads/web01.c	/^#define	F_CONNECTING	/;"	d	file:
F_CONNECTING	threads/web02.c	/^#define	F_CONNECTING	/;"	d	file:
F_CONNECTING	threads/web03.c	/^#define	F_CONNECTING	/;"	d	file:
F_DONE	nonblock/web.h	/^#define	F_DONE	/;"	d
F_DONE	threads/web01.c	/^#define	F_DONE	/;"	d	file:
F_DONE	threads/web02.c	/^#define	F_DONE	/;"	d	file:
F_DONE	threads/web03.c	/^#define	F_DONE	/;"	d	file:
F_FLOOD	ping/bsdping.c	/^#define	F_FLOOD	/;"	d	file:
F_INTERVAL	ping/bsdping.c	/^#define	F_INTERVAL	/;"	d	file:
F_JOINED	threads/web02.c	/^#define	F_JOINED	/;"	d	file:
F_JOINED	threads/web03.c	/^#define	F_JOINED	/;"	d	file:
F_NUMERIC	ping/bsdping.c	/^#define	F_NUMERIC	/;"	d	file:
F_PINGFILLED	ping/bsdping.c	/^#define	F_PINGFILLED	/;"	d	file:
F_QUIET	ping/bsdping.c	/^#define	F_QUIET	/;"	d	file:
F_READING	nonblock/web.h	/^#define	F_READING	/;"	d
F_READING	threads/web01.c	/^#define	F_READING	/;"	d	file:
F_READING	threads/web02.c	/^#define	F_READING	/;"	d	file:
F_READING	threads/web03.c	/^#define	F_READING	/;"	d	file:
F_RROUTE	ping/bsdping.c	/^#define	F_RROUTE	/;"	d	file:
F_SO_DEBUG	ping/bsdping.c	/^#define	F_SO_DEBUG	/;"	d	file:
F_SO_DONTROUTE	ping/bsdping.c	/^#define	F_SO_DONTROUTE	/;"	d	file:
F_VERBOSE	ping/bsdping.c	/^#define	F_VERBOSE	/;"	d	file:
Family_to_level	key/unp.h	/^int		 Family_to_level(int);$/;"	p	signature:(int)
Family_to_level	lib/family_to_level.c	/^Family_to_level(int family)$/;"	f	signature:(int family)
Family_to_level	lib/unp.h	/^int		 Family_to_level(int);$/;"	p	signature:(int)
Fclose	key/unp.h	/^void	 Fclose(FILE *);$/;"	p	signature:(FILE *)
Fclose	lib/unp.h	/^void	 Fclose(FILE *);$/;"	p	signature:(FILE *)
Fclose	lib/wrapstdio.c	/^Fclose(FILE *fp)$/;"	f	signature:(FILE *fp)
Fclose	sctp/unp.h	/^void	 Fclose(FILE *);$/;"	p	signature:(FILE *)
Fcntl	key/unp.h	/^int		 Fcntl(int, int, int);$/;"	p	signature:(int, int, int)
Fcntl	lib/unp.h	/^int		 Fcntl(int, int, int);$/;"	p	signature:(int, int, int)
Fcntl	lib/wrapunix.c	/^Fcntl(int fd, int cmd, int arg)$/;"	f	signature:(int fd, int cmd, int arg)
Fcntl	sctp/unp.h	/^int		 Fcntl(int, int, int);$/;"	p	signature:(int, int, int)
Fdopen	key/unp.h	/^FILE	*Fdopen(int, const char *);$/;"	p	signature:(int, const char *)
Fdopen	lib/unp.h	/^FILE	*Fdopen(int, const char *);$/;"	p	signature:(int, const char *)
Fdopen	lib/wrapstdio.c	/^Fdopen(int fd, const char *type)$/;"	f	signature:(int fd, const char *type)
Fdopen	sctp/unp.h	/^FILE	*Fdopen(int, const char *);$/;"	p	signature:(int, const char *)
Fgets	key/unp.h	/^char	*Fgets(char *, int, FILE *);$/;"	p	signature:(char *, int, FILE *)
Fgets	lib/unp.h	/^char	*Fgets(char *, int, FILE *);$/;"	p	signature:(char *, int, FILE *)
Fgets	lib/wrapstdio.c	/^Fgets(char *ptr, int n, FILE *stream)$/;"	f	signature:(char *ptr, int n, FILE *stream)
Fgets	sctp/unp.h	/^char	*Fgets(char *, int, FILE *);$/;"	p	signature:(char *, int, FILE *)
Fopen	key/unp.h	/^FILE	*Fopen(const char *, const char *);$/;"	p	signature:(const char *, const char *)
Fopen	lib/unp.h	/^FILE	*Fopen(const char *, const char *);$/;"	p	signature:(const char *, const char *)
Fopen	lib/wrapstdio.c	/^Fopen(const char *filename, const char *mode)$/;"	f	signature:(const char *filename, const char *mode)
Fopen	sctp/unp.h	/^FILE	*Fopen(const char *, const char *);$/;"	p	signature:(const char *, const char *)
Fork	key/unp.h	/^pid_t	 Fork(void);$/;"	p	signature:(void)
Fork	lib/unp.h	/^pid_t	 Fork(void);$/;"	p	signature:(void)
Fork	lib/wrapunix.c	/^Fork(void)$/;"	f	signature:(void)
Fork	sctp/unp.h	/^pid_t	 Fork(void);$/;"	p	signature:(void)
Fputs	key/unp.h	/^void	 Fputs(const char *, FILE *);$/;"	p	signature:(const char *, FILE *)
Fputs	lib/unp.h	/^void	 Fputs(const char *, FILE *);$/;"	p	signature:(const char *, FILE *)
Fputs	lib/wrapstdio.c	/^Fputs(const char *ptr, FILE *stream)$/;"	f	signature:(const char *ptr, FILE *stream)
Fputs	sctp/unp.h	/^void	 Fputs(const char *, FILE *);$/;"	p	signature:(const char *, FILE *)
GET_CMD	nonblock/web.h	/^#define	GET_CMD	/;"	d
GET_CMD	threads/web01.c	/^#define	GET_CMD	/;"	d	file:
GET_CMD	threads/web03.c	/^#define	GET_CMD	/;"	d	file:
Get_ifi_info	lib/get_ifi_info.c	/^Get_ifi_info(int family, int doaliases)$/;"	f	signature:(int family, int doaliases)
Get_ifi_info	lib/unpifi.h	/^struct ifi_info	*Get_ifi_info(int, int);$/;"	p	signature:(int, int)
Get_ifi_info	route/get_ifi_info.c	/^Get_ifi_info(int family, int doaliases)$/;"	f	signature:(int family, int doaliases)
Getmsg	debug/unpxti.h	/^int		 Getmsg(int, struct strbuf *, struct strbuf *, int *);$/;"	p	signature:(int, struct strbuf *, struct strbuf *, int *)
Getmsg	streams/unpxti.h	/^int		 Getmsg(int, struct strbuf *, struct strbuf *, int *);$/;"	p	signature:(int, struct strbuf *, struct strbuf *, int *)
Getpeername	key/unp.h	/^void	 Getpeername(int, SA *, socklen_t *);$/;"	p	signature:(int, SA *, socklen_t *)
Getpeername	lib/unp.h	/^void	 Getpeername(int, SA *, socklen_t *);$/;"	p	signature:(int, SA *, socklen_t *)
Getpeername	lib/wrapsock.c	/^Getpeername(int fd, struct sockaddr *sa, socklen_t *salenptr)$/;"	f	signature:(int fd, struct sockaddr *sa, socklen_t *salenptr)
Getpeername	sctp/unp.h	/^void	 Getpeername(int, SA *, socklen_t *);$/;"	p	signature:(int, SA *, socklen_t *)
Getsockname	key/unp.h	/^void	 Getsockname(int, SA *, socklen_t *);$/;"	p	signature:(int, SA *, socklen_t *)
Getsockname	lib/unp.h	/^void	 Getsockname(int, SA *, socklen_t *);$/;"	p	signature:(int, SA *, socklen_t *)
Getsockname	lib/wrapsock.c	/^Getsockname(int fd, struct sockaddr *sa, socklen_t *salenptr)$/;"	f	signature:(int fd, struct sockaddr *sa, socklen_t *salenptr)
Getsockname	sctp/unp.h	/^void	 Getsockname(int, SA *, socklen_t *);$/;"	p	signature:(int, SA *, socklen_t *)
Getsockopt	key/unp.h	/^void	 Getsockopt(int, int, int, void *, socklen_t *);$/;"	p	signature:(int, int, int, void *, socklen_t *)
Getsockopt	lib/unp.h	/^void	 Getsockopt(int, int, int, void *, socklen_t *);$/;"	p	signature:(int, int, int, void *, socklen_t *)
Getsockopt	lib/wrapsock.c	/^Getsockopt(int fd, int level, int optname, void *optval, socklen_t *optlenptr)$/;"	f	signature:(int fd, int level, int optname, void *optval, socklen_t *optlenptr)
Getsockopt	sctp/unp.h	/^void	 Getsockopt(int, int, int, void *, socklen_t *);$/;"	p	signature:(int, int, int, void *, socklen_t *)
Gettimeofday	key/unp.h	/^void	 Gettimeofday(struct timeval *, void *);$/;"	p	signature:(struct timeval *, void *)
Gettimeofday	lib/unp.h	/^void	 Gettimeofday(struct timeval *, void *);$/;"	p	signature:(struct timeval *, void *)
Gettimeofday	lib/wrapunix.c	/^Gettimeofday(struct timeval *tv, void *foo)$/;"	f	signature:(struct timeval *tv, void *foo)
Gettimeofday	sctp/unp.h	/^void	 Gettimeofday(struct timeval *, void *);$/;"	p	signature:(struct timeval *, void *)
HAVE_ADDRINFO_STRUCT	config.h	/^#define HAVE_ADDRINFO_STRUCT /;"	d
HAVE_ADDRINFO_STRUCT	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_ADDRINFO_STRUCT /;"	d
HAVE_ARPA_INET_H	config.h	/^#define HAVE_ARPA_INET_H /;"	d
HAVE_ARPA_INET_H	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_ARPA_INET_H /;"	d
HAVE_BZERO	config.h	/^#define HAVE_BZERO /;"	d
HAVE_BZERO	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_BZERO /;"	d
HAVE_ERRNO_H	config.h	/^#define HAVE_ERRNO_H /;"	d
HAVE_ERRNO_H	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_ERRNO_H /;"	d
HAVE_FCNTL_H	config.h	/^#define HAVE_FCNTL_H /;"	d
HAVE_FCNTL_H	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_FCNTL_H /;"	d
HAVE_GETADDRINFO	config.h	/^#define HAVE_GETADDRINFO /;"	d
HAVE_GETADDRINFO	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_GETADDRINFO /;"	d
HAVE_GETADDRINFO_PROTO	config.h	/^#define HAVE_GETADDRINFO_PROTO /;"	d
HAVE_GETADDRINFO_PROTO	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_GETADDRINFO_PROTO /;"	d
HAVE_GETHOSTBYNAME2	config.h	/^#define HAVE_GETHOSTBYNAME2 /;"	d
HAVE_GETHOSTBYNAME2	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_GETHOSTBYNAME2 /;"	d
HAVE_GETHOSTNAME	config.h	/^#define HAVE_GETHOSTNAME /;"	d
HAVE_GETHOSTNAME	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_GETHOSTNAME /;"	d
HAVE_GETHOSTNAME_PROTO	config.h	/^#define HAVE_GETHOSTNAME_PROTO /;"	d
HAVE_GETHOSTNAME_PROTO	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_GETHOSTNAME_PROTO /;"	d
HAVE_GETNAMEINFO	config.h	/^#define HAVE_GETNAMEINFO /;"	d
HAVE_GETNAMEINFO	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_GETNAMEINFO /;"	d
HAVE_GETNAMEINFO_PROTO	config.h	/^#define HAVE_GETNAMEINFO_PROTO /;"	d
HAVE_GETNAMEINFO_PROTO	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_GETNAMEINFO_PROTO /;"	d
HAVE_GETRUSAGE_PROTO	config.h	/^#define HAVE_GETRUSAGE_PROTO /;"	d
HAVE_GETRUSAGE_PROTO	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_GETRUSAGE_PROTO /;"	d
HAVE_HSTRERROR	config.h	/^#define HAVE_HSTRERROR /;"	d
HAVE_HSTRERROR	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_HSTRERROR /;"	d
HAVE_HSTRERROR_PROTO	config.h	/^#define HAVE_HSTRERROR_PROTO /;"	d
HAVE_HSTRERROR_PROTO	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_HSTRERROR_PROTO /;"	d
HAVE_IF_NAMEINDEX_STRUCT	config.h	/^#define HAVE_IF_NAMEINDEX_STRUCT /;"	d
HAVE_IF_NAMEINDEX_STRUCT	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_IF_NAMEINDEX_STRUCT /;"	d
HAVE_IF_NAMETOINDEX	config.h	/^#define HAVE_IF_NAMETOINDEX /;"	d
HAVE_IF_NAMETOINDEX	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_IF_NAMETOINDEX /;"	d
HAVE_IF_NAMETOINDEX_PROTO	config.h	/^#define HAVE_IF_NAMETOINDEX_PROTO /;"	d
HAVE_IF_NAMETOINDEX_PROTO	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_IF_NAMETOINDEX_PROTO /;"	d
HAVE_INET6_RTH_INIT	config.h	/^#define HAVE_INET6_RTH_INIT /;"	d
HAVE_INET_ATON	config.h	/^#define HAVE_INET_ATON /;"	d
HAVE_INET_ATON	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_INET_ATON /;"	d
HAVE_INET_ATON_PROTO	config.h	/^#define HAVE_INET_ATON_PROTO /;"	d
HAVE_INET_ATON_PROTO	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_INET_ATON_PROTO /;"	d
HAVE_INET_PTON	config.h	/^#define HAVE_INET_PTON /;"	d
HAVE_INET_PTON	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_INET_PTON /;"	d
HAVE_INET_PTON_PROTO	config.h	/^#define HAVE_INET_PTON_PROTO /;"	d
HAVE_INET_PTON_PROTO	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_INET_PTON_PROTO /;"	d
HAVE_KEVENT	config.h	/^#define HAVE_KEVENT /;"	d
HAVE_KEVENT	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_KEVENT /;"	d
HAVE_KQUEUE	config.h	/^#define HAVE_KQUEUE /;"	d
HAVE_KQUEUE	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_KQUEUE /;"	d
HAVE_LIBPTHREAD	config.h	/^#define HAVE_LIBPTHREAD /;"	d
HAVE_LIBRESOLV	config.h	/^#define HAVE_LIBRESOLV /;"	d
HAVE_MKSTEMP	config.h	/^#define HAVE_MKSTEMP /;"	d
HAVE_MKSTEMP	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_MKSTEMP /;"	d
HAVE_MSGHDR_MSG_CONTROL	config.h	/^#define HAVE_MSGHDR_MSG_CONTROL /;"	d
HAVE_MSGHDR_MSG_CONTROL	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_MSGHDR_MSG_CONTROL /;"	d
HAVE_NETCONFIG_H	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_NETCONFIG_H /;"	d
HAVE_NETDB_H	config.h	/^#define HAVE_NETDB_H /;"	d
HAVE_NETDB_H	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_NETDB_H /;"	d
HAVE_NETINET_IN_H	config.h	/^#define HAVE_NETINET_IN_H /;"	d
HAVE_NETINET_IN_H	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_NETINET_IN_H /;"	d
HAVE_NET_IF_DL_H	config.h	/^#define HAVE_NET_IF_DL_H /;"	d
HAVE_NET_IF_DL_H	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_NET_IF_DL_H /;"	d
HAVE_POLL	config.h	/^#define HAVE_POLL /;"	d
HAVE_POLL	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_POLL /;"	d
HAVE_POLL_H	config.h	/^#define HAVE_POLL_H /;"	d
HAVE_POLL_H	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_POLL_H /;"	d
HAVE_PSELECT	config.h	/^#define HAVE_PSELECT /;"	d
HAVE_PSELECT	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_PSELECT /;"	d
HAVE_PSELECT_PROTO	config.h	/^#define HAVE_PSELECT_PROTO /;"	d
HAVE_PSELECT_PROTO	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_PSELECT_PROTO /;"	d
HAVE_PTHREAD_H	config.h	/^#define HAVE_PTHREAD_H /;"	d
HAVE_PTHREAD_H	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_PTHREAD_H /;"	d
HAVE_SIGNAL_H	config.h	/^#define HAVE_SIGNAL_H /;"	d
HAVE_SIGNAL_H	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_SIGNAL_H /;"	d
HAVE_SNPRINTF	config.h	/^#define HAVE_SNPRINTF /;"	d
HAVE_SNPRINTF	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_SNPRINTF /;"	d
HAVE_SNPRINTF_PROTO	config.h	/^#define HAVE_SNPRINTF_PROTO /;"	d
HAVE_SNPRINTF_PROTO	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_SNPRINTF_PROTO /;"	d
HAVE_SOCKADDR_DL_STRUCT	config.h	/^#define HAVE_SOCKADDR_DL_STRUCT /;"	d
HAVE_SOCKADDR_DL_STRUCT	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_SOCKADDR_DL_STRUCT /;"	d
HAVE_SOCKADDR_SA_LEN	config.h	/^#define HAVE_SOCKADDR_SA_LEN /;"	d
HAVE_SOCKADDR_SA_LEN	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_SOCKADDR_SA_LEN /;"	d
HAVE_SOCKATMARK	config.h	/^#define HAVE_SOCKATMARK /;"	d
HAVE_SOCKATMARK	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_SOCKATMARK /;"	d
HAVE_SOCKATMARK_PROTO	config.h	/^#define HAVE_SOCKATMARK_PROTO /;"	d
HAVE_SOCKATMARK_PROTO	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_SOCKATMARK_PROTO /;"	d
HAVE_STDIO_H	config.h	/^#define HAVE_STDIO_H /;"	d
HAVE_STDIO_H	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_STDIO_H /;"	d
HAVE_STDLIB_H	config.h	/^#define HAVE_STDLIB_H /;"	d
HAVE_STDLIB_H	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_STDLIB_H /;"	d
HAVE_STRINGS_H	config.h	/^#define HAVE_STRINGS_H /;"	d
HAVE_STRINGS_H	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_STRINGS_H /;"	d
HAVE_STRING_H	config.h	/^#define HAVE_STRING_H /;"	d
HAVE_STRING_H	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_STRING_H /;"	d
HAVE_STRUCT_IFREQ_IFR_MTU	config.h	/^#define HAVE_STRUCT_IFREQ_IFR_MTU /;"	d
HAVE_STRUCT_IFREQ_IFR_MTU	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_STRUCT_IFREQ_IFR_MTU /;"	d
HAVE_STRUCT_SOCKADDR_STORAGE	config.h	/^#define HAVE_STRUCT_SOCKADDR_STORAGE /;"	d
HAVE_STRUCT_SOCKADDR_STORAGE	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_STRUCT_SOCKADDR_STORAGE /;"	d
HAVE_SYS_EVENT_H	config.h	/^#define HAVE_SYS_EVENT_H /;"	d
HAVE_SYS_EVENT_H	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_SYS_EVENT_H /;"	d
HAVE_SYS_FILIO_H	config.h	/^#define HAVE_SYS_FILIO_H /;"	d
HAVE_SYS_FILIO_H	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_SYS_FILIO_H /;"	d
HAVE_SYS_IOCTL_H	config.h	/^#define HAVE_SYS_IOCTL_H /;"	d
HAVE_SYS_IOCTL_H	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_SYS_IOCTL_H /;"	d
HAVE_SYS_PARAM_H	config.h	/^#define HAVE_SYS_PARAM_H /;"	d
HAVE_SYS_SELECT_H	config.h	/^#define HAVE_SYS_SELECT_H /;"	d
HAVE_SYS_SELECT_H	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_SYS_SELECT_H /;"	d
HAVE_SYS_SOCKET_H	config.h	/^#define HAVE_SYS_SOCKET_H /;"	d
HAVE_SYS_SOCKET_H	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_SYS_SOCKET_H /;"	d
HAVE_SYS_SOCKIO_H	config.h	/^#define HAVE_SYS_SOCKIO_H /;"	d
HAVE_SYS_SOCKIO_H	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_SYS_SOCKIO_H /;"	d
HAVE_SYS_STAT_H	config.h	/^#define HAVE_SYS_STAT_H /;"	d
HAVE_SYS_STAT_H	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_SYS_STAT_H /;"	d
HAVE_SYS_SYSCTL_H	config.h	/^#define HAVE_SYS_SYSCTL_H /;"	d
HAVE_SYS_SYSCTL_H	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_SYS_SYSCTL_H /;"	d
HAVE_SYS_TIME_H	config.h	/^#define HAVE_SYS_TIME_H /;"	d
HAVE_SYS_TIME_H	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_SYS_TIME_H /;"	d
HAVE_SYS_TYPES_H	config.h	/^#define HAVE_SYS_TYPES_H /;"	d
HAVE_SYS_TYPES_H	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_SYS_TYPES_H /;"	d
HAVE_SYS_UIO_H	config.h	/^#define HAVE_SYS_UIO_H /;"	d
HAVE_SYS_UIO_H	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_SYS_UIO_H /;"	d
HAVE_SYS_UN_H	config.h	/^#define HAVE_SYS_UN_H /;"	d
HAVE_SYS_UN_H	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_SYS_UN_H /;"	d
HAVE_SYS_WAIT_H	config.h	/^#define HAVE_SYS_WAIT_H /;"	d
HAVE_SYS_WAIT_H	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_SYS_WAIT_H /;"	d
HAVE_TIMESPEC_STRUCT	config.h	/^#define HAVE_TIMESPEC_STRUCT /;"	d
HAVE_TIMESPEC_STRUCT	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_TIMESPEC_STRUCT /;"	d
HAVE_TIME_H	config.h	/^#define HAVE_TIME_H /;"	d
HAVE_TIME_H	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_TIME_H /;"	d
HAVE_UNISTD_H	config.h	/^#define HAVE_UNISTD_H /;"	d
HAVE_UNISTD_H	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_UNISTD_H /;"	d
HAVE_VSNPRINTF	config.h	/^#define HAVE_VSNPRINTF /;"	d
HAVE_VSNPRINTF	sparc64-unknown-freebsd5.1/config.h	/^#define HAVE_VSNPRINTF /;"	d
HENTBUFSIZ	libfree/getaddrinfo.c	/^#define	HENTBUFSIZ	/;"	d	file:
HENTBUFSIZ	libfree/getnameinfo.c	/^#define	HENTBUFSIZ	/;"	d	file:
HENTMAXADDR	libfree/getaddrinfo.c	/^#define	HENTMAXADDR	/;"	d	file:
Host_serv	key/unp.h	/^struct addrinfo *Host_serv(const char *, const char *, int, int);$/;"	p	signature:(const char *, const char *, int, int)
Host_serv	lib/host_serv.c	/^Host_serv(const char *host, const char *serv, int family, int socktype)$/;"	f	signature:(const char *host, const char *serv, int family, int socktype)
Host_serv	lib/unp.h	/^struct addrinfo *Host_serv(const char *, const char *, int, int);$/;"	p	signature:(const char *, const char *, int, int)
Host_serv	sctp/unp.h	/^struct addrinfo *Host_serv(const char *, const char *, int, int);$/;"	p	signature:(const char *, const char *, int, int)
ICMPD_PATH	icmpd/unpicmpd.h	/^#define	ICMPD_PATH	/;"	d
ICMPV6_DEST_UNREACH	ping/old/icmp6.h	/^#define	ICMPV6_DEST_UNREACH	/;"	d
ICMPV6_DEST_UNREACH_ADDR	ping/old/icmp6.h	/^#define	ICMPV6_DEST_UNREACH_ADDR /;"	d
ICMPV6_DEST_UNREACH_ADMIN	ping/old/icmp6.h	/^#define	ICMPV6_DEST_UNREACH_ADMIN /;"	d
ICMPV6_DEST_UNREACH_NOPORT	ping/old/icmp6.h	/^#define	ICMPV6_DEST_UNREACH_NOPORT	/;"	d
ICMPV6_DEST_UNREACH_NOROUTE	ping/old/icmp6.h	/^#define	ICMPV6_DEST_UNREACH_NOROUTE	/;"	d
ICMPV6_DEST_UNREACH_NOTNEIGHBOR	ping/old/icmp6.h	/^#define	ICMPV6_DEST_UNREACH_NOTNEIGHBOR	/;"	d
ICMPV6_ECHORPLY	ping/old/icmp6.h	/^#define	ICMPV6_ECHORPLY	/;"	d
ICMPV6_ECHORQST	ping/old/icmp6.h	/^#define	ICMPV6_ECHORQST	/;"	d
ICMPV6_INFOMSG_MASK	ping/old/icmp6.h	/^#define	ICMPV6_INFOMSG_MASK	/;"	d
ICMPV6_MGM_QUERY	ping/old/icmp6.h	/^#define	ICMPV6_MGM_QUERY	/;"	d
ICMPV6_MGM_REDUCTION	ping/old/icmp6.h	/^#define	ICMPV6_MGM_REDUCTION	/;"	d
ICMPV6_MGM_REPORT	ping/old/icmp6.h	/^#define	ICMPV6_MGM_REPORT	/;"	d
ICMPV6_PARAMPROB	ping/old/icmp6.h	/^#define	ICMPV6_PARAMPROB	/;"	d
ICMPV6_PARAMPROB_HDR	ping/old/icmp6.h	/^#define	ICMPV6_PARAMPROB_HDR	/;"	d
ICMPV6_PARAMPROB_NXT_HDR	ping/old/icmp6.h	/^#define	ICMPV6_PARAMPROB_NXT_HDR	/;"	d
ICMPV6_PARAMPROB_OPTS	ping/old/icmp6.h	/^#define	ICMPV6_PARAMPROB_OPTS	/;"	d
ICMPV6_PKT_TOOBIG	ping/old/icmp6.h	/^#define	ICMPV6_PKT_TOOBIG	/;"	d
ICMPV6_TIME_EXCEED	ping/old/icmp6.h	/^#define	ICMPV6_TIME_EXCEED	/;"	d
ICMPV6_TIME_EXCEED_HOPS	ping/old/icmp6.h	/^#define	ICMPV6_TIME_EXCEED_HOPS	/;"	d
ICMPV6_TIME_EXCEED_REASSEMBLY	ping/old/icmp6.h	/^#define	ICMPV6_TIME_EXCEED_REASSEMBLY	/;"	d
IFI_ALIAS	lib/unpifi.h	/^#define	IFI_ALIAS	/;"	d
IFI_HADDR	lib/unpifi.h	/^#define	IFI_HADDR	/;"	d
IFI_NAME	lib/unpifi.h	/^#define	IFI_NAME	/;"	d
IN6ADDRSZ	libfree/inet_ntop.c	/^#define	IN6ADDRSZ	/;"	d	file:
IN6ADDRSZ	libfree/inet_pton.c	/^#define	IN6ADDRSZ	/;"	d	file:
INADDRSZ	libfree/inet_pton.c	/^#define	INADDRSZ	/;"	d	file:
INADDR_NONE	key/unp.h	/^#define	INADDR_NONE	/;"	d
INADDR_NONE	lib/unp.h	/^#define	INADDR_NONE	/;"	d
INADDR_NONE	sctp/unp.h	/^#define	INADDR_NONE	/;"	d
INET6	libfree/getaddrinfo.c	/^#define	INET6	/;"	d	file:
INET6_ADDRSTRLEN	key/unp.h	/^#define	INET6_ADDRSTRLEN	/;"	d
INET6_ADDRSTRLEN	lib/unp.h	/^#define	INET6_ADDRSTRLEN	/;"	d
INET6_ADDRSTRLEN	sctp/unp.h	/^#define	INET6_ADDRSTRLEN	/;"	d
INET_ADDRSTRLEN	key/unp.h	/^#define	INET_ADDRSTRLEN	/;"	d
INET_ADDRSTRLEN	lib/unp.h	/^#define	INET_ADDRSTRLEN	/;"	d
INET_ADDRSTRLEN	libfree/inet_ntop_ipv4.c	/^#define	INET_ADDRSTRLEN	/;"	d	file:
INET_ADDRSTRLEN	sctp/unp.h	/^#define	INET_ADDRSTRLEN	/;"	d
INET_NTOA	sock/sock.h	/^#define	INET_NTOA(/;"	d
INFTIM	debug/unpxti.h	/^#undef	INFTIM	/;"	d
INFTIM	key/unp.h	/^#define INFTIM /;"	d
INFTIM	lib/unp.h	/^#define INFTIM /;"	d
INFTIM	sctp/unp.h	/^#define INFTIM /;"	d
INFTIM	streams/unpxti.h	/^#undef	INFTIM	/;"	d
INFTIM_UNPH	key/unp.h	/^#define	INFTIM_UNPH	/;"	d
INFTIM_UNPH	lib/unp.h	/^#define	INFTIM_UNPH	/;"	d
INFTIM_UNPH	sctp/unp.h	/^#define	INFTIM_UNPH	/;"	d
INT16SZ	libfree/inet_ntop.c	/^#define	INT16SZ	/;"	d	file:
INT16SZ	libfree/inet_pton.c	/^#define	INT16SZ	/;"	d	file:
IPV4	config.h	/^#define IPV4 /;"	d
IPV4	libfree/getaddrinfo.c	/^#define	IPV4	/;"	d	file:
IPV4	libfree/getnameinfo.c	/^#define	IPV4	/;"	d	file:
IPV4	sparc64-unknown-freebsd5.1/config.h	/^#define IPV4 /;"	d
IPV6	config.h	/^#define IPV6 /;"	d
IPV6	libfree/getaddrinfo.c	/^#define	IPV6	/;"	d	file:
IPV6	libfree/getnameinfo.c	/^#define	IPV6	/;"	d	file:
IPV6	sparc64-unknown-freebsd5.1/config.h	/^#define IPV6 /;"	d
IPv4	config.h	/^#define IPv4 /;"	d
IPv4	sparc64-unknown-freebsd5.1/config.h	/^#define IPv4 /;"	d
IPv6	config.h	/^#define IPv6 /;"	d
IPv6	sparc64-unknown-freebsd5.1/config.h	/^#define IPv6 /;"	d
If_indextoname	key/unp.h	/^char			*If_indextoname(unsigned int, char *);$/;"	p	signature:(unsigned int, char *)
If_indextoname	lib/if_indextoname.c	/^If_indextoname(unsigned int index, char *name)$/;"	f	signature:(unsigned int index, char *name)
If_indextoname	lib/unp.h	/^char			*If_indextoname(unsigned int, char *);$/;"	p	signature:(unsigned int, char *)
If_indextoname	libroute/if_indextoname.c	/^If_indextoname(unsigned int idx, char *name)$/;"	f	signature:(unsigned int idx, char *name)
If_indextoname	sctp/unp.h	/^char			*If_indextoname(unsigned int, char *);$/;"	p	signature:(unsigned int, char *)
If_nameindex	key/unp.h	/^struct if_nameindex	*If_nameindex(void);$/;"	p	signature:(void)
If_nameindex	lib/if_nameindex.c	/^If_nameindex(void)$/;"	f	signature:(void)
If_nameindex	lib/unp.h	/^struct if_nameindex	*If_nameindex(void);$/;"	p	signature:(void)
If_nameindex	libroute/if_nameindex.c	/^If_nameindex(void)$/;"	f	signature:(void)
If_nameindex	sctp/unp.h	/^struct if_nameindex	*If_nameindex(void);$/;"	p	signature:(void)
If_nametoindex	key/unp.h	/^unsigned int		 If_nametoindex(const char *);$/;"	p	signature:(const char *)
If_nametoindex	lib/if_nametoindex.c	/^If_nametoindex(const char *name)$/;"	f	signature:(const char *name)
If_nametoindex	lib/unp.h	/^unsigned int		 If_nametoindex(const char *);$/;"	p	signature:(const char *)
If_nametoindex	libroute/if_nametoindex.c	/^If_nametoindex(const char *name)$/;"	f	signature:(const char *name)
If_nametoindex	sctp/unp.h	/^unsigned int		 If_nametoindex(const char *);$/;"	p	signature:(const char *)
Inet6_rth_add	lib/unp.h	/^void	 Inet6_rth_add(void *, const struct in6_addr *);$/;"	p	signature:(void *, const struct in6_addr *)
Inet6_rth_add	lib/wrapsock.c	/^Inet6_rth_add(void *rthbuf, const struct in6_addr *addr)$/;"	f	signature:(void *rthbuf, const struct in6_addr *addr)
Inet6_rth_getaddr	lib/unp.h	/^struct in6_addr *Inet6_rth_getaddr(const void *, int);$/;"	p	signature:(const void *, int)
Inet6_rth_getaddr	lib/wrapsock.c	/^Inet6_rth_getaddr(const void *rthbuf, int idx)$/;"	f	signature:(const void *rthbuf, int idx)
Inet6_rth_init	lib/unp.h	/^void	*Inet6_rth_init(void *, socklen_t, int, int);$/;"	p	signature:(void *, socklen_t, int, int)
Inet6_rth_init	lib/wrapsock.c	/^Inet6_rth_init(void *rthbuf, socklen_t rthlen, int type, int segments)$/;"	f	signature:(void *rthbuf, socklen_t rthlen, int type, int segments)
Inet6_rth_reverse	lib/unp.h	/^void	 Inet6_rth_reverse(const void *, void *);$/;"	p	signature:(const void *, void *)
Inet6_rth_reverse	lib/wrapsock.c	/^Inet6_rth_reverse(const void *in, void *out)$/;"	f	signature:(const void *in, void *out)
Inet6_rth_segments	lib/unp.h	/^int		 Inet6_rth_segments(const void *);$/;"	p	signature:(const void *)
Inet6_rth_segments	lib/wrapsock.c	/^Inet6_rth_segments(const void *rthbuf)$/;"	f	signature:(const void *rthbuf)
Inet6_rth_space	lib/unp.h	/^int		 Inet6_rth_space(int, int);$/;"	p	signature:(int, int)
Inet6_rth_space	lib/wrapsock.c	/^Inet6_rth_space(int type, int segments)$/;"	f	signature:(int type, int segments)
Inet_ntop	key/unp.h	/^const char		*Inet_ntop(int, const void *, char *, size_t);$/;"	p	signature:(int, const void *, char *, size_t)
Inet_ntop	lib/unp.h	/^const char		*Inet_ntop(int, const void *, char *, size_t);$/;"	p	signature:(int, const void *, char *, size_t)
Inet_ntop	lib/wraplib.c	/^Inet_ntop(int family, const void *addrptr, char *strptr, size_t len)$/;"	f	signature:(int family, const void *addrptr, char *strptr, size_t len)
Inet_ntop	sctp/unp.h	/^const char		*Inet_ntop(int, const void *, char *, size_t);$/;"	p	signature:(int, const void *, char *, size_t)
Inet_pton	key/unp.h	/^void			 Inet_pton(int, const char *, void *);$/;"	p	signature:(int, const char *, void *)
Inet_pton	lib/unp.h	/^void			 Inet_pton(int, const char *, void *);$/;"	p	signature:(int, const char *, void *)
Inet_pton	lib/wraplib.c	/^Inet_pton(int family, const char *strptr, void *addrptr)$/;"	f	signature:(int family, const char *strptr, void *addrptr)
Inet_pton	sctp/unp.h	/^void			 Inet_pton(int, const char *, void *);$/;"	p	signature:(int, const char *, void *)
Ioctl	key/unp.h	/^int		 Ioctl(int, int, void *);$/;"	p	signature:(int, int, void *)
Ioctl	lib/unp.h	/^int		 Ioctl(int, int, void *);$/;"	p	signature:(int, int, void *)
Ioctl	lib/wrapunix.c	/^Ioctl(int fd, int request, void *arg)$/;"	f	signature:(int fd, int request, void *arg)
Ioctl	sctp/unp.h	/^int		 Ioctl(int, int, void *);$/;"	p	signature:(int, int, void *)
Isfdtype	key/unp.h	/^int		 Isfdtype(int, int);$/;"	p	signature:(int, int)
Isfdtype	sctp/unp.h	/^int		 Isfdtype(int, int);$/;"	p	signature:(int, int)
JAN_1970	ssntp/ntp.h	/^#define	JAN_1970	/;"	d
Kevent	lib/unp.h	/^int		 Kevent(int, const struct kevent *, int,$/;"	p	signature:(int, const struct kevent *, int, struct kevent *, int, const struct timespec *)
Kevent	lib/wrapsock.c	/^Kevent(int kq, const struct kevent *changelist, int nchanges,$/;"	f	signature:(int kq, const struct kevent *changelist, int nchanges, struct kevent *eventlist, int nevents, const struct timespec *timeout)
Kqueue	lib/unp.h	/^int		 Kqueue(void);$/;"	p	signature:(void)
Kqueue	lib/wrapsock.c	/^Kqueue(void)$/;"	f	signature:(void)
LISTENQ	key/unp.h	/^#define	LISTENQ	/;"	d
LISTENQ	lib/unp.h	/^#define	LISTENQ	/;"	d
LISTENQ	sctp/unp.h	/^#define	LISTENQ	/;"	d
LOCAL	libfree/getaddrinfo.c	/^#define	LOCAL	/;"	d	file:
Listen	key/unp.h	/^void	 Listen(int, int);$/;"	p	signature:(int, int)
Listen	lib/unp.h	/^void	 Listen(int, int);$/;"	p	signature:(int, int)
Listen	lib/wrapsock.c	/^Listen(int fd, int backlog)$/;"	f	signature:(int fd, int backlog)
Listen	sctp/unp.h	/^void	 Listen(int, int);$/;"	p	signature:(int, int)
MAXBACKLOG	debug/backlog.c	/^#define	MAXBACKLOG	/;"	d	file:
MAXBACKLOG	debug/qlen.c	/^#define	MAXBACKLOG	/;"	d	file:
MAXDG	sigio/dgecho01.c	/^#define	MAXDG	/;"	d	file:
MAXFD	lib/daemon_init.c	/^#define	MAXFD	/;"	d	file:
MAXFILES	nonblock/web.h	/^#define	MAXFILES	/;"	d
MAXFILES	threads/web01.c	/^#define	MAXFILES	/;"	d	file:
MAXFILES	threads/web02.c	/^#define	MAXFILES	/;"	d	file:
MAXFILES	threads/web03.c	/^#define	MAXFILES	/;"	d	file:
MAXICMPLEN	ping/bsdping.c	/^#define	MAXICMPLEN	/;"	d	file:
MAXIPLEN	ping/bsdping.c	/^#define	MAXIPLEN	/;"	d	file:
MAXLINE	advio/dgechoaddr.c	/^#define	MAXLINE	/;"	d	file:
MAXLINE	advio/dgechoaddr.c	/^#undef	MAXLINE$/;"	d	file:
MAXLINE	advio/old/dgechoaddr.c	/^#define	MAXLINE	/;"	d	file:
MAXLINE	advio/old/dgechoaddr.c	/^#undef	MAXLINE$/;"	d	file:
MAXLINE	key/unp.h	/^#define	MAXLINE	/;"	d
MAXLINE	lib/unp.h	/^#define	MAXLINE	/;"	d
MAXLINE	sctp/unp.h	/^#define	MAXLINE	/;"	d
MAXLINE	sock/ourhdr.h	/^#define	MAXLINE	/;"	d
MAXLINE	udpcliserv/dgclibig.c	/^#define	MAXLINE /;"	d	file:
MAXLINE	udpcliserv/dgclibig.c	/^#undef	MAXLINE$/;"	d	file:
MAXN	server/client.c	/^#define	MAXN	/;"	d	file:
MAXN	server/clientrst.c	/^#define	MAXN	/;"	d	file:
MAXN	server/web_child.c	/^#define	MAXN	/;"	d	file:
MAXN	server/web_child_r.c	/^#define	MAXN	/;"	d	file:
MAXNCLI	server/pthread08.h	/^#define	MAXNCLI	/;"	d
MAXPACKET	ping/bsdping.c	/^#define	MAXPACKET	/;"	d	file:
MAXSOCKADDR	key/unp.h	/^#define	MAXSOCKADDR /;"	d
MAXSOCKADDR	sctp/unp.h	/^#define	MAXSOCKADDR /;"	d
MAXWAIT	ping/bsdping.c	/^#define	MAXWAIT	/;"	d	file:
MAX_DUP_CHK	ping/bsdping.c	/^#define	MAX_DUP_CHK	/;"	d	file:
MCAST	config.h	/^#define MCAST /;"	d
MCAST	sparc64-unknown-freebsd5.1/config.h	/^#define MCAST /;"	d
MODE_BROADCAST	ssntp/ntp.h	/^#define	MODE_BROADCAST	/;"	d
MODE_CLIENT	ssntp/ntp.h	/^#define	MODE_CLIENT	/;"	d
MODE_MASK	ssntp/ntp.h	/^#define	MODE_MASK	/;"	d
MODE_SERVER	ssntp/ntp.h	/^#define	MODE_SERVER	/;"	d
Malloc	key/unp.h	/^void	*Malloc(size_t);$/;"	p	signature:(size_t)
Malloc	lib/unp.h	/^void	*Malloc(size_t);$/;"	p	signature:(size_t)
Malloc	lib/wrapunix.c	/^Malloc(size_t size)$/;"	f	signature:(size_t size)
Malloc	sctp/unp.h	/^void	*Malloc(size_t);$/;"	p	signature:(size_t)
Mcast_block_source	key/unp.h	/^void	 Mcast_block_source(int sockfd, const SA *src, socklen_t srclen,$/;"	p	signature:(int sockfd, const SA *src, socklen_t srclen, const SA *grp, socklen_t grplen)
Mcast_block_source	lib/mcast_join.c	/^Mcast_block_source(int sockfd, const SA *src, socklen_t srclen,$/;"	f	signature:(int sockfd, const SA *src, socklen_t srclen, const SA *grp, socklen_t grplen)
Mcast_block_source	lib/unp.h	/^void	 Mcast_block_source(int sockfd, const SA *src, socklen_t srclen,$/;"	p	signature:(int sockfd, const SA *src, socklen_t srclen, const SA *grp, socklen_t grplen)
Mcast_get_if	key/unp.h	/^int		 Mcast_get_if(int);$/;"	p	signature:(int)
Mcast_get_if	lib/mcast_get_if.c	/^Mcast_get_if(int sockfd)$/;"	f	signature:(int sockfd)
Mcast_get_if	lib/unp.h	/^int		 Mcast_get_if(int);$/;"	p	signature:(int)
Mcast_get_if	sctp/unp.h	/^int		 Mcast_get_if(int);$/;"	p	signature:(int)
Mcast_get_loop	key/unp.h	/^int		 Mcast_get_loop(int);$/;"	p	signature:(int)
Mcast_get_loop	lib/mcast_get_loop.c	/^Mcast_get_loop(int sockfd)$/;"	f	signature:(int sockfd)
Mcast_get_loop	lib/unp.h	/^int		 Mcast_get_loop(int);$/;"	p	signature:(int)
Mcast_get_loop	sctp/unp.h	/^int		 Mcast_get_loop(int);$/;"	p	signature:(int)
Mcast_get_ttl	key/unp.h	/^int		 Mcast_get_ttl(int);$/;"	p	signature:(int)
Mcast_get_ttl	lib/mcast_get_ttl.c	/^Mcast_get_ttl(int sockfd)$/;"	f	signature:(int sockfd)
Mcast_get_ttl	lib/unp.h	/^int		 Mcast_get_ttl(int);$/;"	p	signature:(int)
Mcast_get_ttl	sctp/unp.h	/^int		 Mcast_get_ttl(int);$/;"	p	signature:(int)
Mcast_join	key/unp.h	/^void	 Mcast_join(int, const SA *, socklen_t, const char *, u_int);$/;"	p	signature:(int, const SA *, socklen_t, const char *, u_int)
Mcast_join	lib/mcast_join.c	/^Mcast_join(int sockfd, const SA *grp, socklen_t grplen,$/;"	f	signature:(int sockfd, const SA *grp, socklen_t grplen, const char *ifname, u_int ifindex)
Mcast_join	lib/unp.h	/^void	 Mcast_join(int, const SA *, socklen_t, const char *, u_int);$/;"	p	signature:(int, const SA *, socklen_t, const char *, u_int)
Mcast_join	sctp/unp.h	/^void	 Mcast_join(int, const SA *, socklen_t, const char *, u_int);$/;"	p	signature:(int, const SA *, socklen_t, const char *, u_int)
Mcast_join_source_group	key/unp.h	/^void	 Mcast_join_source_group(int sockfd, const SA *src, socklen_t srclen,$/;"	p	signature:(int sockfd, const SA *src, socklen_t srclen, const SA *grp, socklen_t grplen, const char *ifname, u_int ifindex)
Mcast_join_source_group	lib/mcast_join.c	/^Mcast_join_source_group(int sockfd, const SA *src, socklen_t srclen,$/;"	f	signature:(int sockfd, const SA *src, socklen_t srclen, const SA *grp, socklen_t grplen, const char *ifname, u_int ifindex)
Mcast_join_source_group	lib/unp.h	/^void	 Mcast_join_source_group(int sockfd, const SA *src, socklen_t srclen,$/;"	p	signature:(int sockfd, const SA *src, socklen_t srclen, const SA *grp, socklen_t grplen, const char *ifname, u_int ifindex)
Mcast_leave	key/unp.h	/^void	 Mcast_leave(int, const SA *, socklen_t);$/;"	p	signature:(int, const SA *, socklen_t)
Mcast_leave	lib/mcast_leave.c	/^Mcast_leave(int sockfd, const SA *grp, socklen_t grplen)$/;"	f	signature:(int sockfd, const SA *grp, socklen_t grplen)
Mcast_leave	lib/unp.h	/^void	 Mcast_leave(int, const SA *, socklen_t);$/;"	p	signature:(int, const SA *, socklen_t)
Mcast_leave	sctp/unp.h	/^void	 Mcast_leave(int, const SA *, socklen_t);$/;"	p	signature:(int, const SA *, socklen_t)
Mcast_leave_source_group	key/unp.h	/^void	 Mcast_leave_source_group(int sockfd, const SA *src, socklen_t srclen,$/;"	p	signature:(int sockfd, const SA *src, socklen_t srclen, const SA *grp, socklen_t grplen)
Mcast_leave_source_group	lib/mcast_leave.c	/^Mcast_leave_source_group(int sockfd, const SA *src, socklen_t srclen,$/;"	f	signature:(int sockfd, const SA *src, socklen_t srclen, const SA *grp, socklen_t grplen)
Mcast_leave_source_group	lib/unp.h	/^void	 Mcast_leave_source_group(int sockfd, const SA *src, socklen_t srclen,$/;"	p	signature:(int sockfd, const SA *src, socklen_t srclen, const SA *grp, socklen_t grplen)
Mcast_set_if	key/unp.h	/^void	 Mcast_set_if(int, const char *, u_int);$/;"	p	signature:(int, const char *, u_int)
Mcast_set_if	lib/mcast_set_if.c	/^Mcast_set_if(int sockfd, const char *ifname, u_int ifindex)$/;"	f	signature:(int sockfd, const char *ifname, u_int ifindex)
Mcast_set_if	lib/unp.h	/^void	 Mcast_set_if(int, const char *, u_int);$/;"	p	signature:(int, const char *, u_int)
Mcast_set_if	sctp/unp.h	/^void	 Mcast_set_if(int, const char *, u_int);$/;"	p	signature:(int, const char *, u_int)
Mcast_set_loop	key/unp.h	/^void	 Mcast_set_loop(int, int);$/;"	p	signature:(int, int)
Mcast_set_loop	lib/mcast_set_loop.c	/^Mcast_set_loop(int sockfd, int onoff)$/;"	f	signature:(int sockfd, int onoff)
Mcast_set_loop	lib/unp.h	/^void	 Mcast_set_loop(int, int);$/;"	p	signature:(int, int)
Mcast_set_loop	sctp/unp.h	/^void	 Mcast_set_loop(int, int);$/;"	p	signature:(int, int)
Mcast_set_ttl	key/unp.h	/^void	 Mcast_set_ttl(int, int);$/;"	p	signature:(int, int)
Mcast_set_ttl	lib/mcast_set_ttl.c	/^Mcast_set_ttl(int sockfd, int val)$/;"	f	signature:(int sockfd, int val)
Mcast_set_ttl	lib/unp.h	/^void	 Mcast_set_ttl(int, int);$/;"	p	signature:(int, int)
Mcast_set_ttl	sctp/unp.h	/^void	 Mcast_set_ttl(int, int);$/;"	p	signature:(int, int)
Mcast_unblock_source	key/unp.h	/^void	 Mcast_unblock_source(int sockfd, const SA *src, socklen_t srclen,$/;"	p	signature:(int sockfd, const SA *src, socklen_t srclen, const SA *grp, socklen_t grplen)
Mcast_unblock_source	lib/mcast_join.c	/^Mcast_unblock_source(int sockfd, const SA *src, socklen_t srclen,$/;"	f	signature:(int sockfd, const SA *src, socklen_t srclen, const SA *grp, socklen_t grplen)
Mcast_unblock_source	lib/unp.h	/^void	 Mcast_unblock_source(int sockfd, const SA *src, socklen_t srclen,$/;"	p	signature:(int sockfd, const SA *src, socklen_t srclen, const SA *grp, socklen_t grplen)
Mkstemp	key/unp.h	/^int	 Mkstemp(char *);$/;"	p	signature:(char *)
Mkstemp	lib/unp.h	/^int	 Mkstemp(char *);$/;"	p	signature:(char *)
Mkstemp	lib/wrapunix.c	/^Mkstemp(char *template)$/;"	f	signature:(char *template)
Mktemp	sctp/unp.h	/^void	 Mktemp(char *);$/;"	p	signature:(char *)
Mmap	key/unp.h	/^void	*Mmap(void *, size_t, int, int, int, off_t);$/;"	p	signature:(void *, size_t, int, int, int, off_t)
Mmap	lib/unp.h	/^void	*Mmap(void *, size_t, int, int, int, off_t);$/;"	p	signature:(void *, size_t, int, int, int, off_t)
Mmap	lib/wrapunix.c	/^Mmap(void *addr, size_t len, int prot, int flags, int fd, off_t offset)$/;"	f	signature:(void *addr, size_t len, int prot, int flags, int fd, off_t offset)
Mmap	sctp/unp.h	/^void	*Mmap(void *, size_t, int, int, int, off_t);$/;"	p	signature:(void *, size_t, int, int, int, off_t)
My_addrs	key/unp.h	/^char   **My_addrs(int *);$/;"	p	signature:(int *)
My_addrs	lib/my_addrs.c	/^My_addrs(int *pfamily)$/;"	f	signature:(int *pfamily)
My_addrs	lib/unp.h	/^char   **My_addrs(int *);$/;"	p	signature:(int *)
My_addrs	sctp/unp.h	/^char   **My_addrs(int *);$/;"	p	signature:(int *)
NDG	udpcliserv/dgcliloop1.c	/^#define	NDG	/;"	d	file:
NDG	udpcliserv/dgcliloop3.c	/^#define	NDG	/;"	d	file:
NEXT_SA	libroute/get_rtaddrs.c	/^#define NEXT_SA(/;"	d	file:
NI_DGRAM	lib/addrinfo.h	/^#define	NI_DGRAM	/;"	d
NI_DGRAM	libfree/addrinfo.h	/^#define	NI_DGRAM	/;"	d
NI_DGRAM	libgai/addrinfo.h	/^#define	NI_DGRAM	/;"	d
NI_MAXHOST	lib/addrinfo.h	/^#define	NI_MAXHOST	/;"	d
NI_MAXHOST	libfree/addrinfo.h	/^#define	NI_MAXHOST	/;"	d
NI_MAXHOST	libgai/addrinfo.h	/^#define	NI_MAXHOST	/;"	d
NI_MAXSERV	lib/addrinfo.h	/^#define	NI_MAXSERV	/;"	d
NI_MAXSERV	libfree/addrinfo.h	/^#define	NI_MAXSERV	/;"	d
NI_MAXSERV	libgai/addrinfo.h	/^#define	NI_MAXSERV	/;"	d
NI_NAMEREQD	lib/addrinfo.h	/^#define	NI_NAMEREQD	/;"	d
NI_NAMEREQD	libfree/addrinfo.h	/^#define	NI_NAMEREQD	/;"	d
NI_NAMEREQD	libgai/addrinfo.h	/^#define	NI_NAMEREQD	/;"	d
NI_NOFQDN	lib/addrinfo.h	/^#define	NI_NOFQDN	/;"	d
NI_NOFQDN	libfree/addrinfo.h	/^#define	NI_NOFQDN	/;"	d
NI_NOFQDN	libgai/addrinfo.h	/^#define	NI_NOFQDN	/;"	d
NI_NUMERICHOST	lib/addrinfo.h	/^#define	NI_NUMERICHOST /;"	d
NI_NUMERICHOST	libfree/addrinfo.h	/^#define	NI_NUMERICHOST /;"	d
NI_NUMERICHOST	libgai/addrinfo.h	/^#define	NI_NUMERICHOST /;"	d
NI_NUMERICSERV	lib/addrinfo.h	/^#define	NI_NUMERICSERV /;"	d
NI_NUMERICSERV	libfree/addrinfo.h	/^#define	NI_NUMERICSERV /;"	d
NI_NUMERICSERV	libgai/addrinfo.h	/^#define	NI_NUMERICSERV /;"	d
NLOOP	threads/example01.c	/^#define	NLOOP /;"	d	file:
NLOOP	threads/example02.c	/^#define	NLOOP /;"	d	file:
NLOOP	threads/example03.c	/^#define	NLOOP	/;"	d	file:
NROUTES	ping/bsdping.c	/^#define	NROUTES	/;"	d	file:
Net_rt_dump	libroute/net_rt_dump.c	/^Net_rt_dump(int family, int flags, size_t *lenp)$/;"	f	signature:(int family, int flags, size_t *lenp)
Net_rt_dump	libroute/unproute.h	/^char	*Net_rt_dump(int, int, size_t *);$/;"	p	signature:(int, int, size_t *)
Net_rt_dump	route/unproute.h	/^char	*Net_rt_dump(int, int, size_t *);$/;"	p	signature:(int, int, size_t *)
Net_rt_iflist	libroute/net_rt_iflist.c	/^Net_rt_iflist(int family, int flags, size_t *lenp)$/;"	f	signature:(int family, int flags, size_t *lenp)
Net_rt_iflist	libroute/unproute.h	/^char	*Net_rt_iflist(int, int, size_t *);$/;"	p	signature:(int, int, size_t *)
Net_rt_iflist	route/unproute.h	/^char	*Net_rt_iflist(int, int, size_t *);$/;"	p	signature:(int, int, size_t *)
OBJS	icmpd/Makefile	/^OBJS = icmpd.o readable_listen.o readable_conn.o readable_v4.o readable_v6.o$/;"	m
OBJS	key/Makefile	/^OBJS = printsadbmsg.o name.o$/;"	m
OBJS	ping/Makefile	/^OBJS = init_v6.o main.o proc_v4.o proc_v6.o readloop.o \\$/;"	m
OBJS	sock/Makefile	/^OBJS = buffers.o cliopen.o crlf.o error.o looptcp.o loopudp.o \\$/;"	m
OBJS	traceroute/Makefile	/^OBJS = main.o icmpcode_v4.o icmpcode_v6.o recv_v4.o recv_v6.o \\$/;"	m
OBJS	udpcksum/Makefile	/^OBJS = main.o cleanup.o pcap.o udpcksum.o senddnsquery-raw.o udpread.o udpwrite.o$/;"	m
OBJSNET	udpcksum/Makefile	/^OBJSNET = main.o cleanup.o pcap.o udpcksum.o senddnsquery-libnet.o udpread.o$/;"	m
Open	key/unp.h	/^int		 Open(const char *, int, mode_t);$/;"	p	signature:(const char *, int, mode_t)
Open	lib/unp.h	/^int		 Open(const char *, int, mode_t);$/;"	p	signature:(const char *, int, mode_t)
Open	lib/wrapunix.c	/^Open(const char *pathname, int oflag, mode_t mode)$/;"	f	signature:(const char *pathname, int oflag, mode_t mode)
Open	sctp/unp.h	/^int		 Open(const char *, int, mode_t);$/;"	p	signature:(const char *, int, mode_t)
PACKAGE_BUGREPORT	config.h	/^#define PACKAGE_BUGREPORT /;"	d
PACKAGE_NAME	config.h	/^#define PACKAGE_NAME /;"	d
PACKAGE_STRING	config.h	/^#define PACKAGE_STRING /;"	d
PACKAGE_TARNAME	config.h	/^#define PACKAGE_TARNAME /;"	d
PACKAGE_VERSION	config.h	/^#define PACKAGE_VERSION /;"	d
PF_LOCAL	key/unp.h	/^#define PF_LOCAL	/;"	d
PF_LOCAL	lib/unp.h	/^#define PF_LOCAL	/;"	d
PF_LOCAL	libfree/getaddrinfo.c	/^#define	PF_LOCAL	/;"	d	file:
PF_LOCAL	sctp/unp.h	/^#define PF_LOCAL	/;"	d
PORT	debug/backlog.c	/^#define	PORT	/;"	d	file:
PORT	debug/qlen.c	/^#define	PORT	/;"	d	file:
PROGS	advio/Makefile	/^PROGS =	tcpcli01 tcpcli02 tcpserv02 \\$/;"	m
PROGS	bcast/Makefile	/^PROGS =	udpcli01 udpcli02 udpcli03 udpcli04 udpcli05 udpcli06$/;"	m
PROGS	debug/Makefile	/^PROGS =	qlen backlog test01 test02 test03 test04 test05 test06$/;"	m
PROGS	icmpd/Makefile	/^PROGS =	icmpd udpcli01$/;"	m
PROGS	inetd/Makefile	/^PROGS =	daytimetcpsrv2 daytimetcpsrv3$/;"	m
PROGS	intro/Makefile	/^PROGS =	daytimetcpcli daytimetcpcli1 daytimetcpcli2 daytimetcpcli3 \\$/;"	m
PROGS	ioctl/Makefile	/^PROGS =	lsif01 lsif02 prifinfo prmac$/;"	m
PROGS	ipopts/Makefile	/^PROGS =	tcpcli01 tcpserv01$/;"	m
PROGS	key/Makefile	/^PROGS =	dump register add$/;"	m
PROGS	libgai/Makefile	/^PROGS = testga test1$/;"	m
PROGS	mcast/Makefile	/^PROGS =	sendrecv udpcli05 udpcli06 udpserv01$/;"	m
PROGS	mysdr/Makefile	/^PROGS =	mysdr$/;"	m
PROGS	names/Makefile	/^PROGS =	daytimetcpcli daytimetcpcli1 daytimetcpsrv1 daytimetcpsrv2 \\$/;"	m
PROGS	nonblock/Makefile	/^PROGS =	daytimetcpcli tcpcli01 tcpcli02 tcpcli03 tcpcli04 tcpservselect02 web$/;"	m
PROGS	oob/Makefile	/^PROGS =	tcprecv01 tcprecv02 tcprecv03 tcprecv04 tcprecv05 tcprecv06 \\$/;"	m
PROGS	ping/Makefile	/^PROGS =	ping$/;"	m
PROGS	route/Makefile	/^PROGS =	checkudpsum getrt mynetstat \\$/;"	m
PROGS	rtt/Makefile	/^PROGS =	udpcli01$/;"	m
PROGS	sctp/Makefile	/^PROGS =	sctpserv01 sctpclient01 sctpserv02 sctpserv03 sctpclient02 sctpserv04 \\$/;"	m
PROGS	select/Makefile	/^PROGS =	tcpcli01 tcpcli02 tcpcli03$/;"	m
PROGS	server/Makefile	/^PROGS =	client clientrst \\$/;"	m
PROGS	sigio/Makefile	/^PROGS =	udpcli01 udpserv01$/;"	m
PROGS	sock/Makefile	/^PROGS =	sock$/;"	m
PROGS	sockopt/Makefile	/^PROGS =	checkopts prdefaults rcvbuf rcvbufset sockopt$/;"	m
PROGS	ssntp/Makefile	/^PROGS =	ssntp$/;"	m
PROGS	streams/Makefile	/^PROGS =	strlist_sock strlist_xti tpi_daytime$/;"	m
PROGS	tcpcliserv/Makefile	/^PROGS =	tcpcli01 tcpcli04 tcpcli05 tcpcli06 \\$/;"	m
PROGS	test/Makefile	/^PROGS =	accept_eintr test1 treadline1 treadline2 treadline3 \\$/;"	m
PROGS	threads/Makefile	/^PROGS =	web01 web02 web03 \\$/;"	m
PROGS	traceroute/Makefile	/^PROGS =	traceroute$/;"	m
PROGS	udpcksum/Makefile	/^PROGS =	udpcksum udpcksum-libnet$/;"	m
PROGS	udpcliserv/Makefile	/^PROGS =	udpcli01 udpserv01 udpcli02 udpcli03 udpcli04 \\$/;"	m
PROGS	unixdomain/Makefile	/^PROGS =	daytimetcpcli daytimetcpsrv2 mycat openfile \\$/;"	m
Pipe	key/unp.h	/^void	 Pipe(int *fds);$/;"	p	signature:(int *fds)
Pipe	lib/unp.h	/^void	 Pipe(int *fds);$/;"	p	signature:(int *fds)
Pipe	lib/wrapunix.c	/^Pipe(int *fds)$/;"	f	signature:(int *fds)
Pipe	sctp/unp.h	/^void	 Pipe(int *fds);$/;"	p	signature:(int *fds)
Poll	key/unp.h	/^int		 Poll(struct pollfd *, unsigned long, int);$/;"	p	signature:(struct pollfd *, unsigned long, int)
Poll	lib/unp.h	/^int		 Poll(struct pollfd *, unsigned long, int);$/;"	p	signature:(struct pollfd *, unsigned long, int)
Poll	lib/wrapsock.c	/^Poll(struct pollfd *fdarray, unsigned long nfds, int timeout)$/;"	f	signature:(struct pollfd *fdarray, unsigned long nfds, int timeout)
Poll	sctp/unp.h	/^int		 Poll(struct pollfd *, unsigned long, int);$/;"	p	signature:(struct pollfd *, unsigned long, int)
Pthread_cond_broadcast	lib/unpthread.h	/^void	Pthread_cond_broadcast(pthread_cond_t *);$/;"	p	signature:(pthread_cond_t *)
Pthread_cond_broadcast	lib/wrappthread.c	/^Pthread_cond_broadcast(pthread_cond_t *cptr)$/;"	f	signature:(pthread_cond_t *cptr)
Pthread_cond_broadcast	server/unpthread.h	/^void	Pthread_cond_broadcast(pthread_cond_t *);$/;"	p	signature:(pthread_cond_t *)
Pthread_cond_broadcast	threads/unpthread.h	/^void	Pthread_cond_broadcast(pthread_cond_t *);$/;"	p	signature:(pthread_cond_t *)
Pthread_cond_signal	lib/unpthread.h	/^void	Pthread_cond_signal(pthread_cond_t *);$/;"	p	signature:(pthread_cond_t *)
Pthread_cond_signal	lib/wrappthread.c	/^Pthread_cond_signal(pthread_cond_t *cptr)$/;"	f	signature:(pthread_cond_t *cptr)
Pthread_cond_signal	server/unpthread.h	/^void	Pthread_cond_signal(pthread_cond_t *);$/;"	p	signature:(pthread_cond_t *)
Pthread_cond_signal	threads/example03.c	/^#define	Pthread_cond_signal(/;"	d	file:
Pthread_cond_signal	threads/unpthread.h	/^void	Pthread_cond_signal(pthread_cond_t *);$/;"	p	signature:(pthread_cond_t *)
Pthread_cond_timedwait	lib/unpthread.h	/^void	Pthread_cond_timedwait(pthread_cond_t *, pthread_mutex_t *,$/;"	p	signature:(pthread_cond_t *, pthread_mutex_t *, const struct timespec *)
Pthread_cond_timedwait	lib/wrappthread.c	/^Pthread_cond_timedwait(pthread_cond_t *cptr, pthread_mutex_t *mptr,$/;"	f	signature:(pthread_cond_t *cptr, pthread_mutex_t *mptr, const struct timespec *tsptr)
Pthread_cond_timedwait	server/unpthread.h	/^void	Pthread_cond_timedwait(pthread_cond_t *, pthread_mutex_t *,$/;"	p	signature:(pthread_cond_t *, pthread_mutex_t *, const struct timespec *)
Pthread_cond_timedwait	threads/unpthread.h	/^void	Pthread_cond_timedwait(pthread_cond_t *, pthread_mutex_t *,$/;"	p	signature:(pthread_cond_t *, pthread_mutex_t *, const struct timespec *)
Pthread_cond_wait	lib/unpthread.h	/^void	Pthread_cond_wait(pthread_cond_t *, pthread_mutex_t *);$/;"	p	signature:(pthread_cond_t *, pthread_mutex_t *)
Pthread_cond_wait	lib/wrappthread.c	/^Pthread_cond_wait(pthread_cond_t *cptr, pthread_mutex_t *mptr)$/;"	f	signature:(pthread_cond_t *cptr, pthread_mutex_t *mptr)
Pthread_cond_wait	server/unpthread.h	/^void	Pthread_cond_wait(pthread_cond_t *, pthread_mutex_t *);$/;"	p	signature:(pthread_cond_t *, pthread_mutex_t *)
Pthread_cond_wait	threads/example03.c	/^#define	Pthread_cond_wait(/;"	d	file:
Pthread_cond_wait	threads/unpthread.h	/^void	Pthread_cond_wait(pthread_cond_t *, pthread_mutex_t *);$/;"	p	signature:(pthread_cond_t *, pthread_mutex_t *)
Pthread_create	lib/unpthread.h	/^void	Pthread_create(pthread_t *, const pthread_attr_t *,$/;"	p	signature:(pthread_t *, const pthread_attr_t *, void * (*)(void *), void *)
Pthread_create	lib/wrappthread.c	/^Pthread_create(pthread_t *tid, const pthread_attr_t *attr,$/;"	f	signature:(pthread_t *tid, const pthread_attr_t *attr, void * (*func)(void *), void *arg)
Pthread_create	server/unpthread.h	/^void	Pthread_create(pthread_t *, const pthread_attr_t *,$/;"	p	signature:(pthread_t *, const pthread_attr_t *, void * (*)(void *), void *)
Pthread_create	threads/unpthread.h	/^void	Pthread_create(pthread_t *, const pthread_attr_t *,$/;"	p	signature:(pthread_t *, const pthread_attr_t *, void * (*)(void *), void *)
Pthread_detach	lib/unpthread.h	/^void	Pthread_detach(pthread_t);$/;"	p	signature:(pthread_t)
Pthread_detach	lib/wrappthread.c	/^Pthread_detach(pthread_t tid)$/;"	f	signature:(pthread_t tid)
Pthread_detach	server/unpthread.h	/^void	Pthread_detach(pthread_t);$/;"	p	signature:(pthread_t)
Pthread_detach	threads/unpthread.h	/^void	Pthread_detach(pthread_t);$/;"	p	signature:(pthread_t)
Pthread_join	lib/unpthread.h	/^void	Pthread_join(pthread_t, void **);$/;"	p	signature:(pthread_t, void **)
Pthread_join	lib/wrappthread.c	/^Pthread_join(pthread_t tid, void **status)$/;"	f	signature:(pthread_t tid, void **status)
Pthread_join	server/unpthread.h	/^void	Pthread_join(pthread_t, void **);$/;"	p	signature:(pthread_t, void **)
Pthread_join	threads/unpthread.h	/^void	Pthread_join(pthread_t, void **);$/;"	p	signature:(pthread_t, void **)
Pthread_key_create	lib/unpthread.h	/^void	Pthread_key_create(pthread_key_t *, void (*)(void *));$/;"	p	signature:(pthread_key_t *, void (*)(void *))
Pthread_key_create	lib/wrappthread.c	/^Pthread_key_create(pthread_key_t *key, void (*func)(void *))$/;"	f	signature:(pthread_key_t *key, void (*func)(void *))
Pthread_key_create	server/unpthread.h	/^void	Pthread_key_create(pthread_key_t *, void (*)(void *));$/;"	p	signature:(pthread_key_t *, void (*)(void *))
Pthread_key_create	threads/unpthread.h	/^void	Pthread_key_create(pthread_key_t *, void (*)(void *));$/;"	p	signature:(pthread_key_t *, void (*)(void *))
Pthread_kill	lib/unpthread.h	/^void	Pthread_kill(pthread_t, int);$/;"	p	signature:(pthread_t, int)
Pthread_kill	lib/wrappthread.c	/^Pthread_kill(pthread_t tid, int signo)$/;"	f	signature:(pthread_t tid, int signo)
Pthread_kill	server/unpthread.h	/^void	Pthread_kill(pthread_t, int);$/;"	p	signature:(pthread_t, int)
Pthread_kill	threads/unpthread.h	/^void	Pthread_kill(pthread_t, int);$/;"	p	signature:(pthread_t, int)
Pthread_mutex_init	lib/unpthread.h	/^void	Pthread_mutex_init(pthread_mutex_t *, pthread_mutexattr_t *);$/;"	p	signature:(pthread_mutex_t *, pthread_mutexattr_t *)
Pthread_mutex_init	lib/wrappthread.c	/^Pthread_mutex_init(pthread_mutex_t *mptr, pthread_mutexattr_t *attr)$/;"	f	signature:(pthread_mutex_t *mptr, pthread_mutexattr_t *attr)
Pthread_mutex_init	server/unpthread.h	/^void	Pthread_mutex_init(pthread_mutex_t *, pthread_mutexattr_t *);$/;"	p	signature:(pthread_mutex_t *, pthread_mutexattr_t *)
Pthread_mutex_init	threads/unpthread.h	/^void	Pthread_mutex_init(pthread_mutex_t *, pthread_mutexattr_t *);$/;"	p	signature:(pthread_mutex_t *, pthread_mutexattr_t *)
Pthread_mutex_lock	lib/unpthread.h	/^void	Pthread_mutex_lock(pthread_mutex_t *);$/;"	p	signature:(pthread_mutex_t *)
Pthread_mutex_lock	lib/wrappthread.c	/^Pthread_mutex_lock(pthread_mutex_t *mptr)$/;"	f	signature:(pthread_mutex_t *mptr)
Pthread_mutex_lock	server/unpthread.h	/^void	Pthread_mutex_lock(pthread_mutex_t *);$/;"	p	signature:(pthread_mutex_t *)
Pthread_mutex_lock	threads/example03.c	/^#define	Pthread_mutex_lock(/;"	d	file:
Pthread_mutex_lock	threads/unpthread.h	/^void	Pthread_mutex_lock(pthread_mutex_t *);$/;"	p	signature:(pthread_mutex_t *)
Pthread_mutex_unlock	lib/unpthread.h	/^void	Pthread_mutex_unlock(pthread_mutex_t *);$/;"	p	signature:(pthread_mutex_t *)
Pthread_mutex_unlock	lib/wrappthread.c	/^Pthread_mutex_unlock(pthread_mutex_t *mptr)$/;"	f	signature:(pthread_mutex_t *mptr)
Pthread_mutex_unlock	server/unpthread.h	/^void	Pthread_mutex_unlock(pthread_mutex_t *);$/;"	p	signature:(pthread_mutex_t *)
Pthread_mutex_unlock	threads/example03.c	/^#define	Pthread_mutex_unlock(/;"	d	file:
Pthread_mutex_unlock	threads/unpthread.h	/^void	Pthread_mutex_unlock(pthread_mutex_t *);$/;"	p	signature:(pthread_mutex_t *)
Pthread_mutexattr_init	lib/unpthread.h	/^void	Pthread_mutexattr_init(pthread_mutexattr_t *);$/;"	p	signature:(pthread_mutexattr_t *)
Pthread_mutexattr_init	lib/wrappthread.c	/^Pthread_mutexattr_init(pthread_mutexattr_t *attr)$/;"	f	signature:(pthread_mutexattr_t *attr)
Pthread_mutexattr_init	server/unpthread.h	/^void	Pthread_mutexattr_init(pthread_mutexattr_t *);$/;"	p	signature:(pthread_mutexattr_t *)
Pthread_mutexattr_init	threads/unpthread.h	/^void	Pthread_mutexattr_init(pthread_mutexattr_t *);$/;"	p	signature:(pthread_mutexattr_t *)
Pthread_mutexattr_setpshared	lib/unpthread.h	/^void	Pthread_mutexattr_setpshared(pthread_mutexattr_t *, int);$/;"	p	signature:(pthread_mutexattr_t *, int)
Pthread_mutexattr_setpshared	lib/wrappthread.c	/^Pthread_mutexattr_setpshared(pthread_mutexattr_t *attr, int flag)$/;"	f	signature:(pthread_mutexattr_t *attr, int flag)
Pthread_mutexattr_setpshared	server/unpthread.h	/^void	Pthread_mutexattr_setpshared(pthread_mutexattr_t *, int);$/;"	p	signature:(pthread_mutexattr_t *, int)
Pthread_mutexattr_setpshared	threads/unpthread.h	/^void	Pthread_mutexattr_setpshared(pthread_mutexattr_t *, int);$/;"	p	signature:(pthread_mutexattr_t *, int)
Pthread_once	lib/unpthread.h	/^void	Pthread_once(pthread_once_t *, void (*)(void));$/;"	p	signature:(pthread_once_t *, void (*)(void))
Pthread_once	lib/wrappthread.c	/^Pthread_once(pthread_once_t *ptr, void (*func)(void))$/;"	f	signature:(pthread_once_t *ptr, void (*func)(void))
Pthread_once	server/unpthread.h	/^void	Pthread_once(pthread_once_t *, void (*)(void));$/;"	p	signature:(pthread_once_t *, void (*)(void))
Pthread_once	threads/unpthread.h	/^void	Pthread_once(pthread_once_t *, void (*)(void));$/;"	p	signature:(pthread_once_t *, void (*)(void))
Pthread_setspecific	lib/unpthread.h	/^void	Pthread_setspecific(pthread_key_t, const void *);$/;"	p	signature:(pthread_key_t, const void *)
Pthread_setspecific	lib/wrappthread.c	/^Pthread_setspecific(pthread_key_t key, const void *value)$/;"	f	signature:(pthread_key_t key, const void *value)
Pthread_setspecific	server/unpthread.h	/^void	Pthread_setspecific(pthread_key_t, const void *);$/;"	p	signature:(pthread_key_t, const void *)
Pthread_setspecific	threads/unpthread.h	/^void	Pthread_setspecific(pthread_key_t, const void *);$/;"	p	signature:(pthread_key_t, const void *)
Putmsg	debug/unpxti.h	/^void	 Putmsg(int, const struct strbuf *, const struct strbuf *, int);$/;"	p	signature:(int, const struct strbuf *, const struct strbuf *, int)
Putmsg	streams/unpxti.h	/^void	 Putmsg(int, const struct strbuf *, const struct strbuf *, int);$/;"	p	signature:(int, const struct strbuf *, const struct strbuf *, int)
QSIZE	sigio/dgecho01.c	/^#define	QSIZE	/;"	d	file:
RES_USE_INET6	libfree/getaddrinfo.c	/^#define	RES_USE_INET6	/;"	d	file:
ROUNDUP	libroute/get_rtaddrs.c	/^#define ROUNDUP(/;"	d	file:
RTT_DEBUG	rtt/dg_send_recv.c	/^#define	RTT_DEBUG$/;"	d	file:
RTT_MAXNREXMT	lib/unprtt.h	/^#define	RTT_MAXNREXMT /;"	d
RTT_MAXNREXMT	rtt/unprtt.h	/^#define	RTT_MAXNREXMT /;"	d
RTT_RTOCALC	lib/rtt.c	/^#define	RTT_RTOCALC(/;"	d	file:
RTT_RXTMAX	lib/unprtt.h	/^#define	RTT_RXTMAX /;"	d
RTT_RXTMAX	rtt/unprtt.h	/^#define	RTT_RXTMAX /;"	d
RTT_RXTMIN	lib/unprtt.h	/^#define	RTT_RXTMIN /;"	d
RTT_RXTMIN	rtt/unprtt.h	/^#define	RTT_RXTMIN /;"	d
Read	key/unp.h	/^ssize_t	 Read(int, void *, size_t);$/;"	p	signature:(int, void *, size_t)
Read	lib/unp.h	/^ssize_t	 Read(int, void *, size_t);$/;"	p	signature:(int, void *, size_t)
Read	lib/wrapunix.c	/^Read(int fd, void *ptr, size_t nbytes)$/;"	f	signature:(int fd, void *ptr, size_t nbytes)
Read	sctp/unp.h	/^ssize_t	 Read(int, void *, size_t);$/;"	p	signature:(int, void *, size_t)
Read_fd	key/unp.h	/^ssize_t	 Read_fd(int, void *, size_t, int *);$/;"	p	signature:(int, void *, size_t, int *)
Read_fd	lib/read_fd.c	/^Read_fd(int fd, void *ptr, size_t nbytes, int *recvfd)$/;"	f	signature:(int fd, void *ptr, size_t nbytes, int *recvfd)
Read_fd	lib/unp.h	/^ssize_t	 Read_fd(int, void *, size_t, int *);$/;"	p	signature:(int, void *, size_t, int *)
Read_fd	sctp/unp.h	/^ssize_t	 Read_fd(int, void *, size_t, int *);$/;"	p	signature:(int, void *, size_t, int *)
Readable_timeo	key/unp.h	/^int		 Readable_timeo(int, int);$/;"	p	signature:(int, int)
Readable_timeo	lib/readable_timeo.c	/^Readable_timeo(int fd, int sec)$/;"	f	signature:(int fd, int sec)
Readable_timeo	lib/unp.h	/^int		 Readable_timeo(int, int);$/;"	p	signature:(int, int)
Readable_timeo	sctp/unp.h	/^int		 Readable_timeo(int, int);$/;"	p	signature:(int, int)
Readline	key/unp.h	/^ssize_t	 Readline(int, void *, size_t);$/;"	p	signature:(int, void *, size_t)
Readline	lib/readline.c	/^Readline(int fd, void *ptr, size_t maxlen)$/;"	f	signature:(int fd, void *ptr, size_t maxlen)
Readline	lib/unp.h	/^ssize_t	 Readline(int, void *, size_t);$/;"	p	signature:(int, void *, size_t)
Readline	sctp/unp.h	/^ssize_t	 Readline(int, void *, size_t);$/;"	p	signature:(int, void *, size_t)
Readline	server/readline.c	/^Readline(int fd, void *ptr, size_t maxlen)$/;"	f	signature:(int fd, void *ptr, size_t maxlen)
Readline	test/readline1.c	/^Readline(int fd, void *ptr, size_t maxlen)$/;"	f	signature:(int fd, void *ptr, size_t maxlen)
Readline	test/readline2.c	/^Readline(int fd, void *ptr, size_t maxlen)$/;"	f	signature:(int fd, void *ptr, size_t maxlen)
Readline	test/readline3.c	/^Readline(int fd, void *ptr, size_t maxlen)$/;"	f	signature:(int fd, void *ptr, size_t maxlen)
Readline	threads/readline.c	/^Readline(int fd, void *ptr, size_t maxlen)$/;"	f	signature:(int fd, void *ptr, size_t maxlen)
Readline_r	server/readline_r.c	/^Readline_r(Rline *rptr)$/;"	f	signature:(Rline *rptr)
Readline_r	server/readline_r.h	/^ssize_t	Readline_r(Rline *);$/;"	p	signature:(Rline *)
Readn	key/unp.h	/^ssize_t	 Readn(int, void *, size_t);$/;"	p	signature:(int, void *, size_t)
Readn	lib/readn.c	/^Readn(int fd, void *ptr, size_t nbytes)$/;"	f	signature:(int fd, void *ptr, size_t nbytes)
Readn	lib/unp.h	/^ssize_t	 Readn(int, void *, size_t);$/;"	p	signature:(int, void *, size_t)
Readn	sctp/unp.h	/^ssize_t	 Readn(int, void *, size_t);$/;"	p	signature:(int, void *, size_t)
Recv	key/unp.h	/^ssize_t	 Recv(int, void *, size_t, int);$/;"	p	signature:(int, void *, size_t, int)
Recv	lib/unp.h	/^ssize_t	 Recv(int, void *, size_t, int);$/;"	p	signature:(int, void *, size_t, int)
Recv	lib/wrapsock.c	/^Recv(int fd, void *ptr, size_t nbytes, int flags)$/;"	f	signature:(int fd, void *ptr, size_t nbytes, int flags)
Recv	sctp/unp.h	/^ssize_t	 Recv(int, void *, size_t, int);$/;"	p	signature:(int, void *, size_t, int)
Recvfrom	key/unp.h	/^ssize_t	 Recvfrom(int, void *, size_t, int, SA *, socklen_t *);$/;"	p	signature:(int, void *, size_t, int, SA *, socklen_t *)
Recvfrom	lib/unp.h	/^ssize_t	 Recvfrom(int, void *, size_t, int, SA *, socklen_t *);$/;"	p	signature:(int, void *, size_t, int, SA *, socklen_t *)
Recvfrom	lib/wrapsock.c	/^Recvfrom(int fd, void *ptr, size_t nbytes, int flags,$/;"	f	signature:(int fd, void *ptr, size_t nbytes, int flags, struct sockaddr *sa, socklen_t *salenptr)
Recvfrom	sctp/unp.h	/^ssize_t	 Recvfrom(int, void *, size_t, int, SA *, socklen_t *);$/;"	p	signature:(int, void *, size_t, int, SA *, socklen_t *)
Recvfrom_flags	advio/old/recvfromflags.c	/^Recvfrom_flags(int fd, void *ptr, size_t nbytes, int *flagsp,$/;"	f	signature:(int fd, void *ptr, size_t nbytes, int *flagsp, SA *sa, socklen_t *salenptr, void *dstaddrp)
Recvfrom_flags	advio/recvfromflags.c	/^Recvfrom_flags(int fd, void *ptr, size_t nbytes, int *flagsp,$/;"	f	signature:(int fd, void *ptr, size_t nbytes, int *flagsp, SA *sa, socklen_t *salenptr, struct unp_in_pktinfo *pktp)
Recvfrom_flags	key/unp.h	/^ssize_t	 Recvfrom_flags(int, void *, size_t, int *, SA *, socklen_t *,$/;"	p	signature:(int, void *, size_t, int *, SA *, socklen_t *, struct in_pktinfo *)
Recvfrom_flags	lib/unp.h	/^ssize_t	 Recvfrom_flags(int, void *, size_t, int *, SA *, socklen_t *,$/;"	p	signature:(int, void *, size_t, int *, SA *, socklen_t *, struct unp_in_pktinfo *)
Recvfrom_flags	sctp/unp.h	/^ssize_t	 Recvfrom_flags(int, void *, size_t, int *, SA *, socklen_t *,$/;"	p	signature:(int, void *, size_t, int *, SA *, socklen_t *, struct in_pktinfo *)
Recvmsg	key/unp.h	/^ssize_t	 Recvmsg(int, struct msghdr *, int);$/;"	p	signature:(int, struct msghdr *, int)
Recvmsg	lib/unp.h	/^ssize_t	 Recvmsg(int, struct msghdr *, int);$/;"	p	signature:(int, struct msghdr *, int)
Recvmsg	lib/wrapsock.c	/^Recvmsg(int fd, struct msghdr *msg, int flags)$/;"	f	signature:(int fd, struct msghdr *msg, int flags)
Recvmsg	sctp/unp.h	/^ssize_t	 Recvmsg(int, struct msghdr *, int);$/;"	p	signature:(int, struct msghdr *, int)
Rline	server/readline_r.h	/^} Rline;$/;"	t	typeref:struct:__anon7
Rline	test/readline.h	/^} Rline;$/;"	t	typeref:struct:__anon9
Rline	threads/readline.c	/^} Rline;$/;"	t	typeref:struct:__anon10	file:
SA	key/unp.h	/^#define	SA	/;"	d
SA	lib/unp.h	/^#define	SA	/;"	d
SA	sctp/unp.h	/^#define	SA	/;"	d
SAP_AUTHLEN_MASK	mysdr/mysdr.h	/^#define	SAP_AUTHLEN_MASK	/;"	d
SAP_AUTHLEN_SHIFT	mysdr/mysdr.h	/^#define	SAP_AUTHLEN_SHIFT	/;"	d
SAP_COMPRESSED	mysdr/mysdr.h	/^#define	SAP_COMPRESSED	/;"	d
SAP_DELETE	mysdr/mysdr.h	/^#define	SAP_DELETE	/;"	d
SAP_ENCRYPTED	mysdr/mysdr.h	/^#define	SAP_ENCRYPTED	/;"	d
SAP_HASH_MASK	mysdr/mysdr.h	/^#define	SAP_HASH_MASK	/;"	d
SAP_IPV6	mysdr/mysdr.h	/^#define	SAP_IPV6	/;"	d
SAP_NAME	mysdr/main.c	/^#define	SAP_NAME	/;"	d	file:
SAP_PORT	mysdr/main.c	/^#define	SAP_PORT	/;"	d	file:
SAP_VERSION	mysdr/mysdr.h	/^#define	SAP_VERSION	/;"	d
SAP_VERSION_MASK	mysdr/mysdr.h	/^#define SAP_VERSION_MASK	/;"	d
SAP_VERSION_SHIFT	mysdr/mysdr.h	/^#define	SAP_VERSION_SHIFT	/;"	d
SCTP_DISABLE_HB	sctp/unp.h	/^#define SCTP_DISABLE_HB /;"	d
SCTP_MAXLINE	sctp/sctp_strcliecho.c	/^#define	SCTP_MAXLINE	/;"	d	file:
SCTP_MAXLINE	sctp/sctp_strcliecho2.c	/^#define	SCTP_MAXLINE	/;"	d	file:
SCTP_ON_DEMAND_HB	sctp/unp.h	/^#define SCTP_ON_DEMAND_HB /;"	d
SCTP_PDAPI_INCR_SZ	sctp/unp.h	/^#define SCTP_PDAPI_INCR_SZ /;"	d
SCTP_PDAPI_NEED_MORE_THRESHOLD	sctp/unp.h	/^#define SCTP_PDAPI_NEED_MORE_THRESHOLD /;"	d
SCTP_SET_HB_INTERVAL	sctp/unp.h	/^#define SCTP_SET_HB_INTERVAL /;"	d
SENDRATE	mcast/send.c	/^#define	SENDRATE	/;"	d	file:
SEQ	route/getrt.c	/^#define	SEQ	/;"	d	file:
SERV	nonblock/web.h	/^#define	SERV	/;"	d
SERV	threads/web01.c	/^#define	SERV	/;"	d	file:
SERV	threads/web02.c	/^#define	SERV	/;"	d	file:
SERV	threads/web03.c	/^#define	SERV	/;"	d	file:
SERV_HOST_ADDR	streams/stream_dg/client.c	/^#define SERV_HOST_ADDR /;"	d	file:
SERV_MAX_SCTP_STRM	sctp/unp.h	/^#define SERV_MAX_SCTP_STRM	/;"	d
SERV_MORE_STRMS_SCTP	sctp/unp.h	/^#define SERV_MORE_STRMS_SCTP	/;"	d
SERV_PORT	key/unp.h	/^#define	SERV_PORT	/;"	d
SERV_PORT	lib/unp.h	/^#define	SERV_PORT	/;"	d
SERV_PORT	sctp/unp.h	/^#define	SERV_PORT	/;"	d
SERV_PORT_STR	key/unp.h	/^#define	SERV_PORT_STR	/;"	d
SERV_PORT_STR	lib/unp.h	/^#define	SERV_PORT_STR	/;"	d
SERV_PORT_STR	sctp/unp.h	/^#define	SERV_PORT_STR	/;"	d
SERV_TCP_PORT	streams/stream_dg/client.c	/^#define SERV_TCP_PORT /;"	d	file:
SERV_TCP_PORT	streams/stream_dg/server.c	/^#define SERV_TCP_PORT /;"	d	file:
SET	ping/bsdping.c	/^#define	SET(/;"	d	file:
SHUT_RD	key/unp.h	/^#define	SHUT_RD	/;"	d
SHUT_RD	lib/unp.h	/^#define	SHUT_RD	/;"	d
SHUT_RD	sctp/unp.h	/^#define	SHUT_RD	/;"	d
SHUT_RDWR	key/unp.h	/^#define	SHUT_RDWR	/;"	d
SHUT_RDWR	lib/unp.h	/^#define	SHUT_RDWR	/;"	d
SHUT_RDWR	sctp/unp.h	/^#define	SHUT_RDWR	/;"	d
SHUT_WR	key/unp.h	/^#define	SHUT_WR	/;"	d
SHUT_WR	lib/unp.h	/^#define	SHUT_WR	/;"	d
SHUT_WR	sctp/unp.h	/^#define	SHUT_WR	/;"	d
SIG_ERR	sock/ourhdr.h	/^#define	SIG_ERR	/;"	d
STDC_HEADERS	config.h	/^#define STDC_HEADERS /;"	d
STDC_HEADERS	sparc64-unknown-freebsd5.1/config.h	/^#define STDC_HEADERS /;"	d
SUN_LEN	key/unp.h	/^# define	SUN_LEN(/;"	d
SUN_LEN	lib/unp.h	/^# define	SUN_LEN(/;"	d
SUN_LEN	sctp/unp.h	/^# define	SUN_LEN(/;"	d
Sctp_bindx	sctp/sctp_wrapper.c	/^Sctp_bindx(int sock_fd,struct sockaddr_storage *at,int num,int op)$/;"	f	signature:(int sock_fd,struct sockaddr_storage *at,int num,int op)
Sctp_recvmsg	sctp/sctp_wrapper.c	/^Sctp_recvmsg(int s, void *msg, size_t len,$/;"	f	signature:(int s, void *msg, size_t len, struct sockaddr *from, socklen_t *fromlen, struct sctp_sndrcvinfo *sinfo, int *msg_flags)
Sctp_sendmsg	sctp/sctp_wrapper.c	/^Sctp_sendmsg (int s, void *data, size_t len, struct sockaddr *to,$/;"	f	signature:(int s, void *data, size_t len, struct sockaddr *to, socklen_t tolen, uint32_t ppid, uint32_t flags, uint16_t stream_no, uint32_t timetolive, uint32_t context)
Select	key/unp.h	/^int		 Select(int, fd_set *, fd_set *, fd_set *, struct timeval *);$/;"	p	signature:(int, fd_set *, fd_set *, fd_set *, struct timeval *)
Select	lib/unp.h	/^int		 Select(int, fd_set *, fd_set *, fd_set *, struct timeval *);$/;"	p	signature:(int, fd_set *, fd_set *, fd_set *, struct timeval *)
Select	lib/wrapsock.c	/^Select(int nfds, fd_set *readfds, fd_set *writefds, fd_set *exceptfds,$/;"	f	signature:(int nfds, fd_set *readfds, fd_set *writefds, fd_set *exceptfds, struct timeval *timeout)
Select	sctp/unp.h	/^int		 Select(int, fd_set *, fd_set *, fd_set *, struct timeval *);$/;"	p	signature:(int, fd_set *, fd_set *, fd_set *, struct timeval *)
Send	key/unp.h	/^void	 Send(int, const void *, size_t, int);$/;"	p	signature:(int, const void *, size_t, int)
Send	lib/unp.h	/^void	 Send(int, const void *, size_t, int);$/;"	p	signature:(int, const void *, size_t, int)
Send	lib/wrapsock.c	/^Send(int fd, const void *ptr, size_t nbytes, int flags)$/;"	f	signature:(int fd, const void *ptr, size_t nbytes, int flags)
Send	sctp/unp.h	/^void	 Send(int, const void *, size_t, int);$/;"	p	signature:(int, const void *, size_t, int)
Sendmsg	key/unp.h	/^void	 Sendmsg(int, const struct msghdr *, int);$/;"	p	signature:(int, const struct msghdr *, int)
Sendmsg	lib/unp.h	/^void	 Sendmsg(int, const struct msghdr *, int);$/;"	p	signature:(int, const struct msghdr *, int)
Sendmsg	lib/wrapsock.c	/^Sendmsg(int fd, const struct msghdr *msg, int flags)$/;"	f	signature:(int fd, const struct msghdr *msg, int flags)
Sendmsg	sctp/unp.h	/^void	 Sendmsg(int, const struct msghdr *, int);$/;"	p	signature:(int, const struct msghdr *, int)
Sendto	key/unp.h	/^void	 Sendto(int, const void *, size_t, int, const SA *, socklen_t);$/;"	p	signature:(int, const void *, size_t, int, const SA *, socklen_t)
Sendto	lib/unp.h	/^void	 Sendto(int, const void *, size_t, int, const SA *, socklen_t);$/;"	p	signature:(int, const void *, size_t, int, const SA *, socklen_t)
Sendto	lib/wrapsock.c	/^Sendto(int fd, const void *ptr, size_t nbytes, int flags,$/;"	f	signature:(int fd, const void *ptr, size_t nbytes, int flags, const struct sockaddr *sa, socklen_t salen)
Sendto	sctp/unp.h	/^void	 Sendto(int, const void *, size_t, int, const SA *, socklen_t);$/;"	p	signature:(int, const void *, size_t, int, const SA *, socklen_t)
Setnetconfig	debug/unpxti.h	/^void	*Setnetconfig(void);$/;"	p	signature:(void)
Setnetconfig	streams/unpxti.h	/^void	*Setnetconfig(void);$/;"	p	signature:(void)
Setnetpath	debug/unpxti.h	/^void	*Setnetpath(void);$/;"	p	signature:(void)
Setnetpath	streams/unpxti.h	/^void	*Setnetpath(void);$/;"	p	signature:(void)
Setsockopt	key/unp.h	/^void	 Setsockopt(int, int, int, const void *, socklen_t);$/;"	p	signature:(int, int, int, const void *, socklen_t)
Setsockopt	lib/unp.h	/^void	 Setsockopt(int, int, int, const void *, socklen_t);$/;"	p	signature:(int, int, int, const void *, socklen_t)
Setsockopt	lib/wrapsock.c	/^Setsockopt(int fd, int level, int optname, const void *optval, socklen_t optlen)$/;"	f	signature:(int fd, int level, int optname, const void *optval, socklen_t optlen)
Setsockopt	sctp/unp.h	/^void	 Setsockopt(int, int, int, const void *, socklen_t);$/;"	p	signature:(int, int, int, const void *, socklen_t)
Shutdown	key/unp.h	/^void	 Shutdown(int, int);$/;"	p	signature:(int, int)
Shutdown	lib/unp.h	/^void	 Shutdown(int, int);$/;"	p	signature:(int, int)
Shutdown	lib/wrapsock.c	/^Shutdown(int fd, int how)$/;"	f	signature:(int fd, int how)
Shutdown	sctp/unp.h	/^void	 Shutdown(int, int);$/;"	p	signature:(int, int)
Sigaddset	key/unp.h	/^void	 Sigaddset(sigset_t *, int);$/;"	p	signature:(sigset_t *, int)
Sigaddset	lib/unp.h	/^void	 Sigaddset(sigset_t *, int);$/;"	p	signature:(sigset_t *, int)
Sigaddset	lib/wrapunix.c	/^Sigaddset(sigset_t *set, int signo)$/;"	f	signature:(sigset_t *set, int signo)
Sigaddset	sctp/unp.h	/^void	 Sigaddset(sigset_t *, int);$/;"	p	signature:(sigset_t *, int)
Sigdelset	key/unp.h	/^void	 Sigdelset(sigset_t *, int);$/;"	p	signature:(sigset_t *, int)
Sigdelset	lib/unp.h	/^void	 Sigdelset(sigset_t *, int);$/;"	p	signature:(sigset_t *, int)
Sigdelset	lib/wrapunix.c	/^Sigdelset(sigset_t *set, int signo)$/;"	f	signature:(sigset_t *set, int signo)
Sigdelset	sctp/unp.h	/^void	 Sigdelset(sigset_t *, int);$/;"	p	signature:(sigset_t *, int)
Sigemptyset	key/unp.h	/^void	 Sigemptyset(sigset_t *);$/;"	p	signature:(sigset_t *)
Sigemptyset	lib/unp.h	/^void	 Sigemptyset(sigset_t *);$/;"	p	signature:(sigset_t *)
Sigemptyset	lib/wrapunix.c	/^Sigemptyset(sigset_t *set)$/;"	f	signature:(sigset_t *set)
Sigemptyset	sctp/unp.h	/^void	 Sigemptyset(sigset_t *);$/;"	p	signature:(sigset_t *)
Sigfillset	key/unp.h	/^void	 Sigfillset(sigset_t *);$/;"	p	signature:(sigset_t *)
Sigfillset	lib/unp.h	/^void	 Sigfillset(sigset_t *);$/;"	p	signature:(sigset_t *)
Sigfillset	lib/wrapunix.c	/^Sigfillset(sigset_t *set)$/;"	f	signature:(sigset_t *set)
Sigfillset	sctp/unp.h	/^void	 Sigfillset(sigset_t *);$/;"	p	signature:(sigset_t *)
Sigfunc	key/unp.h	/^typedef	void	Sigfunc(int);	\/* for signal handlers *\/$/;"	t
Sigfunc	lib/unp.h	/^typedef	void	Sigfunc(int);	\/* for signal handlers *\/$/;"	t
Sigfunc	sctp/unp.h	/^typedef	void	Sigfunc(int);	\/* for signal handlers *\/$/;"	t
Sigfunc	sock/ourhdr.h	/^typedef	void	Sigfunc(int);	\/* for signal handlers *\/$/;"	t
Sigismember	key/unp.h	/^int		 Sigismember(const sigset_t *, int);$/;"	p	signature:(const sigset_t *, int)
Sigismember	lib/unp.h	/^int		 Sigismember(const sigset_t *, int);$/;"	p	signature:(const sigset_t *, int)
Sigismember	lib/wrapunix.c	/^Sigismember(const sigset_t *set, int signo)$/;"	f	signature:(const sigset_t *set, int signo)
Sigismember	sctp/unp.h	/^int		 Sigismember(const sigset_t *, int);$/;"	p	signature:(const sigset_t *, int)
Signal	key/unp.h	/^Sigfunc *Signal(int, Sigfunc *);$/;"	p	signature:(int, Sigfunc *)
Signal	lib/signal.c	/^Signal(int signo, Sigfunc *func)	\/* for our signal() function *\/$/;"	f	signature:(int signo, Sigfunc *func)
Signal	lib/unp.h	/^Sigfunc *Signal(int, Sigfunc *);$/;"	p	signature:(int, Sigfunc *)
Signal	sctp/unp.h	/^Sigfunc *Signal(int, Sigfunc *);$/;"	p	signature:(int, Sigfunc *)
Signal_intr	key/unp.h	/^Sigfunc *Signal_intr(int, Sigfunc *);$/;"	p	signature:(int, Sigfunc *)
Signal_intr	lib/signal_intr.c	/^Signal_intr(int signo, Sigfunc *func)$/;"	f	signature:(int signo, Sigfunc *func)
Signal_intr	lib/unp.h	/^Sigfunc *Signal_intr(int, Sigfunc *);$/;"	p	signature:(int, Sigfunc *)
Signal_intr	sctp/unp.h	/^Sigfunc *Signal_intr(int, Sigfunc *);$/;"	p	signature:(int, Sigfunc *)
Sigpending	key/unp.h	/^void	 Sigpending(sigset_t *);$/;"	p	signature:(sigset_t *)
Sigpending	lib/unp.h	/^void	 Sigpending(sigset_t *);$/;"	p	signature:(sigset_t *)
Sigpending	lib/wrapunix.c	/^Sigpending(sigset_t *set)$/;"	f	signature:(sigset_t *set)
Sigpending	sctp/unp.h	/^void	 Sigpending(sigset_t *);$/;"	p	signature:(sigset_t *)
Sigprocmask	key/unp.h	/^void	 Sigprocmask(int, const sigset_t *, sigset_t *);$/;"	p	signature:(int, const sigset_t *, sigset_t *)
Sigprocmask	lib/unp.h	/^void	 Sigprocmask(int, const sigset_t *, sigset_t *);$/;"	p	signature:(int, const sigset_t *, sigset_t *)
Sigprocmask	lib/wrapunix.c	/^Sigprocmask(int how, const sigset_t *set, sigset_t *oset)$/;"	f	signature:(int how, const sigset_t *set, sigset_t *oset)
Sigprocmask	sctp/unp.h	/^void	 Sigprocmask(int, const sigset_t *, sigset_t *);$/;"	p	signature:(int, const sigset_t *, sigset_t *)
Sock_bind_wild	key/unp.h	/^int		 Sock_bind_wild(int, int);$/;"	p	signature:(int, int)
Sock_bind_wild	lib/sock_bind_wild.c	/^Sock_bind_wild(int sockfd, int family)$/;"	f	signature:(int sockfd, int family)
Sock_bind_wild	lib/unp.h	/^int		 Sock_bind_wild(int, int);$/;"	p	signature:(int, int)
Sock_bind_wild	sctp/unp.h	/^int		 Sock_bind_wild(int, int);$/;"	p	signature:(int, int)
Sock_masktop	libroute/unproute.h	/^#define	Sock_masktop(/;"	d
Sock_masktop	route/unproute.h	/^#define	Sock_masktop(/;"	d
Sock_ntop	key/unp.h	/^char	*Sock_ntop(const SA *, socklen_t);$/;"	p	signature:(const SA *, socklen_t)
Sock_ntop	lib/sock_ntop.c	/^Sock_ntop(const struct sockaddr *sa, socklen_t salen)$/;"	f	signature:(const struct sockaddr *sa, socklen_t salen)
Sock_ntop	lib/unp.h	/^char	*Sock_ntop(const SA *, socklen_t);$/;"	p	signature:(const SA *, socklen_t)
Sock_ntop	sctp/unp.h	/^char	*Sock_ntop(const SA *, socklen_t);$/;"	p	signature:(const SA *, socklen_t)
Sock_ntop_host	key/unp.h	/^char	*Sock_ntop_host(const SA *, socklen_t);$/;"	p	signature:(const SA *, socklen_t)
Sock_ntop_host	lib/sock_ntop_host.c	/^Sock_ntop_host(const struct sockaddr *sa, socklen_t salen)$/;"	f	signature:(const struct sockaddr *sa, socklen_t salen)
Sock_ntop_host	lib/unp.h	/^char	*Sock_ntop_host(const SA *, socklen_t);$/;"	p	signature:(const SA *, socklen_t)
Sock_ntop_host	sctp/unp.h	/^char	*Sock_ntop_host(const SA *, socklen_t);$/;"	p	signature:(const SA *, socklen_t)
Sockatmark	key/unp.h	/^int		 Sockatmark(int);$/;"	p	signature:(int)
Sockatmark	lib/unp.h	/^int		 Sockatmark(int);$/;"	p	signature:(int)
Sockatmark	lib/wrapsock.c	/^Sockatmark(int fd)$/;"	f	signature:(int fd)
Sockatmark	sctp/unp.h	/^int		 Sockatmark(int);$/;"	p	signature:(int)
Socket	key/unp.h	/^int		 Socket(int, int, int);$/;"	p	signature:(int, int, int)
Socket	lib/unp.h	/^int		 Socket(int, int, int);$/;"	p	signature:(int, int, int)
Socket	lib/wrapsock.c	/^Socket(int family, int type, int protocol)$/;"	f	signature:(int family, int type, int protocol)
Socket	sctp/unp.h	/^int		 Socket(int, int, int);$/;"	p	signature:(int, int, int)
Socketpair	key/unp.h	/^void	 Socketpair(int, int, int, int *);$/;"	p	signature:(int, int, int, int *)
Socketpair	lib/unp.h	/^void	 Socketpair(int, int, int, int *);$/;"	p	signature:(int, int, int, int *)
Socketpair	lib/wrapsock.c	/^Socketpair(int family, int type, int protocol, int *fd)$/;"	f	signature:(int family, int type, int protocol, int *fd)
Socketpair	sctp/unp.h	/^void	 Socketpair(int, int, int, int *);$/;"	p	signature:(int, int, int, int *)
Sockfd_to_family	key/unp.h	/^int		 Sockfd_to_family(int);$/;"	p	signature:(int)
Sockfd_to_family	lib/sockfd_to_family.c	/^Sockfd_to_family(int sockfd)$/;"	f	signature:(int sockfd)
Sockfd_to_family	lib/unp.h	/^int		 Sockfd_to_family(int);$/;"	p	signature:(int)
Sockfd_to_family	sctp/unp.h	/^int		 Sockfd_to_family(int);$/;"	p	signature:(int)
Strdup	key/unp.h	/^char	*Strdup(const char *);$/;"	p	signature:(const char *)
Strdup	lib/unp.h	/^char	*Strdup(const char *);$/;"	p	signature:(const char *)
Strdup	lib/wrapunix.c	/^Strdup(const char *str)$/;"	f	signature:(const char *str)
Strdup	sctp/unp.h	/^char	*Strdup(const char *);$/;"	p	signature:(const char *)
Sysconf	key/unp.h	/^long	 Sysconf(int);$/;"	p	signature:(int)
Sysconf	lib/unp.h	/^long	 Sysconf(int);$/;"	p	signature:(int)
Sysconf	lib/wrapunix.c	/^Sysconf(int name)$/;"	f	signature:(int name)
Sysconf	sctp/unp.h	/^long	 Sysconf(int);$/;"	p	signature:(int)
Sysctl	key/unp.h	/^void	 Sysctl(int *, u_int, void *, size_t *, void *, size_t);$/;"	p	signature:(int *, u_int, void *, size_t *, void *, size_t)
Sysctl	lib/unp.h	/^void	 Sysctl(int *, u_int, void *, size_t *, void *, size_t);$/;"	p	signature:(int *, u_int, void *, size_t *, void *, size_t)
Sysctl	lib/wrapunix.c	/^Sysctl(int *name, u_int namelen, void *oldp, size_t *oldlenp,$/;"	f	signature:(int *name, u_int namelen, void *oldp, size_t *oldlenp, void *newp, size_t newlen)
Sysctl	sctp/unp.h	/^void	 Sysctl(int *, u_int, void *, size_t *, void *, size_t);$/;"	p	signature:(int *, u_int, void *, size_t *, void *, size_t)
TELL_CHILD	sock/ourhdr.h	/^void	TELL_CHILD(pid_t);$/;"	p	signature:(pid_t)
TELL_CHILD	sock/sock.h	/^void	TELL_CHILD(pid_t);$/;"	p	signature:(pid_t)
TELL_CHILD	sock/tellwait.c	/^TELL_CHILD(pid_t pid)$/;"	f	signature:(pid_t pid)
TELL_PARENT	sock/ourhdr.h	/^void	TELL_PARENT(pid_t);$/;"	p	signature:(pid_t)
TELL_PARENT	sock/sock.h	/^void	TELL_PARENT(pid_t);$/;"	p	signature:(pid_t)
TELL_PARENT	sock/tellwait.c	/^TELL_PARENT(pid_t pid)$/;"	f	signature:(pid_t pid)
TELL_WAIT	sock/ourhdr.h	/^void	TELL_WAIT(void);		\/* parent\/child from {Sec race_conditions} *\/$/;"	p	signature:(void)
TELL_WAIT	sock/sock.h	/^void	TELL_WAIT(void);$/;"	p	signature:(void)
TELL_WAIT	sock/tellwait.c	/^TELL_WAIT()$/;"	f
TEST1_OBJS	test/Makefile	/^TEST1_OBJS = test1.o funcs.o$/;"	m
TIME_WITH_SYS_TIME	config.h	/^#define TIME_WITH_SYS_TIME /;"	d
TIME_WITH_SYS_TIME	sparc64-unknown-freebsd5.1/config.h	/^#define TIME_WITH_SYS_TIME /;"	d
TST	ping/bsdping.c	/^#define	TST(/;"	d	file:
TTL_OUT	udpcksum/udpcksum.h	/^#define	TTL_OUT	/;"	d
T_INET_IP	debug/unpxti.h	/^#define	T_INET_IP	/;"	d
T_INET_IP	streams/unpxti.h	/^#define	T_INET_IP	/;"	d
T_INET_TCP	debug/unpxti.h	/^#define	T_INET_TCP	/;"	d
T_INET_TCP	streams/unpxti.h	/^#define	T_INET_TCP	/;"	d
T_INET_UDP	debug/unpxti.h	/^#define	T_INET_UDP	/;"	d
T_INET_UDP	streams/unpxti.h	/^#define	T_INET_UDP	/;"	d
T_IP_BROADCAST	debug/unpxti.h	/^#define	T_IP_BROADCAST	/;"	d
T_IP_BROADCAST	streams/unpxti.h	/^#define	T_IP_BROADCAST	/;"	d
T_IP_DONTROUTE	debug/unpxti.h	/^#define	T_IP_DONTROUTE	/;"	d
T_IP_DONTROUTE	streams/unpxti.h	/^#define	T_IP_DONTROUTE	/;"	d
T_IP_OPTIONS	debug/unpxti.h	/^#define	T_IP_OPTIONS	/;"	d
T_IP_OPTIONS	streams/unpxti.h	/^#define	T_IP_OPTIONS	/;"	d
T_IP_REUSEADDR	debug/unpxti.h	/^#define	T_IP_REUSEADDR	/;"	d
T_IP_REUSEADDR	streams/unpxti.h	/^#define	T_IP_REUSEADDR	/;"	d
T_IP_TOS	debug/unpxti.h	/^#define	T_IP_TOS	/;"	d
T_IP_TOS	streams/unpxti.h	/^#define	T_IP_TOS	/;"	d
T_IP_TTL	debug/unpxti.h	/^#define	T_IP_TTL	/;"	d
T_IP_TTL	streams/unpxti.h	/^#define	T_IP_TTL	/;"	d
T_TCP_KEEPALIVE	debug/unpxti.h	/^#define	T_TCP_KEEPALIVE	/;"	d
T_TCP_KEEPALIVE	streams/unpxti.h	/^#define	T_TCP_KEEPALIVE	/;"	d
T_TCP_MAXSEG	debug/unpxti.h	/^#define	T_TCP_MAXSEG	/;"	d
T_TCP_MAXSEG	streams/unpxti.h	/^#define	T_TCP_MAXSEG	/;"	d
T_TCP_NODELAY	debug/unpxti.h	/^#define	T_TCP_NODELAY	/;"	d
T_TCP_NODELAY	streams/unpxti.h	/^#define	T_TCP_NODELAY	/;"	d
T_UDP_CHECKSUM	debug/unpxti.h	/^#define	T_UDP_CHECKSUM	/;"	d
T_UDP_CHECKSUM	streams/unpxti.h	/^#define	T_UDP_CHECKSUM	/;"	d
T_accept	debug/unpxti.h	/^int		 T_accept(int, int, struct t_call *);$/;"	p	signature:(int, int, struct t_call *)
T_accept	streams/unpxti.h	/^int		 T_accept(int, int, struct t_call *);$/;"	p	signature:(int, int, struct t_call *)
T_alloc	debug/unpxti.h	/^void	*T_alloc(int, int, int);$/;"	p	signature:(int, int, int)
T_alloc	streams/unpxti.h	/^void	*T_alloc(int, int, int);$/;"	p	signature:(int, int, int)
T_bind	debug/unpxti.h	/^void	 T_bind(int, const struct t_bind *, struct t_bind *);$/;"	p	signature:(int, const struct t_bind *, struct t_bind *)
T_bind	streams/unpxti.h	/^void	 T_bind(int, const struct t_bind *, struct t_bind *);$/;"	p	signature:(int, const struct t_bind *, struct t_bind *)
T_close	debug/unpxti.h	/^void	 T_close(int);$/;"	p	signature:(int)
T_close	streams/unpxti.h	/^void	 T_close(int);$/;"	p	signature:(int)
T_connect	debug/unpxti.h	/^void	 T_connect(int, const struct t_call *, struct t_call *);$/;"	p	signature:(int, const struct t_call *, struct t_call *)
T_connect	streams/unpxti.h	/^void	 T_connect(int, const struct t_call *, struct t_call *);$/;"	p	signature:(int, const struct t_call *, struct t_call *)
T_free	debug/unpxti.h	/^void	 T_free(void *, int);$/;"	p	signature:(void *, int)
T_free	streams/unpxti.h	/^void	 T_free(void *, int);$/;"	p	signature:(void *, int)
T_getprotaddr	debug/unpxti.h	/^void	 T_getprotaddr(int, struct t_bind *, struct t_bind *);$/;"	p	signature:(int, struct t_bind *, struct t_bind *)
T_getprotaddr	streams/unpxti.h	/^void	 T_getprotaddr(int, struct t_bind *, struct t_bind *);$/;"	p	signature:(int, struct t_bind *, struct t_bind *)
T_getstate	debug/unpxti.h	/^int		 T_getstate(int);$/;"	p	signature:(int)
T_getstate	streams/unpxti.h	/^int		 T_getstate(int);$/;"	p	signature:(int)
T_listen	debug/unpxti.h	/^void	 T_listen(int, struct t_call *);$/;"	p	signature:(int, struct t_call *)
T_listen	streams/unpxti.h	/^void	 T_listen(int, struct t_call *);$/;"	p	signature:(int, struct t_call *)
T_look	debug/unpxti.h	/^int		 T_look(int);$/;"	p	signature:(int)
T_look	streams/unpxti.h	/^int		 T_look(int);$/;"	p	signature:(int)
T_open	debug/unpxti.h	/^int		 T_open(const char *, int, struct t_info *);$/;"	p	signature:(const char *, int, struct t_info *)
T_open	streams/unpxti.h	/^int		 T_open(const char *, int, struct t_info *);$/;"	p	signature:(const char *, int, struct t_info *)
T_optmgmt	debug/unpxti.h	/^void	 T_optmgmt(int, const struct t_optmgmt *, struct t_optmgmt *);$/;"	p	signature:(int, const struct t_optmgmt *, struct t_optmgmt *)
T_optmgmt	streams/unpxti.h	/^void	 T_optmgmt(int, const struct t_optmgmt *, struct t_optmgmt *);$/;"	p	signature:(int, const struct t_optmgmt *, struct t_optmgmt *)
T_rcv	debug/unpxti.h	/^int		 T_rcv(int, void *, unsigned int, int *);$/;"	p	signature:(int, void *, unsigned int, int *)
T_rcv	streams/unpxti.h	/^int		 T_rcv(int, void *, unsigned int, int *);$/;"	p	signature:(int, void *, unsigned int, int *)
T_rcvdis	debug/unpxti.h	/^void	 T_rcvdis(int, struct t_discon *);$/;"	p	signature:(int, struct t_discon *)
T_rcvdis	streams/unpxti.h	/^void	 T_rcvdis(int, struct t_discon *);$/;"	p	signature:(int, struct t_discon *)
T_rcvrel	debug/unpxti.h	/^void	 T_rcvrel(int);$/;"	p	signature:(int)
T_rcvrel	streams/unpxti.h	/^void	 T_rcvrel(int);$/;"	p	signature:(int)
T_rcvudata	debug/unpxti.h	/^void	 T_rcvudata(int, struct t_unitdata *, int *);$/;"	p	signature:(int, struct t_unitdata *, int *)
T_rcvudata	streams/unpxti.h	/^void	 T_rcvudata(int, struct t_unitdata *, int *);$/;"	p	signature:(int, struct t_unitdata *, int *)
T_rcvuderr	debug/unpxti.h	/^void	 T_rcvuderr(int, struct t_uderr *);$/;"	p	signature:(int, struct t_uderr *)
T_rcvuderr	streams/unpxti.h	/^void	 T_rcvuderr(int, struct t_uderr *);$/;"	p	signature:(int, struct t_uderr *)
T_snd	debug/unpxti.h	/^void	 T_snd(int, void *, unsigned int, int);$/;"	p	signature:(int, void *, unsigned int, int)
T_snd	streams/unpxti.h	/^void	 T_snd(int, void *, unsigned int, int);$/;"	p	signature:(int, void *, unsigned int, int)
T_sndrel	debug/unpxti.h	/^void	 T_sndrel(int);$/;"	p	signature:(int)
T_sndrel	streams/unpxti.h	/^void	 T_sndrel(int);$/;"	p	signature:(int)
T_sndudata	debug/unpxti.h	/^void	 T_sndudata(int, struct t_unitdata *);$/;"	p	signature:(int, struct t_unitdata *)
T_sndudata	streams/unpxti.h	/^void	 T_sndudata(int, struct t_unitdata *);$/;"	p	signature:(int, struct t_unitdata *)
TcpSockByAddr	test/funcs.c	/^TcpSockByAddr(char *ipaddr, int port \/* host byte order *\/ )$/;"	f	signature:(char *ipaddr, int port )
TcpSockByAddr	test/test.h	/^int		TcpSockByAddr(char *, int);$/;"	p	signature:(char *, int)
Tcp_connect	key/unp.h	/^int		 Tcp_connect(const char *, const char *);$/;"	p	signature:(const char *, const char *)
Tcp_connect	lib/tcp_connect.c	/^Tcp_connect(const char *host, const char *serv)$/;"	f	signature:(const char *host, const char *serv)
Tcp_connect	lib/unp.h	/^int		 Tcp_connect(const char *, const char *);$/;"	p	signature:(const char *, const char *)
Tcp_connect	sctp/unp.h	/^int		 Tcp_connect(const char *, const char *);$/;"	p	signature:(const char *, const char *)
Tcp_listen	key/unp.h	/^int		 Tcp_listen(const char *, const char *, socklen_t *);$/;"	p	signature:(const char *, const char *, socklen_t *)
Tcp_listen	lib/tcp_listen.c	/^Tcp_listen(const char *host, const char *serv, socklen_t *addrlenp)$/;"	f	signature:(const char *host, const char *serv, socklen_t *addrlenp)
Tcp_listen	lib/unp.h	/^int		 Tcp_listen(const char *, const char *, socklen_t *);$/;"	p	signature:(const char *, const char *, socklen_t *)
Tcp_listen	sctp/unp.h	/^int		 Tcp_listen(const char *, const char *, socklen_t *);$/;"	p	signature:(const char *, const char *, socklen_t *)
Thread	server/pthread07.h	/^} Thread;$/;"	t	typeref:struct:__anon4
Thread	server/pthread08.h	/^} Thread;$/;"	t	typeref:struct:__anon5
Thread	server/pthread09.h	/^} Thread;$/;"	t	typeref:struct:__anon6
UIO_MAXIOV	sock/write.c	/^#define	UIO_MAXIOV	/;"	d	file:
UNIXDG_PATH	key/unp.h	/^#define	UNIXDG_PATH	/;"	d
UNIXDG_PATH	lib/unp.h	/^#define	UNIXDG_PATH	/;"	d
UNIXDG_PATH	sctp/unp.h	/^#define	UNIXDG_PATH	/;"	d
UNIXDOMAIN	config.h	/^#define UNIXDOMAIN /;"	d
UNIXDOMAIN	sparc64-unknown-freebsd5.1/config.h	/^#define UNIXDOMAIN /;"	d
UNIXSTR_PATH	key/unp.h	/^#define	UNIXSTR_PATH	/;"	d
UNIXSTR_PATH	lib/unp.h	/^#define	UNIXSTR_PATH	/;"	d
UNIXSTR_PATH	sctp/unp.h	/^#define	UNIXSTR_PATH	/;"	d
UNIXdomain	config.h	/^#define UNIXdomain /;"	d
UNIXdomain	sparc64-unknown-freebsd5.1/config.h	/^#define UNIXdomain /;"	d
UdpConnSockByAddr	test/funcs.c	/^UdpConnSockByAddr(char *ipaddr, int port \/* host byte order *\/ )$/;"	f	signature:(char *ipaddr, int port )
UdpConnSockByAddr	test/test.h	/^int		UdpConnSockByAddr(char *, int);$/;"	p	signature:(char *, int)
UdpSockByAddr	test/funcs.c	/^UdpSockByAddr(char *ipaddr, int port \/* host byte order *\/ )$/;"	f	signature:(char *ipaddr, int port )
UdpSockByAddr	test/test.h	/^int		UdpSockByAddr(char *, int);$/;"	p	signature:(char *, int)
Udp_client	key/unp.h	/^int		 Udp_client(const char *, const char *, void **, socklen_t *);$/;"	p	signature:(const char *, const char *, void **, socklen_t *)
Udp_client	lib/udp_client.c	/^Udp_client(const char *host, const char *serv, SA **saptr, socklen_t *lenptr)$/;"	f	signature:(const char *host, const char *serv, SA **saptr, socklen_t *lenptr)
Udp_client	lib/unp.h	/^int		 Udp_client(const char *, const char *, SA **, socklen_t *);$/;"	p	signature:(const char *, const char *, SA **, socklen_t *)
Udp_client	sctp/unp.h	/^int		 Udp_client(const char *, const char *, void **, socklen_t *);$/;"	p	signature:(const char *, const char *, void **, socklen_t *)
Udp_client	test/test2.c	/^Udp_client(const char *host, const char *serv, void **saptr, socklen_t *lenptr)$/;"	f	signature:(const char *host, const char *serv, void **saptr, socklen_t *lenptr)
Udp_connect	key/unp.h	/^int		 Udp_connect(const char *, const char *);$/;"	p	signature:(const char *, const char *)
Udp_connect	lib/udp_connect.c	/^Udp_connect(const char *host, const char *serv)$/;"	f	signature:(const char *host, const char *serv)
Udp_connect	lib/unp.h	/^int		 Udp_connect(const char *, const char *);$/;"	p	signature:(const char *, const char *)
Udp_connect	sctp/unp.h	/^int		 Udp_connect(const char *, const char *);$/;"	p	signature:(const char *, const char *)
Udp_server	key/unp.h	/^int		 Udp_server(const char *, const char *, socklen_t *);$/;"	p	signature:(const char *, const char *, socklen_t *)
Udp_server	lib/udp_server.c	/^Udp_server(const char *host, const char *serv, socklen_t *addrlenp)$/;"	f	signature:(const char *host, const char *serv, socklen_t *addrlenp)
Udp_server	lib/unp.h	/^int		 Udp_server(const char *, const char *, socklen_t *);$/;"	p	signature:(const char *, const char *, socklen_t *)
Udp_server	sctp/unp.h	/^int		 Udp_server(const char *, const char *, socklen_t *);$/;"	p	signature:(const char *, const char *, socklen_t *)
Udp_server_reuseaddr	names/udp_server_reuseaddr.c	/^Udp_server_reuseaddr(const char *host, const char *serv, socklen_t *addrlenp)$/;"	f	signature:(const char *host, const char *serv, socklen_t *addrlenp)
Unlink	key/unp.h	/^void	 Unlink(const char *);$/;"	p	signature:(const char *)
Unlink	lib/unp.h	/^void	 Unlink(const char *);$/;"	p	signature:(const char *)
Unlink	lib/wrapunix.c	/^Unlink(const char *pathname)$/;"	f	signature:(const char *pathname)
Unlink	sctp/unp.h	/^void	 Unlink(const char *);$/;"	p	signature:(const char *)
VERSION_MASK	ssntp/ntp.h	/^#define	VERSION_MASK	/;"	d
WAIT_CHILD	sock/ourhdr.h	/^void	WAIT_CHILD(void);$/;"	p	signature:(void)
WAIT_CHILD	sock/sock.h	/^void	WAIT_CHILD(void);$/;"	p	signature:(void)
WAIT_CHILD	sock/tellwait.c	/^WAIT_CHILD(void)$/;"	f	signature:(void)
WAIT_PARENT	sock/ourhdr.h	/^void	WAIT_PARENT(void);$/;"	p	signature:(void)
WAIT_PARENT	sock/sock.h	/^void	WAIT_PARENT(void);$/;"	p	signature:(void)
WAIT_PARENT	sock/tellwait.c	/^WAIT_PARENT(void)$/;"	f	signature:(void)
Wait	key/unp.h	/^pid_t	 Wait(int *);$/;"	p	signature:(int *)
Wait	lib/unp.h	/^pid_t	 Wait(int *);$/;"	p	signature:(int *)
Wait	lib/wrapunix.c	/^Wait(int *iptr)$/;"	f	signature:(int *iptr)
Wait	sctp/unp.h	/^pid_t	 Wait(int *);$/;"	p	signature:(int *)
Waitpid	key/unp.h	/^pid_t	 Waitpid(pid_t, int *, int);$/;"	p	signature:(pid_t, int *, int)
Waitpid	lib/unp.h	/^pid_t	 Waitpid(pid_t, int *, int);$/;"	p	signature:(pid_t, int *, int)
Waitpid	lib/wrapunix.c	/^Waitpid(pid_t pid, int *iptr, int options)$/;"	f	signature:(pid_t pid, int *iptr, int options)
Waitpid	sctp/unp.h	/^pid_t	 Waitpid(pid_t, int *, int);$/;"	p	signature:(pid_t, int *, int)
Writable_timeo	key/unp.h	/^int		 Writable_timeo(int, int);$/;"	p	signature:(int, int)
Writable_timeo	lib/unp.h	/^int		 Writable_timeo(int, int);$/;"	p	signature:(int, int)
Writable_timeo	lib/writable_timeo.c	/^Writable_timeo(int fd, int sec)$/;"	f	signature:(int fd, int sec)
Writable_timeo	sctp/unp.h	/^int		 Writable_timeo(int, int);$/;"	p	signature:(int, int)
Write	key/unp.h	/^void	 Write(int, void *, size_t);$/;"	p	signature:(int, void *, size_t)
Write	lib/unp.h	/^void	 Write(int, void *, size_t);$/;"	p	signature:(int, void *, size_t)
Write	lib/wrapunix.c	/^Write(int fd, void *ptr, size_t nbytes)$/;"	f	signature:(int fd, void *ptr, size_t nbytes)
Write	sctp/unp.h	/^void	 Write(int, void *, size_t);$/;"	p	signature:(int, void *, size_t)
Write_fd	key/unp.h	/^ssize_t	 Write_fd(int, void *, size_t, int);$/;"	p	signature:(int, void *, size_t, int)
Write_fd	lib/unp.h	/^ssize_t	 Write_fd(int, void *, size_t, int);$/;"	p	signature:(int, void *, size_t, int)
Write_fd	lib/write_fd.c	/^Write_fd(int fd, void *ptr, size_t nbytes, int sendfd)$/;"	f	signature:(int fd, void *ptr, size_t nbytes, int sendfd)
Write_fd	sctp/unp.h	/^ssize_t	 Write_fd(int, void *, size_t, int);$/;"	p	signature:(int, void *, size_t, int)
Writen	key/unp.h	/^void	 Writen(int, void *, size_t);$/;"	p	signature:(int, void *, size_t)
Writen	lib/unp.h	/^void	 Writen(int, void *, size_t);$/;"	p	signature:(int, void *, size_t)
Writen	lib/writen.c	/^Writen(int fd, void *ptr, size_t nbytes)$/;"	f	signature:(int fd, void *ptr, size_t nbytes)
Writen	sctp/unp.h	/^void	 Writen(int, void *, size_t);$/;"	p	signature:(int, void *, size_t)
XTI_TCP	debug/unpxti.h	/^# define	XTI_TCP	/;"	d
XTI_TCP	streams/unpxti.h	/^# define	XTI_TCP	/;"	d
XTI_UDP	debug/unpxti.h	/^# define	XTI_UDP	/;"	d
XTI_UDP	streams/unpxti.h	/^# define	XTI_UDP	/;"	d
Xti_accept	debug/unpxti.h	/^int		 Xti_accept(int, struct netbuf *, int);$/;"	p	signature:(int, struct netbuf *, int)
Xti_accept	streams/unpxti.h	/^int		 Xti_accept(int, struct netbuf *, int);$/;"	p	signature:(int, struct netbuf *, int)
Xti_flags_str	debug/unpxti.h	/^char	*Xti_flags_str(int);$/;"	p	signature:(int)
Xti_flags_str	streams/unpxti.h	/^char	*Xti_flags_str(int);$/;"	p	signature:(int)
Xti_getopt	debug/unpxti.h	/^void	 Xti_getopt(int, int, int, void *, socklen_t *);$/;"	p	signature:(int, int, int, void *, socklen_t *)
Xti_getopt	streams/unpxti.h	/^void	 Xti_getopt(int, int, int, void *, socklen_t *);$/;"	p	signature:(int, int, int, void *, socklen_t *)
Xti_ntop	debug/unpxti.h	/^char	*Xti_ntop(const struct netbuf *);$/;"	p	signature:(const struct netbuf *)
Xti_ntop	streams/unpxti.h	/^char	*Xti_ntop(const struct netbuf *);$/;"	p	signature:(const struct netbuf *)
Xti_ntop_host	debug/unpxti.h	/^char	*Xti_ntop_host(const struct netbuf *);$/;"	p	signature:(const struct netbuf *)
Xti_ntop_host	streams/unpxti.h	/^char	*Xti_ntop_host(const struct netbuf *);$/;"	p	signature:(const struct netbuf *)
Xti_rdwr	debug/unpxti.h	/^void	 Xti_rdwr(int);$/;"	p	signature:(int)
Xti_rdwr	streams/unpxti.h	/^void	 Xti_rdwr(int);$/;"	p	signature:(int)
Xti_setopt	debug/unpxti.h	/^void	 Xti_setopt(int, int, int, void *, socklen_t);$/;"	p	signature:(int, int, int, void *, socklen_t)
Xti_setopt	streams/unpxti.h	/^void	 Xti_setopt(int, int, int, void *, socklen_t);$/;"	p	signature:(int, int, int, void *, socklen_t)
Xti_tlook_str	debug/unpxti.h	/^char	*Xti_tlook_str(int);$/;"	p	signature:(int)
Xti_tlook_str	streams/unpxti.h	/^char	*Xti_tlook_str(int);$/;"	p	signature:(int)
_SOCKADDR_LEN	libfree/getaddrinfo.c	/^#define	_SOCKADDR_LEN	/;"	d	file:
__SS_ALIGNSIZE	lib/unp.h	/^#define	__SS_ALIGNSIZE	/;"	d
__SS_MAXSIZE	lib/unp.h	/^#define	__SS_MAXSIZE	/;"	d
__SS_PAD1SIZE	lib/unp.h	/^#define	__SS_PAD1SIZE	/;"	d
__SS_PAD2SIZE	lib/unp.h	/^#define	__SS_PAD2SIZE	/;"	d
__addrinfo_h	lib/addrinfo.h	/^#define	__addrinfo_h$/;"	d
__addrinfo_h	libfree/addrinfo.h	/^#define	__addrinfo_h$/;"	d
__addrinfo_h	libgai/addrinfo.h	/^#define	__addrinfo_h$/;"	d
__anon10::rl_buf	threads/readline.c	/^  char	 rl_buf[MAXLINE];$/;"	m	struct:__anon10	file:	access:public
__anon10::rl_bufptr	threads/readline.c	/^  char	*rl_bufptr;			\/* initialize to rl_buf *\/$/;"	m	struct:__anon10	file:	access:public
__anon10::rl_cnt	threads/readline.c	/^  int	 rl_cnt;			\/* initialize to 0 *\/$/;"	m	struct:__anon10	file:	access:public
__anon3::child_count	server/child.h	/^  long		child_count;	\/* # connections handled *\/$/;"	m	struct:__anon3	access:public
__anon3::child_pid	server/child.h	/^  pid_t		child_pid;		\/* process ID *\/$/;"	m	struct:__anon3	access:public
__anon3::child_pipefd	server/child.h	/^  int		child_pipefd;	\/* parent's stream pipe to\/from child *\/$/;"	m	struct:__anon3	access:public
__anon3::child_status	server/child.h	/^  int		child_status;	\/* 0 = ready *\/$/;"	m	struct:__anon3	access:public
__anon4::thread_count	server/pthread07.h	/^  long			thread_count;	\/* # connections handled *\/$/;"	m	struct:__anon4	access:public
__anon4::thread_tid	server/pthread07.h	/^  pthread_t		thread_tid;		\/* thread ID *\/$/;"	m	struct:__anon4	access:public
__anon5::thread_count	server/pthread08.h	/^  long			thread_count;	\/* # connections handled *\/$/;"	m	struct:__anon5	access:public
__anon5::thread_tid	server/pthread08.h	/^  pthread_t		thread_tid;		\/* thread ID *\/$/;"	m	struct:__anon5	access:public
__anon6::thread_count	server/pthread09.h	/^  long			thread_count;	\/* #connections handled *\/$/;"	m	struct:__anon6	access:public
__anon6::thread_tid	server/pthread09.h	/^  pthread_t		thread_tid;		\/* thread ID *\/$/;"	m	struct:__anon6	access:public
__anon7::read_fd	server/readline_r.h	/^  int		read_fd;		\/* caller's descriptor to read from *\/$/;"	m	struct:__anon7	access:public
__anon7::read_maxlen	server/readline_r.h	/^  size_t	read_maxlen;	\/* max #bytes to read *\/$/;"	m	struct:__anon7	access:public
__anon7::read_ptr	server/readline_r.h	/^  char		*read_ptr;		\/* caller's buffer to read into *\/$/;"	m	struct:__anon7	access:public
__anon7::rl_buf	server/readline_r.h	/^  char		rl_buf[MAXLINE];$/;"	m	struct:__anon7	access:public
__anon7::rl_bufptr	server/readline_r.h	/^  char		*rl_bufptr;		\/* initialize to rl_buf *\/$/;"	m	struct:__anon7	access:public
__anon7::rl_cnt	server/readline_r.h	/^  int		rl_cnt;			\/* initialize to 0 *\/$/;"	m	struct:__anon7	access:public
__anon8::dg_data	sigio/dgecho01.c	/^  void		*dg_data;		\/* ptr to actual datagram *\/$/;"	m	struct:__anon8	file:	access:public
__anon8::dg_len	sigio/dgecho01.c	/^  size_t	dg_len;			\/* length of datagram *\/$/;"	m	struct:__anon8	file:	access:public
__anon8::dg_sa	sigio/dgecho01.c	/^  struct sockaddr  *dg_sa;	\/* ptr to sockaddr{} w\/client's address *\/$/;"	m	struct:__anon8	typeref:struct:__anon8::sockaddr	file:	access:public
__anon8::dg_salen	sigio/dgecho01.c	/^  socklen_t	dg_salen;		\/* length of sockaddr{} *\/$/;"	m	struct:__anon8	file:	access:public
__anon9::read_fd	test/readline.h	/^  int		read_fd;		\/* caller's descriptor to read from *\/$/;"	m	struct:__anon9	access:public
__anon9::read_maxlen	test/readline.h	/^  size_t	read_maxlen;	\/* max #bytes to read *\/$/;"	m	struct:__anon9	access:public
__anon9::read_ptr	test/readline.h	/^  char		*read_ptr;		\/* caller's buffer to read into *\/$/;"	m	struct:__anon9	access:public
__anon9::rl_buf	test/readline.h	/^  char		rl_buf[MAXLINE];$/;"	m	struct:__anon9	access:public
__anon9::rl_bufptr	test/readline.h	/^  char		*rl_bufptr;		\/* initialize to rl_buf *\/$/;"	m	struct:__anon9	access:public
__anon9::rl_cnt	test/readline.h	/^  int		rl_cnt;			\/* initialize to 0 *\/$/;"	m	struct:__anon9	access:public
__ourhdr_h	sock/ourhdr.h	/^#define	__ourhdr_h$/;"	d
__ss_align	lib/unp.h	/^	int64_t		__ss_align;$/;"	m	struct:sockaddr_storage	access:public
__ss_pad1	lib/unp.h	/^	char		__ss_pad1[__SS_PAD1SIZE];$/;"	m	struct:sockaddr_storage	access:public
__ss_pad2	lib/unp.h	/^	char		__ss_pad2[__SS_PAD2SIZE];$/;"	m	struct:sockaddr_storage	access:public
__unp_h	key/unp.h	/^#define	__unp_h$/;"	d
__unp_h	lib/unp.h	/^#define	__unp_h$/;"	d
__unp_h	sctp/unp.h	/^#define	__unp_h$/;"	d
__unp_ifi_h	lib/unpifi.h	/^#define	__unp_ifi_h$/;"	d
__unp_pthread_h	lib/unpthread.h	/^#define	__unp_pthread_h$/;"	d
__unp_pthread_h	server/unpthread.h	/^#define	__unp_pthread_h$/;"	d
__unp_pthread_h	threads/unpthread.h	/^#define	__unp_pthread_h$/;"	d
__unp_rtt_h	lib/unprtt.h	/^#define	__unp_rtt_h$/;"	d
__unp_rtt_h	rtt/unprtt.h	/^#define	__unp_rtt_h$/;"	d
__unp_xti_h	debug/unpxti.h	/^#define	__unp_xti_h$/;"	d
__unp_xti_h	streams/unpxti.h	/^#define	__unp_xti_h$/;"	d
__unpicmp_h	icmpd/unpicmpd.h	/^#define	__unpicmp_h$/;"	d
address_print	key/printsadbmsg.c	/^address_print(struct sadb_ext *ext)$/;"	f	signature:(struct sadb_ext *ext)
addrinfo	lib/addrinfo.h	/^struct addrinfo {$/;"	s
addrinfo	libfree/addrinfo.h	/^struct addrinfo {$/;"	s
addrinfo	libgai/addrinfo.h	/^struct addrinfo {$/;"	s
addrinfo::ai_addr	lib/addrinfo.h	/^  struct sockaddr	*ai_addr;	\/* binary address *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::sockaddr	access:public
addrinfo::ai_addr	libfree/addrinfo.h	/^  struct sockaddr	*ai_addr;	\/* binary address *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::sockaddr	access:public
addrinfo::ai_addr	libgai/addrinfo.h	/^  struct sockaddr	*ai_addr;	\/* binary address *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::sockaddr	access:public
addrinfo::ai_addrlen	lib/addrinfo.h	/^  size_t	ai_addrlen;			\/* length of ai_addr *\/$/;"	m	struct:addrinfo	access:public
addrinfo::ai_addrlen	libfree/addrinfo.h	/^  size_t	ai_addrlen;			\/* length of ai_addr *\/$/;"	m	struct:addrinfo	access:public
addrinfo::ai_addrlen	libgai/addrinfo.h	/^  size_t	ai_addrlen;			\/* length of ai_addr *\/$/;"	m	struct:addrinfo	access:public
addrinfo::ai_canonname	lib/addrinfo.h	/^  char		*ai_canonname;		\/* canonical name for host *\/$/;"	m	struct:addrinfo	access:public
addrinfo::ai_canonname	libfree/addrinfo.h	/^  char		*ai_canonname;		\/* canonical name for host *\/$/;"	m	struct:addrinfo	access:public
addrinfo::ai_canonname	libgai/addrinfo.h	/^  char		*ai_canonname;		\/* canonical name for host *\/$/;"	m	struct:addrinfo	access:public
addrinfo::ai_family	lib/addrinfo.h	/^  int		ai_family;			\/* PF_xxx *\/$/;"	m	struct:addrinfo	access:public
addrinfo::ai_family	libfree/addrinfo.h	/^  int		ai_family;			\/* PF_xxx *\/$/;"	m	struct:addrinfo	access:public
addrinfo::ai_family	libgai/addrinfo.h	/^  int		ai_family;			\/* PF_xxx *\/$/;"	m	struct:addrinfo	access:public
addrinfo::ai_flags	lib/addrinfo.h	/^  int		ai_flags;			\/* AI_PASSIVE, AI_CANONNAME *\/$/;"	m	struct:addrinfo	access:public
addrinfo::ai_flags	libfree/addrinfo.h	/^  int		ai_flags;			\/* AI_PASSIVE, AI_CANONNAME *\/$/;"	m	struct:addrinfo	access:public
addrinfo::ai_flags	libgai/addrinfo.h	/^  int		ai_flags;			\/* AI_PASSIVE, AI_CANONNAME *\/$/;"	m	struct:addrinfo	access:public
addrinfo::ai_next	lib/addrinfo.h	/^  struct addrinfo	*ai_next;	\/* next structure in linked list *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::addrinfo	access:public
addrinfo::ai_next	libfree/addrinfo.h	/^  struct addrinfo	*ai_next;	\/* next structure in linked list *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::addrinfo	access:public
addrinfo::ai_next	libgai/addrinfo.h	/^  struct addrinfo	*ai_next;	\/* next structure in linked list *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::addrinfo	access:public
addrinfo::ai_protocol	lib/addrinfo.h	/^  int		ai_protocol;		\/* IPPROTO_xxx for IPv4 and IPv6 *\/$/;"	m	struct:addrinfo	access:public
addrinfo::ai_protocol	libfree/addrinfo.h	/^  int		ai_protocol;		\/* IPPROTO_xxx for IPv4 and IPv6 *\/$/;"	m	struct:addrinfo	access:public
addrinfo::ai_protocol	libgai/addrinfo.h	/^  int		ai_protocol;		\/* IPPROTO_xxx for IPv4 and IPv6 *\/$/;"	m	struct:addrinfo	access:public
addrinfo::ai_socktype	lib/addrinfo.h	/^  int		ai_socktype;		\/* SOCK_xxx *\/$/;"	m	struct:addrinfo	access:public
addrinfo::ai_socktype	libfree/addrinfo.h	/^  int		ai_socktype;		\/* SOCK_xxx *\/$/;"	m	struct:addrinfo	access:public
addrinfo::ai_socktype	libgai/addrinfo.h	/^  int		ai_socktype;		\/* SOCK_xxx *\/$/;"	m	struct:addrinfo	access:public
addrinfo_local	libfree/getaddrinfo.c	/^addrinfo_local(const char *path, struct addrinfo *hints,$/;"	f	file:	signature:(const char *path, struct addrinfo *hints, struct addrinfo **result)
addrinfo_local	libfree/getaddrinfo.c	/^static int	addrinfo_local(const char *, struct addrinfo *,$/;"	p	file:	signature:(const char *, struct addrinfo *, struct addrinfo **)
addrlen	server/pthread07.h	/^socklen_t		addrlen;$/;"	v
addrlen	server/pthread09.h	/^socklen_t		addrlen;$/;"	v
ahalg	key/name.c	/^static struct idlist ahalg[] = {$/;"	v	typeref:struct:idlist	file:
ai_addr	lib/addrinfo.h	/^  struct sockaddr	*ai_addr;	\/* binary address *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::sockaddr	access:public
ai_addr	libfree/addrinfo.h	/^  struct sockaddr	*ai_addr;	\/* binary address *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::sockaddr	access:public
ai_addr	libgai/addrinfo.h	/^  struct sockaddr	*ai_addr;	\/* binary address *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::sockaddr	access:public
ai_addrlen	lib/addrinfo.h	/^  size_t	ai_addrlen;			\/* length of ai_addr *\/$/;"	m	struct:addrinfo	access:public
ai_addrlen	libfree/addrinfo.h	/^  size_t	ai_addrlen;			\/* length of ai_addr *\/$/;"	m	struct:addrinfo	access:public
ai_addrlen	libgai/addrinfo.h	/^  size_t	ai_addrlen;			\/* length of ai_addr *\/$/;"	m	struct:addrinfo	access:public
ai_canonname	lib/addrinfo.h	/^  char		*ai_canonname;		\/* canonical name for host *\/$/;"	m	struct:addrinfo	access:public
ai_canonname	libfree/addrinfo.h	/^  char		*ai_canonname;		\/* canonical name for host *\/$/;"	m	struct:addrinfo	access:public
ai_canonname	libgai/addrinfo.h	/^  char		*ai_canonname;		\/* canonical name for host *\/$/;"	m	struct:addrinfo	access:public
ai_family	lib/addrinfo.h	/^  int		ai_family;			\/* PF_xxx *\/$/;"	m	struct:addrinfo	access:public
ai_family	libfree/addrinfo.h	/^  int		ai_family;			\/* PF_xxx *\/$/;"	m	struct:addrinfo	access:public
ai_family	libgai/addrinfo.h	/^  int		ai_family;			\/* PF_xxx *\/$/;"	m	struct:addrinfo	access:public
ai_flags	lib/addrinfo.h	/^  int		ai_flags;			\/* AI_PASSIVE, AI_CANONNAME *\/$/;"	m	struct:addrinfo	access:public
ai_flags	libfree/addrinfo.h	/^  int		ai_flags;			\/* AI_PASSIVE, AI_CANONNAME *\/$/;"	m	struct:addrinfo	access:public
ai_flags	libgai/addrinfo.h	/^  int		ai_flags;			\/* AI_PASSIVE, AI_CANONNAME *\/$/;"	m	struct:addrinfo	access:public
ai_next	lib/addrinfo.h	/^  struct addrinfo	*ai_next;	\/* next structure in linked list *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::addrinfo	access:public
ai_next	libfree/addrinfo.h	/^  struct addrinfo	*ai_next;	\/* next structure in linked list *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::addrinfo	access:public
ai_next	libgai/addrinfo.h	/^  struct addrinfo	*ai_next;	\/* next structure in linked list *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::addrinfo	access:public
ai_protocol	lib/addrinfo.h	/^  int		ai_protocol;		\/* IPPROTO_xxx for IPv4 and IPv6 *\/$/;"	m	struct:addrinfo	access:public
ai_protocol	libfree/addrinfo.h	/^  int		ai_protocol;		\/* IPPROTO_xxx for IPv4 and IPv6 *\/$/;"	m	struct:addrinfo	access:public
ai_protocol	libgai/addrinfo.h	/^  int		ai_protocol;		\/* IPPROTO_xxx for IPv4 and IPv6 *\/$/;"	m	struct:addrinfo	access:public
ai_socktype	lib/addrinfo.h	/^  int		ai_socktype;		\/* SOCK_xxx *\/$/;"	m	struct:addrinfo	access:public
ai_socktype	libfree/addrinfo.h	/^  int		ai_socktype;		\/* SOCK_xxx *\/$/;"	m	struct:addrinfo	access:public
ai_socktype	libgai/addrinfo.h	/^  int		ai_socktype;		\/* SOCK_xxx *\/$/;"	m	struct:addrinfo	access:public
allset	icmpd/icmpd.h	/^fd_set			rset, allset;$/;"	v
arg1	tcpcliserv/sum.h	/^  long	arg1;$/;"	m	struct:args	access:public
arg2	tcpcliserv/sum.h	/^  long	arg2;$/;"	m	struct:args	access:public
args	tcpcliserv/sum.h	/^struct args {$/;"	s
args::arg1	tcpcliserv/sum.h	/^  long	arg1;$/;"	m	struct:args	access:public
args::arg2	tcpcliserv/sum.h	/^  long	arg2;$/;"	m	struct:args	access:public
b_buf	threads/example03.c	/^  int		b_buf[BUFFSIZE];	\/* the buffer which contains integer items *\/$/;"	m	struct:buf_t	file:	access:public
b_cond_consumer	threads/example03.c	/^  pthread_cond_t	b_cond_consumer;	\/* consumer waiting to get *\/$/;"	m	struct:buf_t	file:	access:public
b_cond_producer	threads/example03.c	/^  pthread_cond_t	b_cond_producer;	\/* producer waiting to put *\/$/;"	m	struct:buf_t	file:	access:public
b_mutex	threads/example03.c	/^  pthread_mutex_t	b_mutex;$/;"	m	struct:buf_t	file:	access:public
b_nextget	threads/example03.c	/^  int		b_nextget;$/;"	m	struct:buf_t	file:	access:public
b_nextput	threads/example03.c	/^  int		b_nextput;$/;"	m	struct:buf_t	file:	access:public
b_nitems	threads/example03.c	/^  int		b_nitems;			\/* #items currently in buffer *\/$/;"	m	struct:buf_t	file:	access:public
bindport	sock/main.c	/^int		bindport;			\/* 0 or TCP or UDP port number to bind *\/$/;"	v
broadcast	sock/main.c	/^int		broadcast;			\/* SO_BROADCAST *\/$/;"	v
buf_args	sock/ourhdr.h	/^int		 buf_args(char *, int (*func)(int, char **));$/;"	p	signature:(char *, int (*func)(int, char **))
buf_t	threads/example03.c	/^struct buf_t {$/;"	s	file:
buf_t	threads/example03.c	/^} buf_t;$/;"	v	typeref:struct:buf_t
buf_t::b_buf	threads/example03.c	/^  int		b_buf[BUFFSIZE];	\/* the buffer which contains integer items *\/$/;"	m	struct:buf_t	file:	access:public
buf_t::b_cond_consumer	threads/example03.c	/^  pthread_cond_t	b_cond_consumer;	\/* consumer waiting to get *\/$/;"	m	struct:buf_t	file:	access:public
buf_t::b_cond_producer	threads/example03.c	/^  pthread_cond_t	b_cond_producer;	\/* producer waiting to put *\/$/;"	m	struct:buf_t	file:	access:public
buf_t::b_mutex	threads/example03.c	/^  pthread_mutex_t	b_mutex;$/;"	m	struct:buf_t	file:	access:public
buf_t::b_nextget	threads/example03.c	/^  int		b_nextget;$/;"	m	struct:buf_t	file:	access:public
buf_t::b_nextput	threads/example03.c	/^  int		b_nextput;$/;"	m	struct:buf_t	file:	access:public
buf_t::b_nitems	threads/example03.c	/^  int		b_nitems;			\/* #items currently in buffer *\/$/;"	m	struct:buf_t	file:	access:public
buff	test/test1.c	/^char	buff[8192];$/;"	v
buff	test/tshutdown.c	/^char	buff[BUFF];$/;"	v
buffers	sock/buffers.c	/^buffers(int sockfd)$/;"	f	signature:(int sockfd)
buffers	sock/sock.h	/^void	buffers(int);$/;"	p	signature:(int)
bzero	key/unp.h	/^#define	bzero(/;"	d
bzero	lib/unp.h	/^#define	bzero(/;"	d
bzero	sctp/unp.h	/^#define	bzero(/;"	d
canjump	udpcksum/udpcksum.c	/^static int			canjump;$/;"	v	file:
cbreak	sock/main.c	/^int		cbreak;				\/* set terminal to cbreak mode *\/$/;"	v
cfd	debug/backlog.c	/^#define	cfd	/;"	d	file:
cfd	debug/qlen.c	/^#define	cfd	/;"	d	file:
check_notification	sctp/sctp_check_notify.c	/^check_notification(int sock_fd,char *recvline,int rd_len)$/;"	f	signature:(int sock_fd,char *recvline,int rd_len)
child_count	server/child.h	/^  long		child_count;	\/* # connections handled *\/$/;"	m	struct:__anon3	access:public
child_main	server/child02.c	/^child_main(int i, int listenfd, int addrlen)$/;"	f	signature:(int i, int listenfd, int addrlen)
child_main	server/child02l.c	/^child_main(int i, int listenfd, int addrlen)$/;"	f	signature:(int i, int listenfd, int addrlen)
child_main	server/child02m.c	/^child_main(int i, int listenfd, int addrlen)$/;"	f	signature:(int i, int listenfd, int addrlen)
child_main	server/child03.c	/^child_main(int i, int listenfd, int addrlen)$/;"	f	signature:(int i, int listenfd, int addrlen)
child_main	server/child03m.c	/^child_main(int i, int listenfd, int addrlen)$/;"	f	signature:(int i, int listenfd, int addrlen)
child_main	server/child04.c	/^child_main(int i, int listenfd, int addrlen)$/;"	f	signature:(int i, int listenfd, int addrlen)
child_main	server/child05.c	/^child_main(int i, int listenfd, int addrlen)$/;"	f	signature:(int i, int listenfd, int addrlen)
child_make	server/child02.c	/^child_make(int i, int listenfd, int addrlen)$/;"	f	signature:(int i, int listenfd, int addrlen)
child_make	server/child02l.c	/^child_make(int i, int listenfd, int addrlen)$/;"	f	signature:(int i, int listenfd, int addrlen)
child_make	server/child02m.c	/^child_make(int i, int listenfd, int addrlen)$/;"	f	signature:(int i, int listenfd, int addrlen)
child_make	server/child03.c	/^child_make(int i, int listenfd, int addrlen)$/;"	f	signature:(int i, int listenfd, int addrlen)
child_make	server/child03m.c	/^child_make(int i, int listenfd, int addrlen)$/;"	f	signature:(int i, int listenfd, int addrlen)
child_make	server/child04.c	/^child_make(int i, int listenfd, int addrlen)$/;"	f	signature:(int i, int listenfd, int addrlen)
child_make	server/child05.c	/^child_make(int i, int listenfd, int addrlen)$/;"	f	signature:(int i, int listenfd, int addrlen)
child_pid	server/child.h	/^  pid_t		child_pid;		\/* process ID *\/$/;"	m	struct:__anon3	access:public
child_pipefd	server/child.h	/^  int		child_pipefd;	\/* parent's stream pipe to\/from child *\/$/;"	m	struct:__anon3	access:public
child_status	server/child.h	/^  int		child_status;	\/* 0 = ready *\/$/;"	m	struct:__anon3	access:public
chunkwrite	sock/main.c	/^int		chunkwrite;			\/* write in small chunks; not all-at-once *\/$/;"	v
cleanup	udpcksum/cleanup.c	/^cleanup(int signo)$/;"	f	signature:(int signo)
cleanup	udpcksum/udpcksum.h	/^void			 cleanup(int);$/;"	p	signature:(int)
cli_conn	sock/ourhdr.h	/^int		 cli_conn(const char *);	\/* {Progs cliconn_svr4 cliconn_44bsd} *\/$/;"	p	signature:(const char *)
cliaddr	icmpd/icmpd.h	/^struct sockaddr_un	cliaddr;$/;"	v	typeref:struct:sockaddr_un
cliaddr	sock/main.c	/^struct sockaddr_in	cliaddr, servaddr;$/;"	v	typeref:struct:sockaddr_in
cliaddr	test/test1.c	/^struct sockaddr_in	servaddr, cliaddr;$/;"	v	typeref:struct:
client	icmpd/icmpd.h	/^struct client {$/;"	s
client	icmpd/icmpd.h	/^} client[FD_SETSIZE];$/;"	v	typeref:struct:client
client	sock/main.c	/^int		client = 1;			\/* acting as client is the default *\/$/;"	v
client::connfd	icmpd/icmpd.h	/^  int	connfd;			\/* Unix domain stream socket to client *\/$/;"	m	struct:client	access:public
client::family	icmpd/icmpd.h	/^  int	family;			\/* AF_INET or AF_INET6 *\/$/;"	m	struct:client	access:public
client::lport	icmpd/icmpd.h	/^  int	lport;			\/* local port bound to client's UDP socket *\/$/;"	m	struct:client	access:public
clifd	server/pthread08.h	/^int					clifd[MAXNCLI], iget, iput;$/;"	v
clifd_cond	server/pthread08.h	/^pthread_cond_t		clifd_cond;$/;"	v
clifd_cond	server/serv08.c	/^pthread_cond_t		clifd_cond = PTHREAD_COND_INITIALIZER;$/;"	v
clifd_mutex	server/pthread08.h	/^pthread_mutex_t		clifd_mutex;$/;"	v
clifd_mutex	server/serv08.c	/^pthread_mutex_t		clifd_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v
clilen	sigio/dgecho01.c	/^static socklen_t clilen;\/* max length of sockaddr{} *\/$/;"	v	file:
cliopen	sock/cliopen.c	/^cliopen(char *host, char *port)$/;"	f	signature:(char *host, char *port)
cliopen	sock/sock.h	/^int		cliopen(char *, char *);$/;"	p	signature:(char *, char *)
clr_fl	sock/ourhdr.h	/^void	 clr_fl(int, int);			\/* {Prog setfl} *\/$/;"	p	signature:(int, int)
cntread	sigio/dgecho01.c	/^static long	cntread[QSIZE+1];	\/* diagnostic counter *\/$/;"	v	file:
connect_alarm	lib/connect_timeo.c	/^connect_alarm(int signo)$/;"	f	file:	signature:(int signo)
connect_alarm	lib/connect_timeo.c	/^static void	connect_alarm(int);$/;"	p	file:	signature:(int)
connect_nonb	key/unp.h	/^int		 connect_nonb(int, const SA *, socklen_t, int);$/;"	p	signature:(int, const SA *, socklen_t, int)
connect_nonb	lib/connect_nonb.c	/^connect_nonb(int sockfd, const SA *saptr, socklen_t salen, int nsec)$/;"	f	signature:(int sockfd, const SA *saptr, socklen_t salen, int nsec)
connect_nonb	lib/unp.h	/^int		 connect_nonb(int, const SA *, socklen_t, int);$/;"	p	signature:(int, const SA *, socklen_t, int)
connect_nonb	sctp/unp.h	/^int		 connect_nonb(int, const SA *, socklen_t, int);$/;"	p	signature:(int, const SA *, socklen_t, int)
connect_timeo	key/unp.h	/^int		 connect_timeo(int, const SA *, socklen_t, int);$/;"	p	signature:(int, const SA *, socklen_t, int)
connect_timeo	lib/connect_timeo.c	/^connect_timeo(int sockfd, const SA *saptr, socklen_t salen, int nsec)$/;"	f	signature:(int sockfd, const SA *saptr, socklen_t salen, int nsec)
connect_timeo	lib/unp.h	/^int		 connect_timeo(int, const SA *, socklen_t, int);$/;"	p	signature:(int, const SA *, socklen_t, int)
connect_timeo	sctp/unp.h	/^int		 connect_timeo(int, const SA *, socklen_t, int);$/;"	p	signature:(int, const SA *, socklen_t, int)
connectudp	sock/main.c	/^int		connectudp = 1;		\/* connect UDP client *\/$/;"	v
connfd	debug/test05.c	/^int		listenfd, connfd;$/;"	v
connfd	icmpd/icmpd.h	/^  int	connfd;			\/* Unix domain stream socket to client *\/$/;"	m	struct:client	access:public
connfd	oob/tcprecv01.c	/^int		listenfd, connfd;$/;"	v
connfd	oob/tcprecv05.c	/^int		listenfd, connfd;$/;"	v
consume	threads/example03.c	/^consume(struct buf_t *bptr)$/;"	f	signature:(struct buf_t *bptr)
consume_loop	threads/example03.c	/^consume_loop(void *vptr)$/;"	f	signature:(void *vptr)
consume_loop	threads/example03.c	/^void	*consume_loop(void *);$/;"	p	file:	signature:(void *)
copyright	ping/bsdping.c	/^static char copyright[] =$/;"	v	file:
copyto	threads/strclithread.c	/^copyto(void *arg)$/;"	f	signature:(void *arg)
copyto	threads/strclithread.c	/^void	*copyto(void *);$/;"	p	file:	signature:(void *)
copyto	threads/strclithread2.c	/^copyto(void *arg)$/;"	f	signature:(void *arg)
copyto	threads/strclithread2.c	/^void	*copyto(void *);$/;"	p	file:	signature:(void *)
count	udpcliserv/dgecholoop1.c	/^static int	count;$/;"	v	file:
count	udpcliserv/dgecholoop2.c	/^static int	count;$/;"	v	file:
counter	threads/example01.c	/^int				counter;		\/* incremented by threads *\/$/;"	v
counter	threads/example02.c	/^int				counter;		\/* incremented by threads *\/$/;"	v
counter_mutex	threads/example02.c	/^pthread_mutex_t	counter_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v
cptr	server/child.h	/^Child	*cptr;		\/* array of Child structures; calloc'ed *\/$/;"	v
cptr	server/serv02m.c	/^long			*cptr, *meter(int);	\/* for counting #clients\/child *\/$/;"	v
cptr	server/serv03m.c	/^long			*cptr, *meter(int);	\/* for counting #clients\/child *\/$/;"	v
crlf	sock/main.c	/^int		crlf;				\/* convert newline to CR\/LF & vice versa *\/$/;"	v
crlf_add	sock/crlf.c	/^crlf_add(char *dst, int dstsize, const char *src, int lenin)$/;"	f	signature:(char *dst, int dstsize, const char *src, int lenin)
crlf_add	sock/sock.h	/^int		crlf_add(char *, int, const char *, int);$/;"	p	signature:(char *, int, const char *, int)
crlf_strip	sock/crlf.c	/^crlf_strip(char *dst, int dstsize, const char *src, int lenin)$/;"	f	signature:(char *dst, int dstsize, const char *src, int lenin)
crlf_strip	sock/sock.h	/^int		crlf_strip(char *, int, const char *, int);$/;"	p	signature:(char *, int, const char *, int)
ctl6_flow	ping/old/ip6.h	/^	    u_int32_t ctl6_flow;	\/* 24 bits of flow-ID *\/$/;"	m	struct:ip6hdr::__anon2::ip6hdrctl	access:public
ctl6_hlim	ping/old/ip6.h	/^	    u_int8_t  ctl6_hlim;        \/* hop limit *\/$/;"	m	struct:ip6hdr::__anon2::ip6hdrctl	access:public
ctl6_nxt	ping/old/ip6.h	/^	    u_int8_t  ctl6_nxt;         \/* next header *\/$/;"	m	struct:ip6hdr::__anon2::ip6hdrctl	access:public
ctl6_plen	ping/old/ip6.h	/^	    u_int16_t ctl6_plen;        \/* payload length *\/$/;"	m	struct:ip6hdr::__anon2::ip6hdrctl	access:public
daemon_inetd	key/unp.h	/^void	 daemon_inetd(const char *, int);$/;"	p	signature:(const char *, int)
daemon_inetd	lib/daemon_inetd.c	/^daemon_inetd(const char *pname, int facility)$/;"	f	signature:(const char *pname, int facility)
daemon_inetd	lib/unp.h	/^void	 daemon_inetd(const char *, int);$/;"	p	signature:(const char *, int)
daemon_inetd	sctp/unp.h	/^void	 daemon_inetd(const char *, int);$/;"	p	signature:(const char *, int)
daemon_init	key/unp.h	/^void	 daemon_init(const char *, int);$/;"	p	signature:(const char *, int)
daemon_init	lib/daemon_init.c	/^daemon_init(const char *pname, int facility)$/;"	f	signature:(const char *pname, int facility)
daemon_init	lib/unp.h	/^int	 daemon_init(const char *, int);$/;"	p	signature:(const char *, int)
daemon_init	sctp/unp.h	/^void	 daemon_init(const char *, int);$/;"	p	signature:(const char *, int)
daemon_init	sock/ourhdr.h	/^int		 daemon_init(void);			\/* {Prog daemoninit} *\/$/;"	p	signature:(void)
daemon_proc	lib/error.c	/^int		daemon_proc;		\/* set nonzero by daemon_init() *\/$/;"	v
datalen	ping/bsdping.c	/^int datalen = DEFDATALEN;$/;"	v
datalen	ping/main.c	/^int	datalen = 56;		\/* data that goes with ICMP echo request *\/$/;"	v
datalen	ping/ping.h	/^int		 datalen;			\/* # bytes of data following ICMP header *\/$/;"	v
datalen	traceroute/main.c	/^int		datalen = sizeof(struct rec);	\/* defaults *\/$/;"	v
datalen	traceroute/trace.h	/^int		 datalen;			\/* # bytes of data following ICMP header *\/$/;"	v
datalink	udpcksum/main.c	/^int		datalink;		\/* from pcap_datalink(), in <net\/bpf.h> *\/$/;"	v
debug	sock/main.c	/^int		debug;				\/* SO_DEBUG *\/$/;"	v
dest	udpcksum/main.c	/^struct sockaddr	*dest, *local;$/;"	v	typeref:struct:sockaddr
destlen	udpcksum/main.c	/^socklen_t		destlen, locallen;$/;"	v
device	udpcksum/main.c	/^char   *device;			\/* pcap device *\/$/;"	v
dg	sigio/dgecho01.c	/^static DG	dg[QSIZE];			\/* queue of datagrams to process *\/$/;"	v	file:
dg_cli	advio/dgclitimeo.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f	signature:(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)
dg_cli	advio/dgclitimeo1.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f	signature:(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)
dg_cli	advio/dgclitimeo2.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f	signature:(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)
dg_cli	advio/dgclitimeo3.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f	signature:(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)
dg_cli	bcast/dgclibcast1.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f	signature:(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)
dg_cli	bcast/dgclibcast2.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f	signature:(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)
dg_cli	bcast/dgclibcast3.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f	signature:(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)
dg_cli	bcast/dgclibcast4.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f	signature:(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)
dg_cli	bcast/dgclibcast5.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f	signature:(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)
dg_cli	bcast/dgclibcast6.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f	signature:(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)
dg_cli	icmpd/dgcli01.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f	signature:(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)
dg_cli	key/unp.h	/^void	 dg_cli(FILE *, int, const SA *, socklen_t);$/;"	p	signature:(FILE *, int, const SA *, socklen_t)
dg_cli	lib/dg_cli.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f	signature:(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)
dg_cli	lib/unp.h	/^void	 dg_cli(FILE *, int, const SA *, socklen_t);$/;"	p	signature:(FILE *, int, const SA *, socklen_t)
dg_cli	mcast/dgclibcast1.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f	signature:(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)
dg_cli	mcast/dgclimcast5.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f	signature:(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)
dg_cli	mcast/dgclimcast6.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f	signature:(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)
dg_cli	rtt/dg_cli.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f	signature:(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)
dg_cli	sctp/unp.h	/^void	 dg_cli(FILE *, int, const SA *, socklen_t);$/;"	p	signature:(FILE *, int, const SA *, socklen_t)
dg_cli	sigio/dgcli01.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f	signature:(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)
dg_cli	udpcliserv/dgcliaddr.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f	signature:(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)
dg_cli	udpcliserv/dgclibig.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f	signature:(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)
dg_cli	udpcliserv/dgcliconnect.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f	signature:(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)
dg_cli	udpcliserv/dgcliinetaddr.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f	signature:(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)
dg_cli	udpcliserv/dgcliloop1.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f	signature:(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)
dg_cli	udpcliserv/dgcliloop3.c	/^dg_cli(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)$/;"	f	signature:(FILE *fp, int sockfd, const SA *pservaddr, socklen_t servlen)
dg_data	sigio/dgecho01.c	/^  void		*dg_data;		\/* ptr to actual datagram *\/$/;"	m	struct:__anon8	file:	access:public
dg_echo	advio/dgechoaddr.c	/^dg_echo(int sockfd, SA *pcliaddr, socklen_t clilen)$/;"	f	signature:(int sockfd, SA *pcliaddr, socklen_t clilen)
dg_echo	advio/old/dgechoaddr.c	/^dg_echo(int sockfd, SA *pcliaddr, socklen_t clilen)$/;"	f	signature:(int sockfd, SA *pcliaddr, socklen_t clilen)
dg_echo	ipopts/dgechoprintroute.c	/^dg_echo(int sockfd, SA *pcliaddr, socklen_t clilen)$/;"	f	signature:(int sockfd, SA *pcliaddr, socklen_t clilen)
dg_echo	key/unp.h	/^void	 dg_echo(int, SA *, socklen_t);$/;"	p	signature:(int, SA *, socklen_t)
dg_echo	lib/dg_echo.c	/^dg_echo(int sockfd, SA *pcliaddr, socklen_t clilen)$/;"	f	signature:(int sockfd, SA *pcliaddr, socklen_t clilen)
dg_echo	lib/unp.h	/^void	 dg_echo(int, SA *, socklen_t);$/;"	p	signature:(int, SA *, socklen_t)
dg_echo	rtt/dg_echo.c	/^dg_echo(int sockfd, SA *pcliaddr, socklen_t clilen)$/;"	f	signature:(int sockfd, SA *pcliaddr, socklen_t clilen)
dg_echo	sctp/unp.h	/^void	 dg_echo(int, SA *, socklen_t);$/;"	p	signature:(int, SA *, socklen_t)
dg_echo	sigio/dgecho01.c	/^dg_echo(int sockfd_arg, SA *pcliaddr, socklen_t clilen_arg)$/;"	f	signature:(int sockfd_arg, SA *pcliaddr, socklen_t clilen_arg)
dg_echo	udpcliserv/dgecholoop1.c	/^dg_echo(int sockfd, SA *pcliaddr, socklen_t clilen)$/;"	f	signature:(int sockfd, SA *pcliaddr, socklen_t clilen)
dg_echo	udpcliserv/dgecholoop2.c	/^dg_echo(int sockfd, SA *pcliaddr, socklen_t clilen)$/;"	f	signature:(int sockfd, SA *pcliaddr, socklen_t clilen)
dg_len	sigio/dgecho01.c	/^  size_t	dg_len;			\/* length of datagram *\/$/;"	m	struct:__anon8	file:	access:public
dg_sa	sigio/dgecho01.c	/^  struct sockaddr  *dg_sa;	\/* ptr to sockaddr{} w\/client's address *\/$/;"	m	struct:__anon8	typeref:struct:__anon8::sockaddr	file:	access:public
dg_salen	sigio/dgecho01.c	/^  socklen_t	dg_salen;		\/* length of sockaddr{} *\/$/;"	m	struct:__anon8	file:	access:public
dg_send_recv	rtt/dg_send_recv.c	/^dg_send_recv(int fd, const void *outbuff, size_t outbytes,$/;"	f	signature:(int fd, const void *outbuff, size_t outbytes, void *inbuff, size_t inbytes, const SA *destaddr, socklen_t destlen)
dispersion	ssntp/ntp.h	/^  struct s_fixedpt	dispersion;$/;"	m	struct:ntpdata	typeref:struct:ntpdata::s_fixedpt	access:public
distance	ssntp/ntp.h	/^  struct s_fixedpt	distance;$/;"	m	struct:ntpdata	typeref:struct:ntpdata::s_fixedpt	access:public
do_child	debug/backlog.c	/^do_child(void)$/;"	f	signature:(void)
do_child	debug/backlog.c	/^void	do_child(void);$/;"	p	file:	signature:(void)
do_child	debug/qlen.c	/^do_child(void)$/;"	f	signature:(void)
do_child	debug/qlen.c	/^void	do_child(void);$/;"	p	file:	signature:(void)
do_errtest	libgai/testga.c	/^do_errtest(void)$/;"	f	file:	signature:(void)
do_errtest	libgai/testga.c	/^static void	do_errtest(void);$/;"	p	file:	signature:(void)
do_funccall	libgai/testga.c	/^do_funccall(const char *host, const char *serv,$/;"	f	file:	signature:(const char *host, const char *serv, int flags, int family, int socktype, int protocol, int exprc)
do_funccall	libgai/testga.c	/^static void	do_funccall(const char *, const char *, int, int, int, int, int);$/;"	p	file:	signature:(const char *, const char *, int, int, int, int, int)
do_get_read	threads/web01.c	/^do_get_read(void *vptr)$/;"	f	signature:(void *vptr)
do_get_read	threads/web01.c	/^void	*do_get_read(void *);$/;"	p	file:	signature:(void *)
do_get_read	threads/web02.c	/^do_get_read(void *vptr)$/;"	f	signature:(void *vptr)
do_get_read	threads/web02.c	/^void	*do_get_read(void *);$/;"	p	file:	signature:(void *)
do_get_read	threads/web03.c	/^do_get_read(void *vptr)$/;"	f	signature:(void *vptr)
do_get_read	threads/web03.c	/^void	*do_get_read(void *);$/;"	p	file:	signature:(void *)
do_ipv46	libfree/getnameinfo.c	/^do_ipv46(char *host, size_t hostlen, char *serv, size_t servlen,$/;"	f	file:	signature:(char *host, size_t hostlen, char *serv, size_t servlen, void *aptr, size_t alen, int family, int port)
do_ipv46	libfree/getnameinfo.c	/^static int	do_ipv46(char *, size_t, char *, size_t,$/;"	p	file:	signature:(char *, size_t, char *, size_t, void *, size_t, int, int)
do_onetest	libgai/testga.c	/^do_onetest(char *host, char *serv, struct addrinfo *hints, int iteration)$/;"	f	file:	signature:(char *host, char *serv, struct addrinfo *hints, int iteration)
do_onetest	libgai/testga.c	/^static int	do_onetest(char *, char *, struct addrinfo *, int);$/;"	p	file:	signature:(char *, char *, struct addrinfo *, int)
do_parent	debug/backlog.c	/^do_parent(void)$/;"	f	signature:(void)
do_parent	debug/backlog.c	/^void	do_parent(void);$/;"	p	file:	signature:(void)
do_parent	debug/qlen.c	/^do_parent(void)$/;"	f	signature:(void)
do_parent	debug/qlen.c	/^void	do_parent(void);$/;"	p	file:	signature:(void)
dofork	sock/main.c	/^int		dofork;				\/* concurrent server, do a fork() *\/$/;"	v
doit	server/serv06.c	/^doit(void *arg)$/;"	f	signature:(void *arg)
doit	sockopt/prdefaults.c	/^doit(int fd, const char *name)$/;"	f	file:	signature:(int fd, const char *name)
doit	sockopt/prdefaults.c	/^static doit(int, const char *);$/;"	p	file:	signature:(int, const char *)
doit	threads/example01.c	/^doit(void *vptr)$/;"	f	signature:(void *vptr)
doit	threads/example01.c	/^void	*doit(void *);$/;"	p	file:	signature:(void *)
doit	threads/example02.c	/^doit(void *vptr)$/;"	f	signature:(void *vptr)
doit	threads/example02.c	/^void	*doit(void *);$/;"	p	file:	signature:(void *)
doit	threads/tcpserv01.c	/^doit(void *arg)$/;"	f	file:	signature:(void *arg)
doit	threads/tcpserv01.c	/^static void	*doit(void *);		\/* each thread executes this function *\/$/;"	p	file:	signature:(void *)
doit	threads/tcpserv02.c	/^doit(void *arg)$/;"	f	file:	signature:(void *arg)
doit	threads/tcpserv02.c	/^static void	*doit(void *);		\/* each thread executes this function *\/$/;"	p	file:	signature:(void *)
done	threads/strclithread2.c	/^static int	done;$/;"	v	file:
dontroute	sock/main.c	/^int		dontroute;			\/* SO_DONTROUTE *\/$/;"	v
dowrite	sock/sock.h	/^ssize_t	dowrite(int, const void *, size_t);$/;"	p	signature:(int, const void *, size_t)
dowrite	sock/write.c	/^dowrite(int fd, const void *vptr, size_t nbytes)$/;"	f	signature:(int fd, const void *vptr, size_t nbytes)
dport	traceroute/main.c	/^u_short	dport = 32768 + 666;$/;"	v
dport	traceroute/trace.h	/^u_short	 sport, dport;$/;"	v
echo_driver	streams/stream_dg/client.c	/^echo_driver(int fd, struct sockaddr_in *serv_addr)$/;"	f	signature:(int fd, struct sockaddr_in *serv_addr)
echo_serv	streams/stream_dg/server.c	/^echo_serv (int fd)$/;"	f	signature:(int fd)
err_doit	lib/error.c	/^err_doit(int errnoflag, int level, const char *fmt, va_list ap)$/;"	f	file:	signature:(int errnoflag, int level, const char *fmt, va_list ap)
err_doit	lib/error.c	/^static void	err_doit(int, int, const char *, va_list);$/;"	p	file:	signature:(int, int, const char *, va_list)
err_doit	sock/error.c	/^err_doit(int errnoflag, const char *fmt, va_list ap)$/;"	f	file:	signature:(int errnoflag, const char *fmt, va_list ap)
err_doit	sock/error.c	/^static void	err_doit(int, const char *, va_list);$/;"	p	file:	signature:(int, const char *, va_list)
err_dump	key/unp.h	/^void	 err_dump(const char *, ...);$/;"	p	signature:(const char *, ...)
err_dump	lib/error.c	/^err_dump(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
err_dump	lib/unp.h	/^void	 err_dump(const char *, ...);$/;"	p	signature:(const char *, ...)
err_dump	sctp/unp.h	/^void	 err_dump(const char *, ...);$/;"	p	signature:(const char *, ...)
err_dump	sock/error.c	/^err_dump(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
err_dump	sock/ourhdr.h	/^void	err_dump(const char *, ...);	\/* {App misc_source} *\/$/;"	p	signature:(const char *, ...)
err_msg	key/unp.h	/^void	 err_msg(const char *, ...);$/;"	p	signature:(const char *, ...)
err_msg	lib/error.c	/^err_msg(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
err_msg	lib/unp.h	/^void	 err_msg(const char *, ...);$/;"	p	signature:(const char *, ...)
err_msg	sctp/unp.h	/^void	 err_msg(const char *, ...);$/;"	p	signature:(const char *, ...)
err_msg	sock/error.c	/^err_msg(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
err_msg	sock/ourhdr.h	/^void	err_msg(const char *, ...);$/;"	p	signature:(const char *, ...)
err_quit	key/unp.h	/^void	 err_quit(const char *, ...);$/;"	p	signature:(const char *, ...)
err_quit	lib/error.c	/^err_quit(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
err_quit	lib/unp.h	/^void	 err_quit(const char *, ...);$/;"	p	signature:(const char *, ...)
err_quit	sctp/unp.h	/^void	 err_quit(const char *, ...);$/;"	p	signature:(const char *, ...)
err_quit	sock/error.c	/^err_quit(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
err_quit	sock/ourhdr.h	/^void	err_quit(const char *, ...);$/;"	p	signature:(const char *, ...)
err_ret	key/unp.h	/^void	 err_ret(const char *, ...);$/;"	p	signature:(const char *, ...)
err_ret	lib/error.c	/^err_ret(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
err_ret	lib/unp.h	/^void	 err_ret(const char *, ...);$/;"	p	signature:(const char *, ...)
err_ret	sctp/unp.h	/^void	 err_ret(const char *, ...);$/;"	p	signature:(const char *, ...)
err_ret	sock/error.c	/^err_ret(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
err_ret	sock/ourhdr.h	/^void	err_ret(const char *, ...);$/;"	p	signature:(const char *, ...)
err_sys	key/unp.h	/^void	 err_sys(const char *, ...);$/;"	p	signature:(const char *, ...)
err_sys	lib/error.c	/^err_sys(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
err_sys	lib/unp.h	/^void	 err_sys(const char *, ...);$/;"	p	signature:(const char *, ...)
err_sys	sctp/unp.h	/^void	 err_sys(const char *, ...);$/;"	p	signature:(const char *, ...)
err_sys	sock/error.c	/^err_sys(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
err_sys	sock/ourhdr.h	/^void	err_sys(const char *, ...);$/;"	p	signature:(const char *, ...)
err_xti	debug/unpxti.h	/^void	 err_xti(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
err_xti	streams/unpxti.h	/^void	 err_xti(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
err_xti_ret	debug/unpxti.h	/^void	 err_xti_ret(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
err_xti_ret	streams/unpxti.h	/^void	 err_xti_ret(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
error	libfree/getaddrinfo.c	/^#define	error(/;"	d	file:
error	libgai/getaddrinfo.c	/^#define	error(/;"	d	file:
error	libgai/old/savecopy.c	/^#define	error(/;"	d	file:
espalg	key/name.c	/^static struct idlist espalg[] = {$/;"	v	typeref:struct:idlist	file:
etherprint	ioctl/lsif02.c	/^etherprint(const u_char eaddr[6], char string[18])$/;"	f	signature:(const u_char eaddr[6], char string[18])
f_fd	nonblock/web.h	/^  int    f_fd;				\/* descriptor *\/$/;"	m	struct:file	access:public
f_fd	threads/web01.c	/^  int    f_fd;				\/* descriptor *\/$/;"	m	struct:file	file:	access:public
f_fd	threads/web02.c	/^  int    f_fd;				\/* descriptor *\/$/;"	m	struct:file	file:	access:public
f_fd	threads/web03.c	/^  int    f_fd;				\/* descriptor *\/$/;"	m	struct:file	file:	access:public
f_flags	nonblock/web.h	/^  int	 f_flags;			\/* F_xxx below *\/$/;"	m	struct:file	access:public
f_flags	threads/web01.c	/^  int	 f_flags;			\/* F_xxx below *\/$/;"	m	struct:file	file:	access:public
f_flags	threads/web02.c	/^  int	 f_flags;			\/* F_xxx below *\/$/;"	m	struct:file	file:	access:public
f_flags	threads/web03.c	/^  int	 f_flags;			\/* F_xxx below *\/$/;"	m	struct:file	file:	access:public
f_host	nonblock/web.h	/^  char	*f_host;			\/* hostname or IPv4\/IPv6 address *\/$/;"	m	struct:file	access:public
f_host	threads/web01.c	/^  char	*f_host;			\/* hostname or IP address *\/$/;"	m	struct:file	file:	access:public
f_host	threads/web02.c	/^  char	*f_host;			\/* hostname or IP address *\/$/;"	m	struct:file	file:	access:public
f_host	threads/web03.c	/^  char	*f_host;			\/* hostname or IP address *\/$/;"	m	struct:file	file:	access:public
f_name	nonblock/web.h	/^  char	*f_name;			\/* filename *\/$/;"	m	struct:file	access:public
f_name	threads/web01.c	/^  char	*f_name;			\/* filename *\/$/;"	m	struct:file	file:	access:public
f_name	threads/web02.c	/^  char	*f_name;			\/* filename *\/$/;"	m	struct:file	file:	access:public
f_name	threads/web03.c	/^  char	*f_name;			\/* filename *\/$/;"	m	struct:file	file:	access:public
f_tid	threads/web01.c	/^  pthread_t	 f_tid;			\/* thread ID *\/$/;"	m	struct:file	file:	access:public
f_tid	threads/web02.c	/^  pthread_t	 f_tid;			\/* thread ID *\/$/;"	m	struct:file	file:	access:public
f_tid	threads/web03.c	/^  pthread_t	 f_tid;			\/* thread ID *\/$/;"	m	struct:file	file:	access:public
family	icmpd/icmpd.h	/^  int	family;			\/* AF_INET or AF_INET6 *\/$/;"	m	struct:client	access:public
family	libgai/gai_hdr.h	/^  int			family;	\/* AF_xxx *\/$/;"	m	struct:search	access:public
family	libgai/old/savecopy.c	/^  int			family;	\/* AF_xxx *\/$/;"	m	struct:search	file:	access:public
family_to_level	key/unp.h	/^int		 family_to_level(int);$/;"	p	signature:(int)
family_to_level	lib/family_to_level.c	/^family_to_level(int family)$/;"	f	signature:(int family)
family_to_level	lib/unp.h	/^int		 family_to_level(int);$/;"	p	signature:(int)
fd4	icmpd/icmpd.h	/^int				fd4, fd6, listenfd, maxi, maxfd, nready;$/;"	v
fd6	icmpd/icmpd.h	/^int				fd4, fd6, listenfd, maxi, maxfd, nready;$/;"	v
file	nonblock/web.h	/^struct file {$/;"	s
file	nonblock/web.h	/^} file[MAXFILES];$/;"	v	typeref:struct:file
file	threads/web01.c	/^struct file {$/;"	s	file:
file	threads/web01.c	/^} file[MAXFILES];$/;"	v	typeref:struct:file
file	threads/web02.c	/^struct file {$/;"	s	file:
file	threads/web02.c	/^} file[MAXFILES];$/;"	v	typeref:struct:file
file	threads/web03.c	/^struct file {$/;"	s	file:
file	threads/web03.c	/^} file[MAXFILES];$/;"	v	typeref:struct:file
file::f_fd	nonblock/web.h	/^  int    f_fd;				\/* descriptor *\/$/;"	m	struct:file	access:public
file::f_fd	threads/web01.c	/^  int    f_fd;				\/* descriptor *\/$/;"	m	struct:file	file:	access:public
file::f_fd	threads/web02.c	/^  int    f_fd;				\/* descriptor *\/$/;"	m	struct:file	file:	access:public
file::f_fd	threads/web03.c	/^  int    f_fd;				\/* descriptor *\/$/;"	m	struct:file	file:	access:public
file::f_flags	nonblock/web.h	/^  int	 f_flags;			\/* F_xxx below *\/$/;"	m	struct:file	access:public
file::f_flags	threads/web01.c	/^  int	 f_flags;			\/* F_xxx below *\/$/;"	m	struct:file	file:	access:public
file::f_flags	threads/web02.c	/^  int	 f_flags;			\/* F_xxx below *\/$/;"	m	struct:file	file:	access:public
file::f_flags	threads/web03.c	/^  int	 f_flags;			\/* F_xxx below *\/$/;"	m	struct:file	file:	access:public
file::f_host	nonblock/web.h	/^  char	*f_host;			\/* hostname or IPv4\/IPv6 address *\/$/;"	m	struct:file	access:public
file::f_host	threads/web01.c	/^  char	*f_host;			\/* hostname or IP address *\/$/;"	m	struct:file	file:	access:public
file::f_host	threads/web02.c	/^  char	*f_host;			\/* hostname or IP address *\/$/;"	m	struct:file	file:	access:public
file::f_host	threads/web03.c	/^  char	*f_host;			\/* hostname or IP address *\/$/;"	m	struct:file	file:	access:public
file::f_name	nonblock/web.h	/^  char	*f_name;			\/* filename *\/$/;"	m	struct:file	access:public
file::f_name	threads/web01.c	/^  char	*f_name;			\/* filename *\/$/;"	m	struct:file	file:	access:public
file::f_name	threads/web02.c	/^  char	*f_name;			\/* filename *\/$/;"	m	struct:file	file:	access:public
file::f_name	threads/web03.c	/^  char	*f_name;			\/* filename *\/$/;"	m	struct:file	file:	access:public
file::f_tid	threads/web01.c	/^  pthread_t	 f_tid;			\/* thread ID *\/$/;"	m	struct:file	file:	access:public
file::f_tid	threads/web02.c	/^  pthread_t	 f_tid;			\/* thread ID *\/$/;"	m	struct:file	file:	access:public
file::f_tid	threads/web03.c	/^  pthread_t	 f_tid;			\/* thread ID *\/$/;"	m	struct:file	file:	access:public
fill	ping/bsdping.c	/^fill(bp, patp)$/;"	f
fill	ping/bsdping.c	/^void	 fill __P((char *, char *));$/;"	p	file:	signature:(char *, char *)
finit	ping/ping.h	/^  void	 (*finit)(void);$/;"	m	struct:proto	access:public
foreignip	sock/main.c	/^char	foreignip[32];		\/* foreign IP address, dotted-decimal string *\/$/;"	v
foreignport	sock/main.c	/^int		foreignport;		\/* foreign port number *\/$/;"	v
fp	threads/strclithread.c	/^static FILE	*fp;$/;"	v	file:
fp	threads/strclithread2.c	/^static FILE	*fp;$/;"	v	file:
fproc	ping/ping.h	/^  void	 (*fproc)(char *, ssize_t, struct msghdr *, struct timeval *);$/;"	m	struct:proto	access:public
fraction	ssntp/ntp.h	/^  uint16_t	fraction;$/;"	m	struct:s_fixedpt	access:public
fraction	ssntp/ntp.h	/^  uint32_t	fraction;$/;"	m	struct:l_fixedpt	access:public
free_ifi_info	lib/get_ifi_info.c	/^free_ifi_info(struct ifi_info *ifihead)$/;"	f	signature:(struct ifi_info *ifihead)
free_ifi_info	lib/unpifi.h	/^void			 free_ifi_info(struct ifi_info *);$/;"	p	signature:(struct ifi_info *)
free_ifi_info	route/get_ifi_info.c	/^free_ifi_info(struct ifi_info *ifihead)$/;"	f	signature:(struct ifi_info *ifihead)
freeaddrinfo	key/unp.h	/^void	 freeaddrinfo(struct addrinfo *);$/;"	p	signature:(struct addrinfo *)
freeaddrinfo	lib/unp.h	/^void	 freeaddrinfo(struct addrinfo *);$/;"	p	signature:(struct addrinfo *)
freeaddrinfo	libfree/getaddrinfo.c	/^freeaddrinfo(struct addrinfo *aihead)$/;"	f	signature:(struct addrinfo *aihead)
freeaddrinfo	libgai/freeaddrinfo.c	/^freeaddrinfo(struct addrinfo *aihead)$/;"	f	signature:(struct addrinfo *aihead)
freeaddrinfo	libgai/old/savecopy.c	/^freeaddrinfo(struct addrinfo *aihead)$/;"	f	signature:(struct addrinfo *aihead)
freeaddrinfo	sctp/unp.h	/^void	 freeaddrinfo(struct addrinfo *);$/;"	p	signature:(struct addrinfo *)
fsend	ping/ping.h	/^  void	 (*fsend)(void);$/;"	m	struct:proto	access:public
ga_aistruct	libgai/ga_aistruct.c	/^ga_aistruct(struct addrinfo ***paipnext, const struct addrinfo *hintsp,$/;"	f	signature:(struct addrinfo ***paipnext, const struct addrinfo *hintsp, const void *addr, int family)
ga_aistruct	libgai/gai_hdr.h	/^int		ga_aistruct(struct addrinfo ***, const struct addrinfo *,$/;"	p	signature:(struct addrinfo ***, const struct addrinfo *, const void *, int)
ga_aistruct	libgai/old/savecopy.c	/^ga_aistruct(struct addrinfo ***paipnext, const struct addrinfo *hintsp,$/;"	f	file:	signature:(struct addrinfo ***paipnext, const struct addrinfo *hintsp, void *addr, int family)
ga_aistruct	libgai/old/savecopy.c	/^static int	ga_aistruct(struct addrinfo ***, const struct addrinfo *,$/;"	p	file:	signature:(struct addrinfo ***, const struct addrinfo *, void *, int)
ga_clone	libgai/ga_clone.c	/^ga_clone(struct addrinfo *ai)$/;"	f	signature:(struct addrinfo *ai)
ga_clone	libgai/gai_hdr.h	/^struct addrinfo		*ga_clone(struct addrinfo *);$/;"	p	signature:(struct addrinfo *)
ga_clone	libgai/old/savecopy.c	/^ga_clone(struct addrinfo *ai)$/;"	f	file:	signature:(struct addrinfo *ai)
ga_clone	libgai/old/savecopy.c	/^static struct addrinfo	*ga_clone(struct addrinfo *);$/;"	p	file:	signature:(struct addrinfo *)
ga_echeck	libgai/ga_echeck.c	/^ga_echeck(const char *hostname, const char *servname,$/;"	f	signature:(const char *hostname, const char *servname, int flags, int family, int socktype, int protocol)
ga_echeck	libgai/gai_hdr.h	/^int		ga_echeck(const char *, const char *, int, int, int, int);$/;"	p	signature:(const char *, const char *, int, int, int, int)
ga_echeck	libgai/old/savecopy.c	/^ga_echeck(const char *hostname, const char *servname,$/;"	f	file:	signature:(const char *hostname, const char *servname, const struct addrinfo *hintsp)
ga_echeck	libgai/old/savecopy.c	/^static int	ga_echeck(const char *, const char *, const struct addrinfo *);$/;"	p	file:	signature:(const char *, const char *, const struct addrinfo *)
ga_nsearch	libgai/ga_nsearch.c	/^ga_nsearch(const char *hostname, const struct addrinfo *hintsp,$/;"	f	signature:(const char *hostname, const struct addrinfo *hintsp, struct search *search)
ga_nsearch	libgai/gai_hdr.h	/^int		ga_nsearch(const char *, const struct addrinfo *, struct search *);$/;"	p	signature:(const char *, const struct addrinfo *, struct search *)
ga_nsearch	libgai/old/savecopy.c	/^ga_nsearch(const char *hostname, const struct addrinfo *hintsp,$/;"	f	file:	signature:(const char *hostname, const struct addrinfo *hintsp, struct search *search)
ga_nsearch	libgai/old/savecopy.c	/^static int	ga_nsearch(const char *, const struct addrinfo *,$/;"	p	file:	signature:(const char *, const struct addrinfo *, struct search *)
ga_port	libgai/ga_port.c	/^ga_port(struct addrinfo *aihead, int port, int socktype)$/;"	f	signature:(struct addrinfo *aihead, int port, int socktype)
ga_port	libgai/gai_hdr.h	/^int		ga_port(struct addrinfo *, int , int);$/;"	p	signature:(struct addrinfo *, int , int)
ga_port	libgai/old/savecopy.c	/^ga_port(struct addrinfo *aihead, int port, int socktype)$/;"	f	file:	signature:(struct addrinfo *aihead, int port, int socktype)
ga_port	libgai/old/savecopy.c	/^static int	ga_port(struct addrinfo *, int , int);$/;"	p	file:	signature:(struct addrinfo *, int , int)
ga_serv	libgai/ga_serv.c	/^ga_serv(struct addrinfo *aihead, const struct addrinfo *hintsp,$/;"	f	signature:(struct addrinfo *aihead, const struct addrinfo *hintsp, const char *serv)
ga_serv	libgai/gai_hdr.h	/^int		ga_serv(struct addrinfo *, const struct addrinfo *, const char *);$/;"	p	signature:(struct addrinfo *, const struct addrinfo *, const char *)
ga_serv	libgai/old/savecopy.c	/^ga_serv(struct addrinfo *aihead, const struct addrinfo *hintsp,$/;"	f	file:	signature:(struct addrinfo *aihead, const struct addrinfo *hintsp, const char *serv)
ga_serv	libgai/old/savecopy.c	/^static int	ga_serv(struct addrinfo *, const struct addrinfo *, const char *);$/;"	p	file:	signature:(struct addrinfo *, const struct addrinfo *, const char *)
ga_unix	libgai/ga_unix.c	/^ga_unix(const char *path, struct addrinfo *hintsp, struct addrinfo **result)$/;"	f	signature:(const char *path, struct addrinfo *hintsp, struct addrinfo **result)
ga_unix	libgai/gai_hdr.h	/^int		ga_unix(const char *, struct addrinfo *, struct addrinfo **);$/;"	p	signature:(const char *, struct addrinfo *, struct addrinfo **)
ga_unix	libgai/old/savecopy.c	/^ga_unix(const char *path, struct addrinfo *hintsp, struct addrinfo **result)$/;"	f	file:	signature:(const char *path, struct addrinfo *hintsp, struct addrinfo **result)
ga_unix	libgai/old/savecopy.c	/^static int	ga_unix(const char *, struct addrinfo *, struct addrinfo **);$/;"	p	file:	signature:(const char *, struct addrinfo *, struct addrinfo **)
ga_unixstruct	libgai/old/ga_unixstruct.c	/^ga_unixstruct(const char *path, struct addrinfo *hintsp,$/;"	f	signature:(const char *path, struct addrinfo *hintsp, struct addrinfo **result, int socktype)
gai_strerror	key/unp.h	/^char	*gai_strerror(int);$/;"	p	signature:(int)
gai_strerror	lib/unp.h	/^char	*gai_strerror(int);$/;"	p	signature:(int)
gai_strerror	libgai/gai_strerror.c	/^gai_strerror(int err)$/;"	f	signature:(int err)
gai_strerror	sctp/unp.h	/^char	*gai_strerror(int);$/;"	p	signature:(int)
get	threads/web02.c	/^char	get[] = "GET \/ HTTP\/1.0\\r\\n\\r\\n";	\/* for home page *\/$/;"	v
get_auth_alg	key/printsadbmsg.c	/^get_auth_alg(int alg)$/;"	f	signature:(int alg)
get_encrypt_alg	key/printsadbmsg.c	/^get_encrypt_alg(int alg)$/;"	f	signature:(int alg)
get_ifi_info	lib/get_ifi_info.c	/^get_ifi_info(int family, int doaliases)$/;"	f	signature:(int family, int doaliases)
get_ifi_info	lib/unpifi.h	/^struct ifi_info	*get_ifi_info(int, int);$/;"	p	signature:(int, int)
get_ifi_info	route/get_ifi_info.c	/^get_ifi_info(int family, int doaliases)$/;"	f	signature:(int family, int doaliases)
get_rtaddrs	libroute/get_rtaddrs.c	/^get_rtaddrs(int addrs, SA *sa, SA **rti_info)$/;"	f	signature:(int addrs, SA *sa, SA **rti_info)
get_rtaddrs	libroute/unproute.h	/^void	 get_rtaddrs(int, struct sockaddr *, struct sockaddr **);$/;"	p	signature:(int, struct sockaddr *, struct sockaddr **)
get_rtaddrs	route/unproute.h	/^void	 get_rtaddrs(int, struct sockaddr *, struct sockaddr **);$/;"	p	signature:(int, struct sockaddr *, struct sockaddr **)
get_sa_state	key/printsadbmsg.c	/^get_sa_state(int state)$/;"	f	signature:(int state)
get_sadb_alg_type	key/printsadbmsg.c	/^get_sadb_alg_type(int alg, int authenc)$/;"	f	signature:(int alg, int authenc)
get_sadb_msg_type	key/printsadbmsg.c	/^get_sadb_msg_type(int type)$/;"	f	signature:(int type)
get_sadb_satype	key/printsadbmsg.c	/^get_sadb_satype(int type)$/;"	f	signature:(int type)
getaddrinfo	key/unp.h	/^int		 getaddrinfo(const char *, const char *, const struct addrinfo *,$/;"	p	signature:(const char *, const char *, const struct addrinfo *, struct addrinfo **)
getaddrinfo	lib/unp.h	/^int		 getaddrinfo(const char *, const char *, const struct addrinfo *,$/;"	p	signature:(const char *, const char *, const struct addrinfo *, struct addrinfo **)
getaddrinfo	libfree/getaddrinfo.c	/^getaddrinfo(const char *host, const char *serv,$/;"	f	signature:(const char *host, const char *serv, const struct addrinfo *hintsptr, struct addrinfo **result)
getaddrinfo	libgai/getaddrinfo.c	/^getaddrinfo(const char *hostname, const char *servname,$/;"	f	signature:(const char *hostname, const char *servname, const struct addrinfo *hintsp, struct addrinfo **result)
getaddrinfo	libgai/old/savecopy.c	/^getaddrinfo(const char *hostname, const char *servname,$/;"	f	signature:(const char *hostname, const char *servname, const struct addrinfo *hintsp, struct addrinfo **result)
getaddrinfo	sctp/unp.h	/^int		 getaddrinfo(const char *, const char *, const struct addrinfo *,$/;"	p	signature:(const char *, const char *, const struct addrinfo *, struct addrinfo **)
getaddrinfo_clone	libfree/getaddrinfo.c	/^getaddrinfo_clone(struct addrinfo *ai)$/;"	f	file:	signature:(struct addrinfo *ai)
getaddrinfo_clone	libfree/getaddrinfo.c	/^static struct addrinfo	*getaddrinfo_clone(struct addrinfo *);$/;"	p	file:	signature:(struct addrinfo *)
getaddrinfo_host	libfree/getaddrinfo.c	/^getaddrinfo_host(const char *host,$/;"	f	file:	signature:(const char *host, struct hostent *hptr, struct hostent **hptrptr, char *buf, int bufsiz, int family)
getaddrinfo_host	libfree/getaddrinfo.c	/^static int	getaddrinfo_host(const char *, struct hostent *,$/;"	p	file:	signature:(const char *, struct hostent *, struct hostent **, char *, int, int)
getaddrinfo_port	libfree/getaddrinfo.c	/^getaddrinfo_port(struct addrinfo *aihead, int port, int socktype)$/;"	f	file:	signature:(struct addrinfo *aihead, int port, int socktype)
getaddrinfo_port	libfree/getaddrinfo.c	/^static int	getaddrinfo_port(struct addrinfo *, int , int);$/;"	p	file:	signature:(struct addrinfo *, int , int)
getaddrinfo_serv	libfree/getaddrinfo.c	/^getaddrinfo_serv(struct addrinfo *aihead,$/;"	f	file:	signature:(struct addrinfo *aihead, const struct addrinfo *hintsptr, const char *serv, struct servent *sptrarg, char *buf, int bufsiz)
getaddrinfo_serv	libfree/getaddrinfo.c	/^static int	getaddrinfo_serv(struct addrinfo *,$/;"	p	file:	signature:(struct addrinfo *, const struct addrinfo *, const char *, struct servent *, char *, int)
gethostbyname2	key/unp.h	/^#define	gethostbyname2(/;"	d
gethostbyname2	lib/unp.h	/^#define	gethostbyname2(/;"	d
gethostbyname2	sctp/unp.h	/^#define	gethostbyname2(/;"	d
gethostname	key/unp.h	/^int		 gethostname(char *, int);$/;"	p	signature:(char *, int)
gethostname	lib/unp.h	/^int		 gethostname(char *, int);$/;"	p	signature:(char *, int)
gethostname	sctp/unp.h	/^int		 gethostname(char *, int);$/;"	p	signature:(char *, int)
getnameinfo	key/unp.h	/^int		 getnameinfo(const SA *, socklen_t, char *, size_t, char *, size_t, int);$/;"	p	signature:(const SA *, socklen_t, char *, size_t, char *, size_t, int)
getnameinfo	lib/unp.h	/^int		 getnameinfo(const SA *, socklen_t, char *, size_t, char *, size_t, int);$/;"	p	signature:(const SA *, socklen_t, char *, size_t, char *, size_t, int)
getnameinfo	libfree/getnameinfo.c	/^getnameinfo(const struct sockaddr *sa, size_t salen,$/;"	f	signature:(const struct sockaddr *sa, size_t salen, char *host, size_t hostlen, char *serv, size_t servlen)
getnameinfo	libgai/getnameinfo.c	/^getnameinfo(const struct sockaddr *sa, socklen_t salen,$/;"	f	signature:(const struct sockaddr *sa, socklen_t salen, char *host, size_t hostlen, char *serv, size_t servlen, int flags)
getnameinfo	sctp/unp.h	/^int		 getnameinfo(const SA *, socklen_t, char *, size_t, char *, size_t, int);$/;"	p	signature:(const SA *, socklen_t, char *, size_t, char *, size_t, int)
getrusage	server/pr_cpu_time.c	/^int		getrusage(int, struct rusage *);$/;"	p	file:	signature:(int, struct rusage *)
getsaalgbyname	key/name.c	/^getsaalgbyname(int type, char *name)$/;"	f	signature:(int type, char *name)
getsatypebyname	key/name.c	/^getsatypebyname(char *name)$/;"	f	signature:(char *name)
gf_time	key/unp.h	/^char	*gf_time(void);$/;"	p	signature:(void)
gf_time	lib/gf_time.c	/^gf_time(void)$/;"	f	signature:(void)
gf_time	lib/unp.h	/^char	*gf_time(void);$/;"	p	signature:(void)
gf_time	sctp/unp.h	/^char	*gf_time(void);$/;"	p	signature:(void)
gn_ipv46	libgai/gai_hdr.h	/^int		gn_ipv46(char *, size_t, char *, size_t, void *, size_t,$/;"	p	signature:(char *, size_t, char *, size_t, void *, size_t, int, int, int)
gn_ipv46	libgai/gn_ipv46.c	/^gn_ipv46(char *host, size_t hostlen, char *serv, size_t servlen,$/;"	f	signature:(char *host, size_t hostlen, char *serv, size_t servlen, void *aptr, size_t alen, int family, int port, int flags)
gotalarm	traceroute/sig_alrm.c	/^int gotalarm;$/;"	v
halfclose	sock/main.c	/^int		halfclose;			\/* TCP half close option *\/$/;"	v
hdr	rtt/dg_send_recv.c	/^static struct hdr {$/;"	s	file:
hdr::seq	rtt/dg_send_recv.c	/^  uint32_t	seq;	\/* sequence # *\/$/;"	m	struct:hdr	file:	access:public
hdr::ts	rtt/dg_send_recv.c	/^  uint32_t	ts;		\/* timestamp when sent *\/$/;"	m	struct:hdr	file:	access:public
header_flags	test/test1.c	/^header_flags()$/;"	f
heartbeat_action	sctp/sctp_modify_hb.c	/^int heartbeat_action(int sock_fd, struct sockaddr *sa, socklen_t salen,$/;"	f	signature:(int sock_fd, struct sockaddr *sa, socklen_t salen, u_int value)
heartbeat_cli	key/unp.h	/^void	 heartbeat_cli(int, int, int);$/;"	p	signature:(int, int, int)
heartbeat_cli	lib/unp.h	/^void	 heartbeat_cli(int, int, int);$/;"	p	signature:(int, int, int)
heartbeat_cli	oob/heartbeatcli.c	/^heartbeat_cli(int servfd_arg, int nsec_arg, int maxnprobes_arg)$/;"	f	signature:(int servfd_arg, int nsec_arg, int maxnprobes_arg)
heartbeat_cli	sctp/unp.h	/^void	 heartbeat_cli(int, int, int);$/;"	p	signature:(int, int, int)
heartbeat_serv	key/unp.h	/^void	 heartbeat_serv(int, int, int);$/;"	p	signature:(int, int, int)
heartbeat_serv	lib/unp.h	/^void	 heartbeat_serv(int, int, int);$/;"	p	signature:(int, int, int)
heartbeat_serv	oob/heartbeatserv.c	/^heartbeat_serv(int servfd_arg, int nsec_arg, int maxnalarms_arg)$/;"	f	signature:(int servfd_arg, int nsec_arg, int maxnalarms_arg)
heartbeat_serv	sctp/unp.h	/^void	 heartbeat_serv(int, int, int);$/;"	p	signature:(int, int, int)
hints_default	libfree/getaddrinfo.c	/^static struct addrinfo	hints_default;$/;"	v	typeref:struct:addrinfo	file:
hints_default	libgai/old/savecopy.c	/^static struct addrinfo	hints_default;$/;"	v	typeref:struct:addrinfo	file:
home_page	nonblock/home_page.c	/^home_page(const char *host, const char *fname)$/;"	f	signature:(const char *host, const char *fname)
home_page	nonblock/web.h	/^void	home_page(const char *, const char *);$/;"	p	signature:(const char *, const char *)
home_page	threads/web01.c	/^home_page(const char *host, const char *fname)$/;"	f	signature:(const char *host, const char *fname)
home_page	threads/web01.c	/^void	home_page(const char *, const char *);$/;"	p	file:	signature:(const char *, const char *)
home_page	threads/web02.c	/^home_page(const char *host, const char *fname)$/;"	f	signature:(const char *host, const char *fname)
home_page	threads/web02.c	/^void	home_page(const char *, const char *);$/;"	p	file:	signature:(const char *, const char *)
home_page	threads/web03.c	/^home_page(const char *host, const char *fname)$/;"	f	signature:(const char *host, const char *fname)
home_page	threads/web03.c	/^void	home_page(const char *, const char *);$/;"	p	file:	signature:(const char *, const char *)
host	libgai/gai_hdr.h	/^  const char	*host;	\/* hostname or address string *\/$/;"	m	struct:search	access:public
host	libgai/old/savecopy.c	/^  const char	*host;	\/* hostname of address string *\/$/;"	m	struct:search	file:	access:public
host	ping/ping.h	/^char	*host;$/;"	v
host	sock/main.c	/^char	*host;		\/* hostname or dotted-decimal string *\/$/;"	v
host	traceroute/trace.h	/^char	*host;$/;"	v
host_serv	key/unp.h	/^struct addrinfo *host_serv(const char *, const char *, int, int);$/;"	p	signature:(const char *, const char *, int, int)
host_serv	lib/host_serv.c	/^host_serv(const char *host, const char *serv, int family, int socktype)$/;"	f	signature:(const char *host, const char *serv, int family, int socktype)
host_serv	lib/unp.h	/^struct addrinfo *host_serv(const char *, const char *, int, int);$/;"	p	signature:(const char *, const char *, int, int)
host_serv	sctp/unp.h	/^struct addrinfo *host_serv(const char *, const char *, int, int);$/;"	p	signature:(const char *, const char *, int, int)
hostname	ping/bsdping.c	/^char *hostname;$/;"	v
hstrerror	key/unp.h	/^const char	*hstrerror(int);$/;"	p	signature:(int)
hstrerror	lib/hstrerror.c	/^hstrerror(int err)$/;"	f	signature:(int err)
hstrerror	lib/unp.h	/^const char	*hstrerror(int);$/;"	p	signature:(int)
hstrerror	sctp/unp.h	/^const char	*hstrerror(int);$/;"	p	signature:(int)
i_val	sockopt/checkopts.c	/^  int				i_val;$/;"	m	union:val	file:	access:public
icmp6_cksum	ping/old/icmp6.h	/^    u_int16_t	icmp6_cksum;		\/* Checksum field *\/$/;"	m	struct:icmp6hdr	access:public
icmp6_code	ping/old/icmp6.h	/^    u_int8_t	icmp6_code;		\/* Code field *\/$/;"	m	struct:icmp6hdr	access:public
icmp6_data16	ping/old/icmp6.h	/^#define	icmp6_data16	/;"	d
icmp6_data32	ping/old/icmp6.h	/^#define	icmp6_data32	/;"	d
icmp6_data8	ping/old/icmp6.h	/^#define	icmp6_data8	/;"	d
icmp6_dataun	ping/old/icmp6.h	/^    } icmp6_dataun;$/;"	m	struct:icmp6hdr	typeref:union:icmp6hdr::__anon1	access:public
icmp6_id	ping/old/icmp6.h	/^#define	icmp6_id	/;"	d
icmp6_maxdelay	ping/old/icmp6.h	/^#define	icmp6_maxdelay	/;"	d
icmp6_mtu	ping/old/icmp6.h	/^#define	icmp6_mtu	/;"	d
icmp6_pptr	ping/old/icmp6.h	/^#define	icmp6_pptr	/;"	d
icmp6_seq	ping/old/icmp6.h	/^#define	icmp6_seq	/;"	d
icmp6_type	ping/old/icmp6.h	/^    u_int8_t	icmp6_type;		\/* Type field *\/$/;"	m	struct:icmp6hdr	access:public
icmp6hdr	ping/old/icmp6.h	/^struct icmp6hdr {$/;"	s
icmp6hdr::__anon1::un_data16	ping/old/icmp6.h	/^	u_int16_t	un_data16[2];	\/* Type-specific field *\/$/;"	m	union:icmp6hdr::__anon1	access:public
icmp6hdr::__anon1::un_data32	ping/old/icmp6.h	/^	u_int32_t	un_data32[1];	\/* Type-specific field *\/$/;"	m	union:icmp6hdr::__anon1	access:public
icmp6hdr::__anon1::un_data8	ping/old/icmp6.h	/^	u_int8_t	un_data8[4];	\/* Type-specific field *\/$/;"	m	union:icmp6hdr::__anon1	access:public
icmp6hdr::icmp6_cksum	ping/old/icmp6.h	/^    u_int16_t	icmp6_cksum;		\/* Checksum field *\/$/;"	m	struct:icmp6hdr	access:public
icmp6hdr::icmp6_code	ping/old/icmp6.h	/^    u_int8_t	icmp6_code;		\/* Code field *\/$/;"	m	struct:icmp6hdr	access:public
icmp6hdr::icmp6_dataun	ping/old/icmp6.h	/^    } icmp6_dataun;$/;"	m	struct:icmp6hdr	typeref:union:icmp6hdr::__anon1	access:public
icmp6hdr::icmp6_type	ping/old/icmp6.h	/^    u_int8_t	icmp6_type;		\/* Type field *\/$/;"	m	struct:icmp6hdr	access:public
icmpcode	traceroute/trace.h	/^  const char	*(*icmpcode)(int);$/;"	m	struct:proto	access:public
icmpcode_v4	traceroute/icmpcode_v4.c	/^icmpcode_v4(int code)$/;"	f	signature:(int code)
icmpcode_v4	traceroute/trace.h	/^const char	*icmpcode_v4(int);$/;"	p	signature:(int)
icmpcode_v6	traceroute/icmpcode_v6.c	/^icmpcode_v6(int code)$/;"	f	signature:(int code)
icmpcode_v6	traceroute/trace.h	/^const char	*icmpcode_v6(int);$/;"	p	signature:(int)
icmpd_code	icmpd/unpicmpd.h	/^  char				icmpd_code;	\/* actual ICMPv[46] code *\/$/;"	m	struct:icmpd_err	access:public
icmpd_dest	icmpd/unpicmpd.h	/^  struct sockaddr_storage	icmpd_dest;	\/* sockaddr_storage handles any size *\/$/;"	m	struct:icmpd_err	typeref:struct:icmpd_err::sockaddr_storage	access:public
icmpd_err	icmpd/unpicmpd.h	/^struct icmpd_err {$/;"	s
icmpd_err::icmpd_code	icmpd/unpicmpd.h	/^  char				icmpd_code;	\/* actual ICMPv[46] code *\/$/;"	m	struct:icmpd_err	access:public
icmpd_err::icmpd_dest	icmpd/unpicmpd.h	/^  struct sockaddr_storage	icmpd_dest;	\/* sockaddr_storage handles any size *\/$/;"	m	struct:icmpd_err	typeref:struct:icmpd_err::sockaddr_storage	access:public
icmpd_err::icmpd_errno	icmpd/unpicmpd.h	/^  int				icmpd_errno;\/* EHOSTUNREACH, EMSGSIZE, ECONNREFUSED *\/$/;"	m	struct:icmpd_err	access:public
icmpd_err::icmpd_len	icmpd/unpicmpd.h	/^  socklen_t			icmpd_len;	\/* length of sockaddr{} that follows *\/$/;"	m	struct:icmpd_err	access:public
icmpd_err::icmpd_type	icmpd/unpicmpd.h	/^  char				icmpd_type;	\/* actual ICMPv[46] type *\/$/;"	m	struct:icmpd_err	access:public
icmpd_errno	icmpd/unpicmpd.h	/^  int				icmpd_errno;\/* EHOSTUNREACH, EMSGSIZE, ECONNREFUSED *\/$/;"	m	struct:icmpd_err	access:public
icmpd_len	icmpd/unpicmpd.h	/^  socklen_t			icmpd_len;	\/* length of sockaddr{} that follows *\/$/;"	m	struct:icmpd_err	access:public
icmpd_type	icmpd/unpicmpd.h	/^  char				icmpd_type;	\/* actual ICMPv[46] type *\/$/;"	m	struct:icmpd_err	access:public
icmpproto	ping/ping.h	/^  int	   	    icmpproto;	\/* IPPROTO_xxx value for ICMP *\/$/;"	m	struct:proto	access:public
icmpproto	traceroute/trace.h	/^  int			icmpproto;	\/* IPPROTO_xxx value for ICMP *\/$/;"	m	struct:proto	access:public
ident	ping/bsdping.c	/^int ident;			\/* process id to identify our packets *\/$/;"	v
idlist	key/name.c	/^struct idlist {$/;"	s	file:
idlist::name	key/name.c	/^	const char *name;$/;"	m	struct:idlist	file:	access:public
idlist::val	key/name.c	/^	int val;$/;"	m	struct:idlist	file:	access:public
idlistlookup	key/name.c	/^idlistlookup(char *name, struct idlist *il)$/;"	f	signature:(char *name, struct idlist *il)
if_freenameindex	key/unp.h	/^void			 if_freenameindex(struct if_nameindex *);$/;"	p	signature:(struct if_nameindex *)
if_freenameindex	lib/if_nameindex.c	/^if_freenameindex(struct if_nameindex *ptr)$/;"	f	signature:(struct if_nameindex *ptr)
if_freenameindex	lib/unp.h	/^void			 if_freenameindex(struct if_nameindex *);$/;"	p	signature:(struct if_nameindex *)
if_freenameindex	libroute/if_nameindex.c	/^if_freenameindex(struct if_nameindex *ptr)$/;"	f	signature:(struct if_nameindex *ptr)
if_freenameindex	sctp/unp.h	/^void			 if_freenameindex(struct if_nameindex *);$/;"	p	signature:(struct if_nameindex *)
if_index	key/unp.h	/^  unsigned int   if_index;  \/* 1, 2, ... *\/$/;"	m	struct:if_nameindex	access:public
if_index	lib/unp.h	/^  unsigned int   if_index;  \/* 1, 2, ... *\/$/;"	m	struct:if_nameindex	access:public
if_index	sctp/unp.h	/^  unsigned int   if_index;  \/* 1, 2, ... *\/$/;"	m	struct:if_nameindex	access:public
if_indextoname	key/unp.h	/^char			*if_indextoname(unsigned int, char *);$/;"	p	signature:(unsigned int, char *)
if_indextoname	lib/if_indextoname.c	/^if_indextoname(unsigned int index, char *name)$/;"	f	signature:(unsigned int index, char *name)
if_indextoname	lib/unp.h	/^char			*if_indextoname(unsigned int, char *);$/;"	p	signature:(unsigned int, char *)
if_indextoname	libroute/if_indextoname.c	/^if_indextoname(unsigned int idx, char *name)$/;"	f	signature:(unsigned int idx, char *name)
if_indextoname	sctp/unp.h	/^char			*if_indextoname(unsigned int, char *);$/;"	p	signature:(unsigned int, char *)
if_name	key/unp.h	/^  char          *if_name;   \/* null terminated name: "le0", ... *\/$/;"	m	struct:if_nameindex	access:public
if_name	lib/unp.h	/^  char          *if_name;   \/* null-terminated name: "le0", ... *\/$/;"	m	struct:if_nameindex	access:public
if_name	sctp/unp.h	/^  char          *if_name;   \/* null terminated name: "le0", ... *\/$/;"	m	struct:if_nameindex	access:public
if_nameindex	key/unp.h	/^struct if_nameindex *if_nameindex(void);$/;"	p	signature:(void)
if_nameindex	key/unp.h	/^struct if_nameindex {$/;"	s
if_nameindex	lib/if_nameindex.c	/^if_nameindex(void)$/;"	f	signature:(void)
if_nameindex	lib/unp.h	/^struct if_nameindex *if_nameindex(void);$/;"	p	signature:(void)
if_nameindex	lib/unp.h	/^struct if_nameindex {$/;"	s
if_nameindex	libroute/if_nameindex.c	/^if_nameindex(void)$/;"	f	signature:(void)
if_nameindex	sctp/unp.h	/^struct if_nameindex *if_nameindex(void);$/;"	p	signature:(void)
if_nameindex	sctp/unp.h	/^struct if_nameindex {$/;"	s
if_nameindex::if_index	key/unp.h	/^  unsigned int   if_index;  \/* 1, 2, ... *\/$/;"	m	struct:if_nameindex	access:public
if_nameindex::if_index	lib/unp.h	/^  unsigned int   if_index;  \/* 1, 2, ... *\/$/;"	m	struct:if_nameindex	access:public
if_nameindex::if_index	sctp/unp.h	/^  unsigned int   if_index;  \/* 1, 2, ... *\/$/;"	m	struct:if_nameindex	access:public
if_nameindex::if_name	key/unp.h	/^  char          *if_name;   \/* null terminated name: "le0", ... *\/$/;"	m	struct:if_nameindex	access:public
if_nameindex::if_name	lib/unp.h	/^  char          *if_name;   \/* null-terminated name: "le0", ... *\/$/;"	m	struct:if_nameindex	access:public
if_nameindex::if_name	sctp/unp.h	/^  char          *if_name;   \/* null terminated name: "le0", ... *\/$/;"	m	struct:if_nameindex	access:public
if_nametoindex	key/unp.h	/^unsigned int	 if_nametoindex(const char *);$/;"	p	signature:(const char *)
if_nametoindex	lib/if_nametoindex.c	/^if_nametoindex(const char *name)$/;"	f	signature:(const char *name)
if_nametoindex	lib/unp.h	/^unsigned int	 if_nametoindex(const char *);$/;"	p	signature:(const char *)
if_nametoindex	libroute/if_nametoindex.c	/^if_nametoindex(const char *name)$/;"	f	signature:(const char *name)
if_nametoindex	sctp/unp.h	/^unsigned int	 if_nametoindex(const char *);$/;"	p	signature:(const char *)
ifi_addr	lib/unpifi.h	/^  struct sockaddr  *ifi_addr;	\/* primary address *\/$/;"	m	struct:ifi_info	typeref:struct:ifi_info::sockaddr	access:public
ifi_brdaddr	lib/unpifi.h	/^  struct sockaddr  *ifi_brdaddr;\/* broadcast address *\/$/;"	m	struct:ifi_info	typeref:struct:ifi_info::sockaddr	access:public
ifi_dstaddr	lib/unpifi.h	/^  struct sockaddr  *ifi_dstaddr;\/* destination address *\/$/;"	m	struct:ifi_info	typeref:struct:ifi_info::sockaddr	access:public
ifi_flags	lib/unpifi.h	/^  short   ifi_flags;			\/* IFF_xxx constants from <net\/if.h> *\/$/;"	m	struct:ifi_info	access:public
ifi_haddr	lib/unpifi.h	/^  u_char  ifi_haddr[IFI_HADDR];	\/* hardware address *\/$/;"	m	struct:ifi_info	access:public
ifi_hlen	lib/unpifi.h	/^  u_short ifi_hlen;				\/* # bytes in hardware address: 0, 6, 8 *\/$/;"	m	struct:ifi_info	access:public
ifi_index	lib/unpifi.h	/^  short   ifi_index;			\/* interface index *\/$/;"	m	struct:ifi_info	access:public
ifi_info	lib/unpifi.h	/^struct ifi_info {$/;"	s
ifi_info::ifi_addr	lib/unpifi.h	/^  struct sockaddr  *ifi_addr;	\/* primary address *\/$/;"	m	struct:ifi_info	typeref:struct:ifi_info::sockaddr	access:public
ifi_info::ifi_brdaddr	lib/unpifi.h	/^  struct sockaddr  *ifi_brdaddr;\/* broadcast address *\/$/;"	m	struct:ifi_info	typeref:struct:ifi_info::sockaddr	access:public
ifi_info::ifi_dstaddr	lib/unpifi.h	/^  struct sockaddr  *ifi_dstaddr;\/* destination address *\/$/;"	m	struct:ifi_info	typeref:struct:ifi_info::sockaddr	access:public
ifi_info::ifi_flags	lib/unpifi.h	/^  short   ifi_flags;			\/* IFF_xxx constants from <net\/if.h> *\/$/;"	m	struct:ifi_info	access:public
ifi_info::ifi_haddr	lib/unpifi.h	/^  u_char  ifi_haddr[IFI_HADDR];	\/* hardware address *\/$/;"	m	struct:ifi_info	access:public
ifi_info::ifi_hlen	lib/unpifi.h	/^  u_short ifi_hlen;				\/* # bytes in hardware address: 0, 6, 8 *\/$/;"	m	struct:ifi_info	access:public
ifi_info::ifi_index	lib/unpifi.h	/^  short   ifi_index;			\/* interface index *\/$/;"	m	struct:ifi_info	access:public
ifi_info::ifi_mtu	lib/unpifi.h	/^  short   ifi_mtu;				\/* interface MTU *\/$/;"	m	struct:ifi_info	access:public
ifi_info::ifi_myflags	lib/unpifi.h	/^  short   ifi_myflags;			\/* our own IFI_xxx flags *\/$/;"	m	struct:ifi_info	access:public
ifi_info::ifi_name	lib/unpifi.h	/^  char    ifi_name[IFI_NAME];	\/* interface name, null-terminated *\/$/;"	m	struct:ifi_info	access:public
ifi_info::ifi_next	lib/unpifi.h	/^  struct ifi_info  *ifi_next;	\/* next of these structures *\/$/;"	m	struct:ifi_info	typeref:struct:ifi_info::ifi_info	access:public
ifi_mtu	lib/unpifi.h	/^  short   ifi_mtu;				\/* interface MTU *\/$/;"	m	struct:ifi_info	access:public
ifi_myflags	lib/unpifi.h	/^  short   ifi_myflags;			\/* our own IFI_xxx flags *\/$/;"	m	struct:ifi_info	access:public
ifi_name	lib/unpifi.h	/^  char    ifi_name[IFI_NAME];	\/* interface name, null-terminated *\/$/;"	m	struct:ifi_info	access:public
ifi_next	lib/unpifi.h	/^  struct ifi_info  *ifi_next;	\/* next of these structures *\/$/;"	m	struct:ifi_info	typeref:struct:ifi_info::ifi_info	access:public
iget	server/pthread08.h	/^int					clifd[MAXNCLI], iget, iput;$/;"	v
iget	sigio/dgecho01.c	/^static int	iget;		\/* next one for main loop to process *\/$/;"	v	file:
ignorewerr	sock/main.c	/^int		ignorewerr;			\/* true if write() errors should be ignored *\/$/;"	v
in6addr_any	lib/in6addr_any.c	/^const struct in6_addr in6addr_any;$/;"	v	typeref:struct:in6_addr
in_cksum	key/unp.h	/^unsigned short	in_cksum(unsigned short *, int);$/;"	p	signature:(unsigned short *, int)
in_cksum	lib/unp.h	/^uint16_t	in_cksum(uint16_t *, int);$/;"	p	signature:(uint16_t *, int)
in_cksum	libfree/in_cksum.c	/^in_cksum(uint16_t *addr, int len)$/;"	f	signature:(uint16_t *addr, int len)
in_cksum	ping/bsdping.c	/^in_cksum(addr, len)$/;"	f
in_cksum	ping/bsdping.c	/^u_short	 in_cksum __P((u_short *, int));$/;"	p	file:	signature:(u_short *, int)
in_cksum	sctp/unp.h	/^unsigned short	in_cksum(unsigned short *, int);$/;"	p	signature:(unsigned short *, int)
in_pktinfo	key/unp.h	/^struct in_pktinfo {$/;"	s
in_pktinfo	sctp/unp.h	/^struct in_pktinfo {$/;"	s
in_pktinfo::ipi_addr	key/unp.h	/^  struct in_addr	ipi_addr;	\/* dst IPv4 address *\/$/;"	m	struct:in_pktinfo	typeref:struct:in_pktinfo::in_addr	access:public
in_pktinfo::ipi_addr	sctp/unp.h	/^  struct in_addr	ipi_addr;	\/* dst IPv4 address *\/$/;"	m	struct:in_pktinfo	typeref:struct:in_pktinfo::in_addr	access:public
in_pktinfo::ipi_ifindex	key/unp.h	/^  int				ipi_ifindex;\/* received interface index *\/$/;"	m	struct:in_pktinfo	access:public
in_pktinfo::ipi_ifindex	sctp/unp.h	/^  int				ipi_ifindex;\/* received interface index *\/$/;"	m	struct:in_pktinfo	access:public
inet6_srcrt_print	ipopts/sourceroute6.c	/^inet6_srcrt_print(void *ptr)$/;"	f	signature:(void *ptr)
inet6_srcrt_print	lib/unp.h	/^void	 inet6_srcrt_print(void *);$/;"	p	signature:(void *)
inet_aton	key/unp.h	/^int		 inet_aton(const char *, struct in_addr *);$/;"	p	signature:(const char *, struct in_addr *)
inet_aton	lib/unp.h	/^int		 inet_aton(const char *, struct in_addr *);$/;"	p	signature:(const char *, struct in_addr *)
inet_aton	libfree/inet_aton.c	/^inet_aton(const char *cp, struct in_addr *ap)$/;"	f	signature:(const char *cp, struct in_addr *ap)
inet_aton	libfree/inet_pton_ipv4.c	/^int		 inet_aton(const char *, struct in_addr *);$/;"	p	file:	signature:(const char *, struct in_addr *)
inet_aton	sctp/unp.h	/^int		 inet_aton(const char *, struct in_addr *);$/;"	p	signature:(const char *, struct in_addr *)
inet_ntop	key/unp.h	/^const char	*inet_ntop(int, const void *, char *, size_t);$/;"	p	signature:(int, const void *, char *, size_t)
inet_ntop	lib/unp.h	/^const char	*inet_ntop(int, const void *, char *, size_t);$/;"	p	signature:(int, const void *, char *, size_t)
inet_ntop	libfree/inet_ntop.c	/^inet_ntop(af, src, dst, size)$/;"	f
inet_ntop	libfree/inet_ntop_ipv4.c	/^inet_ntop(int family, const void *addrptr, char *strptr, size_t len)$/;"	f	signature:(int family, const void *addrptr, char *strptr, size_t len)
inet_ntop	sctp/unp.h	/^const char	*inet_ntop(int, const void *, char *, size_t);$/;"	p	signature:(int, const void *, char *, size_t)
inet_ntop4	libfree/inet_ntop.c	/^inet_ntop4(src, dst, size)$/;"	f	file:
inet_ntop4	libfree/inet_ntop.c	/^static const char *inet_ntop4(const u_char *src, char *dst, size_t size);$/;"	p	file:	signature:(const u_char *src, char *dst, size_t size)
inet_ntop6	libfree/inet_ntop.c	/^inet_ntop6(src, dst, size)$/;"	f	file:
inet_ntop6	libfree/inet_ntop.c	/^static const char *inet_ntop6(const u_char *src, char *dst, size_t size);$/;"	p	file:	signature:(const u_char *src, char *dst, size_t size)
inet_pton	key/unp.h	/^int			 inet_pton(int, const char *, void *);$/;"	p	signature:(int, const char *, void *)
inet_pton	lib/unp.h	/^int			 inet_pton(int, const char *, void *);$/;"	p	signature:(int, const char *, void *)
inet_pton	libfree/getaddrinfo.c	/^int	 inet_pton(int, const char *, void *);$/;"	p	file:	signature:(int, const char *, void *)
inet_pton	libfree/inet_pton.c	/^inet_pton(af, src, dst)$/;"	f
inet_pton	libfree/inet_pton_ipv4.c	/^inet_pton(int family, const char *strptr, void *addrptr)$/;"	f	signature:(int family, const char *strptr, void *addrptr)
inet_pton	libfree/test_inet_pton.c	/^int		inet_pton(int, const char *, void *);$/;"	p	file:	signature:(int, const char *, void *)
inet_pton	sctp/unp.h	/^int			 inet_pton(int, const char *, void *);$/;"	p	signature:(int, const char *, void *)
inet_pton4	libfree/inet_pton.c	/^inet_pton4(src, dst)$/;"	f	file:
inet_pton4	libfree/inet_pton.c	/^static int	inet_pton4(const char *src, u_char *dst);$/;"	p	file:	signature:(const char *src, u_char *dst)
inet_pton6	libfree/inet_pton.c	/^inet_pton6(src, dst)$/;"	f	file:
inet_pton6	libfree/inet_pton.c	/^static int	inet_pton6(const char *src, u_char *dst);$/;"	p	file:	signature:(const char *src, u_char *dst)
inet_srcrt_add	ipopts/sourceroute.c	/^inet_srcrt_add(char *hostptr)$/;"	f	signature:(char *hostptr)
inet_srcrt_add	key/unp.h	/^int		 inet_srcrt_add(char *, int);$/;"	p	signature:(char *, int)
inet_srcrt_add	lib/unp.h	/^int		 inet_srcrt_add(char *);$/;"	p	signature:(char *)
inet_srcrt_add	sctp/unp.h	/^int		 inet_srcrt_add(char *, int);$/;"	p	signature:(char *, int)
inet_srcrt_init	ipopts/sourceroute.c	/^inet_srcrt_init(int type)$/;"	f	signature:(int type)
inet_srcrt_init	key/unp.h	/^u_char  *inet_srcrt_init(void);$/;"	p	signature:(void)
inet_srcrt_init	lib/unp.h	/^u_char  *inet_srcrt_init(int);$/;"	p	signature:(int)
inet_srcrt_init	sctp/unp.h	/^u_char  *inet_srcrt_init(void);$/;"	p	signature:(void)
inet_srcrt_print	ipopts/sourceroute.c	/^inet_srcrt_print(u_char *ptr, int len)$/;"	f	signature:(u_char *ptr, int len)
inet_srcrt_print	key/unp.h	/^void	 inet_srcrt_print(u_char *, int);$/;"	p	signature:(u_char *, int)
inet_srcrt_print	lib/unp.h	/^void	 inet_srcrt_print(u_char *, int);$/;"	p	signature:(u_char *, int)
inet_srcrt_print	sctp/unp.h	/^void	 inet_srcrt_print(u_char *, int);$/;"	p	signature:(u_char *, int)
infile	threads/test04.c	/^static char	*infile;	\/* from argv[1]; read-only by threads *\/$/;"	v	file:
init_v6	ping/init_v6.c	/^init_v6()$/;"	f
init_v6	ping/ping.h	/^void	 init_v6(void);$/;"	p	signature:(void)
int_part	ssntp/ntp.h	/^  uint16_t	int_part;$/;"	m	struct:s_fixedpt	access:public
int_part	ssntp/ntp.h	/^  uint32_t	int_part;$/;"	m	struct:l_fixedpt	access:public
interval	ping/bsdping.c	/^int interval = 1;		\/* interval between packets *\/$/;"	v
ip6_ctlun	ping/old/ip6.h	/^    } ip6_ctlun;$/;"	m	struct:ip6hdr	typeref:union:ip6hdr::__anon2	access:public
ip6_dst	ping/old/ip6.h	/^    struct in6_addr ip6_dst;		\/* destination address *\/$/;"	m	struct:ip6hdr	typeref:struct:ip6hdr::in6_addr	access:public
ip6_flow	ping/old/ip6.h	/^#define ip6_flow	/;"	d
ip6_hlim	ping/old/ip6.h	/^#define	ip6_hlim	/;"	d
ip6_hops	ping/old/ip6.h	/^#define	ip6_hops	/;"	d
ip6_nxt	ping/old/ip6.h	/^#define	ip6_nxt	/;"	d
ip6_plen	ping/old/ip6.h	/^#define	ip6_plen	/;"	d
ip6_src	ping/old/ip6.h	/^    struct in6_addr ip6_src;		\/* source address *\/$/;"	m	struct:ip6hdr	typeref:struct:ip6hdr::in6_addr	access:public
ip6_vfc	ping/old/ip6.h	/^#define ip6_vfc	/;"	d
ip6hdr	ping/old/ip6.h	/^struct ip6hdr {$/;"	s
ip6hdr::__anon2::ip6hdrctl	ping/old/ip6.h	/^	struct ip6hdrctl {$/;"	s	union:ip6hdr::__anon2	access:public
ip6hdr::__anon2::ip6hdrctl::ctl6_flow	ping/old/ip6.h	/^	    u_int32_t ctl6_flow;	\/* 24 bits of flow-ID *\/$/;"	m	struct:ip6hdr::__anon2::ip6hdrctl	access:public
ip6hdr::__anon2::ip6hdrctl::ctl6_hlim	ping/old/ip6.h	/^	    u_int8_t  ctl6_hlim;        \/* hop limit *\/$/;"	m	struct:ip6hdr::__anon2::ip6hdrctl	access:public
ip6hdr::__anon2::ip6hdrctl::ctl6_nxt	ping/old/ip6.h	/^	    u_int8_t  ctl6_nxt;         \/* next header *\/$/;"	m	struct:ip6hdr::__anon2::ip6hdrctl	access:public
ip6hdr::__anon2::ip6hdrctl::ctl6_plen	ping/old/ip6.h	/^	    u_int16_t ctl6_plen;        \/* payload length *\/$/;"	m	struct:ip6hdr::__anon2::ip6hdrctl	access:public
ip6hdr::__anon2::un_ctl6	ping/old/ip6.h	/^	} un_ctl6;$/;"	m	union:ip6hdr::__anon2	typeref:struct:ip6hdr::__anon2::ip6hdrctl	access:public
ip6hdr::__anon2::un_vfc	ping/old/ip6.h	/^	u_int8_t un_vfc;		\/* 4 bits version, 4 bits reserved *\/$/;"	m	union:ip6hdr::__anon2	access:public
ip6hdr::ip6_ctlun	ping/old/ip6.h	/^    } ip6_ctlun;$/;"	m	struct:ip6hdr	typeref:union:ip6hdr::__anon2	access:public
ip6hdr::ip6_dst	ping/old/ip6.h	/^    struct in6_addr ip6_dst;		\/* destination address *\/$/;"	m	struct:ip6hdr	typeref:struct:ip6hdr::in6_addr	access:public
ip6hdr::ip6_src	ping/old/ip6.h	/^    struct in6_addr ip6_src;		\/* source address *\/$/;"	m	struct:ip6hdr	typeref:struct:ip6hdr::in6_addr	access:public
ip6hdrctl	ping/old/ip6.h	/^	struct ip6hdrctl {$/;"	s	union:ip6hdr::__anon2	access:public
ipi_addr	key/unp.h	/^  struct in_addr	ipi_addr;	\/* dst IPv4 address *\/$/;"	m	struct:in_pktinfo	typeref:struct:in_pktinfo::in_addr	access:public
ipi_addr	lib/unp.h	/^  struct in_addr	ipi_addr;	\/* dst IPv4 address *\/$/;"	m	struct:unp_in_pktinfo	typeref:struct:unp_in_pktinfo::in_addr	access:public
ipi_addr	sctp/unp.h	/^  struct in_addr	ipi_addr;	\/* dst IPv4 address *\/$/;"	m	struct:in_pktinfo	typeref:struct:in_pktinfo::in_addr	access:public
ipi_ifindex	key/unp.h	/^  int				ipi_ifindex;\/* received interface index *\/$/;"	m	struct:in_pktinfo	access:public
ipi_ifindex	lib/unp.h	/^  int				ipi_ifindex;\/* received interface index *\/$/;"	m	struct:unp_in_pktinfo	access:public
ipi_ifindex	sctp/unp.h	/^  int				ipi_ifindex;\/* received interface index *\/$/;"	m	struct:in_pktinfo	access:public
iptos	sock/main.c	/^int		iptos = -1;			\/* IP_TOS opton *\/$/;"	v
ipttl	sock/main.c	/^int		ipttl = -1;			\/* IP_TTL opton *\/$/;"	v
iput	server/pthread08.h	/^int					clifd[MAXNCLI], iget, iput;$/;"	v
iput	sigio/dgecho01.c	/^static int	iput;		\/* next one for signal handler to read into *\/$/;"	v	file:
is_readlock	sock/ourhdr.h	/^#define	is_readlock(/;"	d
is_writelock	sock/ourhdr.h	/^#define	is_writelock(/;"	d
isfdtype	key/unp.h	/^int		 isfdtype(int, int);$/;"	p	signature:(int, int)
isfdtype	sctp/unp.h	/^int		 isfdtype(int, int);$/;"	p	signature:(int, int)
jmpbuf	bcast/dgclibcast5.c	/^static sigjmp_buf	jmpbuf;$/;"	v	file:
jmpbuf	mcast/dgclimcast5.c	/^static sigjmp_buf	jmpbuf;$/;"	v	file:
jmpbuf	mcast/dgclimcast6.c	/^static sigjmp_buf	jmpbuf;$/;"	v	file:
jmpbuf	rtt/dg_send_recv.c	/^static sigjmp_buf	jmpbuf;$/;"	v	file:
jmpbuf	udpcksum/udpcksum.c	/^static sigjmp_buf	jmpbuf;$/;"	v	file:
join_mcast	sock/multicast.c	/^join_mcast(int fd, struct sockaddr_in *sin)$/;"	f	signature:(int fd, struct sockaddr_in *sin)
join_mcast	sock/sock.h	/^void	join_mcast(int, struct sockaddr_in *);$/;"	p	signature:(int, struct sockaddr_in *)
joinip	sock/main.c	/^char	joinip[32];			\/* multicast IP address, dotted-decimal string *\/$/;"	v
keepalive	sock/main.c	/^int		keepalive;			\/* SO_KEEPALIVE *\/$/;"	v
key_print	key/printsadbmsg.c	/^key_print(struct sadb_ext *ext)$/;"	f	signature:(struct sadb_ext *ext)
l	udpcksum/senddnsquery-libnet.c	/^static libnet_t *l;		\/* libnet descriptor *\/$/;"	v	file:
l_fixedpt	ssntp/ntp.h	/^struct l_fixedpt {		\/* 64-bit fixed-point *\/$/;"	s
l_fixedpt::fraction	ssntp/ntp.h	/^  uint32_t	fraction;$/;"	m	struct:l_fixedpt	access:public
l_fixedpt::int_part	ssntp/ntp.h	/^  uint32_t	int_part;$/;"	m	struct:l_fixedpt	access:public
l_val	sockopt/checkopts.c	/^  long				l_val;$/;"	m	union:val	file:	access:public
lenptr	ipopts/sourceroute.c	/^static u_char	*lenptr;	\/* pointer to length byte in SRR option *\/$/;"	v	file:
lifetime_print	key/printsadbmsg.c	/^lifetime_print(struct sadb_ext *ext)$/;"	f	signature:(struct sadb_ext *ext)
linger	sock/main.c	/^long	linger = -1;		\/* 0 or positive turns on option *\/$/;"	v
linger_val	sockopt/checkopts.c	/^  struct linger		linger_val;$/;"	m	union:val	typeref:struct:val::linger	file:	access:public
listenfd	debug/test05.c	/^int		listenfd, connfd;$/;"	v
listenfd	icmpd/icmpd.h	/^int				fd4, fd6, listenfd, maxi, maxfd, nready;$/;"	v
listenfd	oob/tcprecv01.c	/^int		listenfd, connfd;$/;"	v
listenfd	oob/tcprecv05.c	/^int		listenfd, connfd;$/;"	v
listenfd	server/pthread07.h	/^int				listenfd, nthreads;$/;"	v
listenfd	server/pthread09.h	/^int				listenfd, nthreads;$/;"	v
listenq	sock/main.c	/^int		listenq = 5;		\/* listen queue for TCP Server *\/$/;"	v
local	udpcksum/main.c	/^struct sockaddr	*dest, *local;$/;"	v	typeref:struct:
localip	sock/main.c	/^char	localip[32];		\/* local IP address, dotted-decimal string *\/$/;"	v
locallen	udpcksum/main.c	/^socklen_t		destlen, locallen;$/;"	v
locallookup	udpcksum/main.c	/^struct sockaddr_in locallookup;$/;"	v	typeref:struct:sockaddr_in
lock_fd	server/lock_fcntl.c	/^static int			lock_fd = -1;$/;"	v	file:
lock_it	server/lock_fcntl.c	/^static struct flock	lock_it, unlock_it;$/;"	v	typeref:struct:flock	file:
lock_reg	sock/ourhdr.h	/^int		lock_reg(int, int, int, off_t, int, off_t);$/;"	p	signature:(int, int, int, off_t, int, off_t)
lock_test	sock/ourhdr.h	/^pid_t	lock_test(int, int, off_t, int, off_t);$/;"	p	signature:(int, int, off_t, int, off_t)
log_msg	sock/ourhdr.h	/^void	log_msg(const char *, ...);		\/* {App misc_source} *\/$/;"	p	signature:(const char *, ...)
log_open	sock/ourhdr.h	/^void	log_open(const char *, int, int);$/;"	p	signature:(const char *, int, int)
log_quit	sock/ourhdr.h	/^void	log_quit(const char *, ...);$/;"	p	signature:(const char *, ...)
log_ret	sock/ourhdr.h	/^void	log_ret(const char *, ...);$/;"	p	signature:(const char *, ...)
log_sys	sock/ourhdr.h	/^void	log_sys(const char *, ...);$/;"	p	signature:(const char *, ...)
loop	mysdr/loop.c	/^loop(int sockfd, socklen_t salen)$/;"	f	signature:(int sockfd, socklen_t salen)
loop	mysdr/main.c	/^void	loop(int, socklen_t);$/;"	p	file:	signature:(int, socklen_t)
loop	sock/loop.c	/^loop(int sockfd)$/;"	f	signature:(int sockfd)
loop_tcp	sock/looptcp.c	/^loop_tcp(int sockfd)$/;"	f	signature:(int sockfd)
loop_tcp	sock/sock.h	/^void	loop_tcp(int);$/;"	p	signature:(int)
loop_udp	sock/loopudp.c	/^loop_udp(int sockfd)$/;"	f	signature:(int sockfd)
loop_udp	sock/sock.h	/^void	loop_udp(int);$/;"	p	signature:(int)
lport	icmpd/icmpd.h	/^  int	lport;			\/* local port bound to client's UDP socket *\/$/;"	m	struct:client	access:public
main	advio/daytimetcpcli.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	advio/daytimeudpcli3.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	advio/daytimeudpcli4.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	advio/old/test01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	advio/tcpcli01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	advio/tcpcli02.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	advio/tcpcli03.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	advio/tcpcli04.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	advio/tcpserv02.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	advio/udpcli01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	advio/udpcli02.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	advio/udpcli03.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	advio/udpserv01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	advio/udpserv03.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	advio/udpserv04.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	bcast/udpcli01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	bcast/udpcli02.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	bcast/udpcli03.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	bcast/udpcli04.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	bcast/udpcli05.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	bcast/udpcli06.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	config.guess	/^		main()$/;"	f
main	config.guess	/^	main ()$/;"	f
main	config.guess	/^main ()$/;"	f
main	debug/backlog.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	debug/qlen.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	debug/test01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	debug/test02.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	debug/test03.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	debug/test04.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	debug/test05.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	debug/test06.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	icmpd/icmpd.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	icmpd/udpcli01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	inetd/daytimetcpsrv2.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	inetd/daytimetcpsrv3.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	intro/byteorder.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	intro/daytimetcpcli.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	intro/daytimetcpcli1.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	intro/daytimetcpcli2.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	intro/daytimetcpcli3.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	intro/daytimetcpcliv6.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	intro/daytimetcpsrv.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	intro/daytimetcpsrv1.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	intro/daytimetcpsrv2.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	intro/daytimetcpsrv3.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	intro/daytimetcpsrvv6.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	ioctl/lsif01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	ioctl/lsif02.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	ioctl/prifinfo.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	ioctl/prmac.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	ioctl/test1.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	ipopts/tcpcli01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	ipopts/tcpserv01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	ipopts/udpcli01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	ipopts/udpserv01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	key/add.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	key/dump.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	key/register.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	libfree/test_ascii2addr.c	/^main()$/;"	f
main	libfree/test_getservbyname_r.c	/^main()$/;"	f
main	libfree/test_inet_pton.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	libgai/test1.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	libgai/testga.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	mcast/main.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	mcast/udpcli01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	mcast/udpcli05.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	mcast/udpcli06.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	mcast/udpserv01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	mysdr/main.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	names/daytimetcpcli.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	names/daytimetcpcli1.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	names/daytimetcpcli2.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	names/daytimetcpcli3.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	names/daytimetcpsrv1.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	names/daytimetcpsrv2.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	names/daytimetcpsrv3.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	names/daytimetcpsrv4.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	names/daytimeudpcli1.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	names/daytimeudpcli2.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	names/daytimeudpsrv2.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	names/daytimeudpsrv3.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	names/hostent.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	names/hostent2.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	names/hostent3.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	names/netent.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	names/prmyaddrs.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	names/prmyaddrs1.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	names/test1.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	names/test2.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	nonblock/daytimetcpcli.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	nonblock/tcpcli01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	nonblock/tcpcli02.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	nonblock/tcpcli03.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	nonblock/tcpcli04.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	nonblock/tcpservselect03.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	nonblock/web.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	oob/tcpcli02.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	oob/tcprecv01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	oob/tcprecv02.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	oob/tcprecv03.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	oob/tcprecv03p.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	oob/tcprecv04.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	oob/tcprecv05.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	oob/tcprecv06.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	oob/tcpsend01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	oob/tcpsend02.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	oob/tcpsend03.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	oob/tcpsend04.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	oob/tcpsend05.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	oob/tcpsend06.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	oob/tcpserv02.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	ping/bsdping.c	/^main(argc, argv)$/;"	f
main	ping/main.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	route/checkudpsum.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	route/getrt.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	route/mynetstat.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	route/prifindex.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	route/prifinfo.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	route/prifname.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	route/prifnameindex.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	rtt/udpcli01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	sctp/sctpclient01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	sctp/sctpclient02.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	sctp/sctpclient04.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	sctp/sctpserv01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	sctp/sctpserv02.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	sctp/sctpserv03.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	sctp/sctpserv04.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	sctp/sctpserv05.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	sctp/sctpserv06.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	sctp/sctpserv07.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	sctp/sctpserv_fork.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	select/tcpcli01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	select/tcpcli02.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	select/tcpcli03.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	server/client.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	server/clientrst.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	server/serv00.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	server/serv01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	server/serv02.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	server/serv02m.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	server/serv03.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	server/serv03m.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	server/serv04.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	server/serv05.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	server/serv06.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	server/serv07.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	server/serv08.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	server/serv09.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	sigio/udpcli01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	sigio/udpserv01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	sock/main.c	/^main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	sockopt/checkopts.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	sockopt/prdefaults.c	/^main()$/;"	f
main	sockopt/rcvbuf.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	sockopt/rcvbufset.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	sockopt/sockopt.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	ssntp/main.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	streams/stream_dg/client.c	/^main()$/;"	f
main	streams/stream_dg/server.c	/^main()$/;"	f
main	streams/strlist_sock.c	/^main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	streams/strlist_xti.c	/^main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	streams/tpi_daytime.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	tcpcliserv/tcpcli01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	tcpcliserv/tcpcli04.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	tcpcliserv/tcpcli05.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	tcpcliserv/tcpcli06.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	tcpcliserv/tcpcli07.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	tcpcliserv/tcpcli08.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	tcpcliserv/tcpcli09.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	tcpcliserv/tcpcli10.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	tcpcliserv/tcpcli11.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	tcpcliserv/tcpserv01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	tcpcliserv/tcpserv02.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	tcpcliserv/tcpserv03.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	tcpcliserv/tcpserv04.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	tcpcliserv/tcpserv08.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	tcpcliserv/tcpserv09.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	tcpcliserv/tcpservpoll01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	tcpcliserv/tcpservselect01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	tcpcliserv/tsigpipe.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	test/accept_eintr.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	test/test1.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	test/test2.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	test/tisfdtype.c	/^main()$/;"	f
main	test/treadline1.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	test/treadline2.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	test/treadline3.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	test/tshutdown.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	test/tsnprintf.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	threads/example01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	threads/example02.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	threads/example03.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	threads/tcpcli01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	threads/tcpcli02.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	threads/tcpserv01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	threads/tcpserv02.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	threads/test01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	threads/test02.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	threads/test03.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	threads/test04.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	threads/test05.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	threads/web01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	threads/web02.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	threads/web03.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	traceroute/main.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	udpcksum/main.c	/^main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	udpcliserv/udpcli01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	udpcliserv/udpcli02.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	udpcliserv/udpcli03.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	udpcliserv/udpcli04.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	udpcliserv/udpcli05.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	udpcliserv/udpcli06.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	udpcliserv/udpcli08.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	udpcliserv/udpcli09.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	udpcliserv/udpcli10.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	udpcliserv/udpserv01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	udpcliserv/udpserv06.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	udpcliserv/udpserv07.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	udpcliserv/udpservselect01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	unixdomain/daytimetcpcli.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	unixdomain/daytimetcpsrv2.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	unixdomain/mycat.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	unixdomain/openfile.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	unixdomain/testfcred.c	/^main()$/;"	f
main	unixdomain/tfcred01.c	/^main()$/;"	f
main	unixdomain/unixbind.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	unixdomain/unixdgcli01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	unixdomain/unixdgserv01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	unixdomain/unixstrcli01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	unixdomain/unixstrserv01.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	unixdomain/unixstrserv02.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
max	key/unp.h	/^#define	max(/;"	d
max	lib/unp.h	/^#define	max(/;"	d
max	sctp/unp.h	/^#define	max(/;"	d
max	sock/ourhdr.h	/^#define	max(/;"	d
max_ttl	traceroute/main.c	/^int		max_ttl = 30;$/;"	v
max_ttl	traceroute/trace.h	/^int		 ttl, max_ttl;$/;"	v
maxfd	icmpd/icmpd.h	/^int				fd4, fd6, listenfd, maxi, maxfd, nready;$/;"	v
maxfd	nonblock/web.h	/^int		nconn, nfiles, nlefttoconn, nlefttoread, maxfd;$/;"	v
maxi	icmpd/icmpd.h	/^int				fd4, fd6, listenfd, maxi, maxfd, nready;$/;"	v
maxnalarms	oob/heartbeatserv.c	/^static int	maxnalarms;		\/* #alarms w\/no client probe before quit *\/$/;"	v	file:
maxnprobes	oob/heartbeatcli.c	/^static int		maxnprobes;		\/* #probes w\/no response before quit *\/$/;"	v	file:
maxseg	sock/main.c	/^int		maxseg;				\/* TCP_MAXSEG *\/$/;"	v
mcast_block_source	key/unp.h	/^int		 mcast_block_source(int sockfd, const SA *src, socklen_t srclen,$/;"	p	signature:(int sockfd, const SA *src, socklen_t srclen, const SA *grp, socklen_t grplen)
mcast_block_source	lib/mcast_join.c	/^mcast_block_source(int sockfd, const SA *src, socklen_t srclen,$/;"	f	signature:(int sockfd, const SA *src, socklen_t srclen, const SA *grp, socklen_t grplen)
mcast_block_source	lib/unp.h	/^int		 mcast_block_source(int sockfd, const SA *src, socklen_t srclen,$/;"	p	signature:(int sockfd, const SA *src, socklen_t srclen, const SA *grp, socklen_t grplen)
mcast_get_if	key/unp.h	/^int		 mcast_get_if(int);$/;"	p	signature:(int)
mcast_get_if	lib/mcast_get_if.c	/^mcast_get_if(int sockfd)$/;"	f	signature:(int sockfd)
mcast_get_if	lib/unp.h	/^int		 mcast_get_if(int);$/;"	p	signature:(int)
mcast_get_if	sctp/unp.h	/^int		 mcast_get_if(int);$/;"	p	signature:(int)
mcast_get_loop	key/unp.h	/^int		 mcast_get_loop(int);$/;"	p	signature:(int)
mcast_get_loop	lib/mcast_get_loop.c	/^mcast_get_loop(int sockfd)$/;"	f	signature:(int sockfd)
mcast_get_loop	lib/unp.h	/^int		 mcast_get_loop(int);$/;"	p	signature:(int)
mcast_get_loop	sctp/unp.h	/^int		 mcast_get_loop(int);$/;"	p	signature:(int)
mcast_get_ttl	key/unp.h	/^int		 mcast_get_ttl(int);$/;"	p	signature:(int)
mcast_get_ttl	lib/mcast_get_ttl.c	/^mcast_get_ttl(int sockfd)$/;"	f	signature:(int sockfd)
mcast_get_ttl	lib/unp.h	/^int		 mcast_get_ttl(int);$/;"	p	signature:(int)
mcast_get_ttl	sctp/unp.h	/^int		 mcast_get_ttl(int);$/;"	p	signature:(int)
mcast_join	key/unp.h	/^int		 mcast_join(int, const SA *, socklen_t, const char *, u_int);$/;"	p	signature:(int, const SA *, socklen_t, const char *, u_int)
mcast_join	lib/mcast_join.c	/^mcast_join(int sockfd, const SA *grp, socklen_t grplen,$/;"	f	signature:(int sockfd, const SA *grp, socklen_t grplen, const char *ifname, u_int ifindex)
mcast_join	lib/unp.h	/^int		 mcast_join(int, const SA *, socklen_t, const char *, u_int);$/;"	p	signature:(int, const SA *, socklen_t, const char *, u_int)
mcast_join	sctp/unp.h	/^int		 mcast_join(int, const SA *, socklen_t, const char *, u_int);$/;"	p	signature:(int, const SA *, socklen_t, const char *, u_int)
mcast_join_source_group	key/unp.h	/^int		 mcast_join_source_group(int sockfd, const SA *src, socklen_t srclen,$/;"	p	signature:(int sockfd, const SA *src, socklen_t srclen, const SA *grp, socklen_t grplen, const char *ifname, u_int ifindex)
mcast_join_source_group	lib/mcast_join.c	/^mcast_join_source_group(int sockfd, const SA *src, socklen_t srclen,$/;"	f	signature:(int sockfd, const SA *src, socklen_t srclen, const SA *grp, socklen_t grplen, const char *ifname, u_int ifindex)
mcast_join_source_group	lib/unp.h	/^int		 mcast_join_source_group(int sockfd, const SA *src, socklen_t srclen,$/;"	p	signature:(int sockfd, const SA *src, socklen_t srclen, const SA *grp, socklen_t grplen, const char *ifname, u_int ifindex)
mcast_leave	key/unp.h	/^int		 mcast_leave(int, const SA *, socklen_t);$/;"	p	signature:(int, const SA *, socklen_t)
mcast_leave	lib/mcast_leave.c	/^mcast_leave(int sockfd, const SA *grp, socklen_t grplen)$/;"	f	signature:(int sockfd, const SA *grp, socklen_t grplen)
mcast_leave	lib/unp.h	/^int		 mcast_leave(int, const SA *, socklen_t);$/;"	p	signature:(int, const SA *, socklen_t)
mcast_leave	sctp/unp.h	/^int		 mcast_leave(int, const SA *, socklen_t);$/;"	p	signature:(int, const SA *, socklen_t)
mcast_leave_source_group	key/unp.h	/^int		 mcast_leave_source_group(int sockfd, const SA *src, socklen_t srclen,$/;"	p	signature:(int sockfd, const SA *src, socklen_t srclen, const SA *grp, socklen_t grplen)
mcast_leave_source_group	lib/mcast_leave.c	/^mcast_leave_source_group(int sockfd, const SA *src, socklen_t srclen,$/;"	f	signature:(int sockfd, const SA *src, socklen_t srclen, const SA *grp, socklen_t grplen)
mcast_leave_source_group	lib/unp.h	/^int		 mcast_leave_source_group(int sockfd, const SA *src, socklen_t srclen,$/;"	p	signature:(int sockfd, const SA *src, socklen_t srclen, const SA *grp, socklen_t grplen)
mcast_set_if	key/unp.h	/^int		 mcast_set_if(int, const char *, u_int);$/;"	p	signature:(int, const char *, u_int)
mcast_set_if	lib/mcast_set_if.c	/^mcast_set_if(int sockfd, const char *ifname, u_int ifindex)$/;"	f	signature:(int sockfd, const char *ifname, u_int ifindex)
mcast_set_if	lib/unp.h	/^int		 mcast_set_if(int, const char *, u_int);$/;"	p	signature:(int, const char *, u_int)
mcast_set_if	sctp/unp.h	/^int		 mcast_set_if(int, const char *, u_int);$/;"	p	signature:(int, const char *, u_int)
mcast_set_loop	key/unp.h	/^int		 mcast_set_loop(int, int);$/;"	p	signature:(int, int)
mcast_set_loop	lib/mcast_set_loop.c	/^mcast_set_loop(int sockfd, int onoff)$/;"	f	signature:(int sockfd, int onoff)
mcast_set_loop	lib/unp.h	/^int		 mcast_set_loop(int, int);$/;"	p	signature:(int, int)
mcast_set_loop	sctp/unp.h	/^int		 mcast_set_loop(int, int);$/;"	p	signature:(int, int)
mcast_set_ttl	key/unp.h	/^int		 mcast_set_ttl(int, int);$/;"	p	signature:(int, int)
mcast_set_ttl	lib/mcast_set_ttl.c	/^mcast_set_ttl(int sockfd, int val)$/;"	f	signature:(int sockfd, int val)
mcast_set_ttl	lib/unp.h	/^int		 mcast_set_ttl(int, int);$/;"	p	signature:(int, int)
mcast_set_ttl	sctp/unp.h	/^int		 mcast_set_ttl(int, int);$/;"	p	signature:(int, int)
mcast_unblock_source	key/unp.h	/^int		 mcast_unblock_source(int sockfd, const SA *src, socklen_t srclen,$/;"	p	signature:(int sockfd, const SA *src, socklen_t srclen, const SA *grp, socklen_t grplen)
mcast_unblock_source	lib/mcast_join.c	/^mcast_unblock_source(int sockfd, const SA *src, socklen_t srclen,$/;"	f	signature:(int sockfd, const SA *src, socklen_t srclen, const SA *grp, socklen_t grplen)
mcast_unblock_source	lib/unp.h	/^int		 mcast_unblock_source(int sockfd, const SA *src, socklen_t srclen,$/;"	p	signature:(int sockfd, const SA *src, socklen_t srclen, const SA *grp, socklen_t grplen)
mcastttl	sock/main.c	/^int		mcastttl;			\/* multicast TTL *\/$/;"	v
meter	server/meter.c	/^meter(int nchildren)$/;"	f	signature:(int nchildren)
meter	server/serv02m.c	/^long			*cptr, *meter(int);	\/* for counting #clients\/child *\/$/;"	p	file:	signature:(int)
meter	server/serv03m.c	/^long			*cptr, *meter(int);	\/* for counting #clients\/child *\/$/;"	p	file:	signature:(int)
min	key/unp.h	/^#define	min(/;"	d
min	lib/unp.h	/^#define	min(/;"	d
min	sctp/unp.h	/^#define	min(/;"	d
min	sock/ourhdr.h	/^#define	min(/;"	d
mlock	server/pthread07.h	/^pthread_mutex_t	mlock;$/;"	v
mlock	server/serv07.c	/^pthread_mutex_t	mlock = PTHREAD_MUTEX_INITIALIZER;$/;"	v
mptr	server/lock_pthread.c	/^static pthread_mutex_t	*mptr;	\/* actual mutex will be in shared memory *\/$/;"	v	file:
msgpeek	sock/main.c	/^int		msgpeek;			\/* MSG_PEEK *\/$/;"	v
msgrecv	rtt/dg_send_recv.c	/^static struct msghdr	msgsend, msgrecv;	\/* assumed init to 0 *\/$/;"	v	typeref:struct:	file:
msgsend	rtt/dg_send_recv.c	/^static struct msghdr	msgsend, msgrecv;	\/* assumed init to 0 *\/$/;"	v	typeref:struct:msghdr	file:
mx_dup_ck	ping/bsdping.c	/^int mx_dup_ck = MAX_DUP_CHK;$/;"	v
my_addrs	key/unp.h	/^char   **my_addrs(int *);$/;"	p	signature:(int *)
my_addrs	lib/my_addrs.c	/^my_addrs(int *addrtype)$/;"	f	signature:(int *addrtype)
my_addrs	lib/unp.h	/^char   **my_addrs(int *);$/;"	p	signature:(int *)
my_addrs	names/myaddrs1.c	/^my_addrs(int *addrtype)$/;"	f	signature:(int *addrtype)
my_addrs	names/prmyaddrs.c	/^char	**my_addrs(int *);$/;"	p	file:	signature:(int *)
my_addrs	names/prmyaddrs1.c	/^char	**my_addrs(int *);$/;"	p	file:	signature:(int *)
my_addrs	sctp/unp.h	/^char   **my_addrs(int *);$/;"	p	signature:(int *)
my_key	threads/test05.c	/^pthread_key_t	my_key;$/;"	v
my_lock_init	server/lock_fcntl.c	/^my_lock_init(char *pathname)$/;"	f	signature:(char *pathname)
my_lock_init	server/lock_pthread.c	/^my_lock_init(char *pathname)$/;"	f	signature:(char *pathname)
my_lock_release	server/lock_fcntl.c	/^my_lock_release()$/;"	f
my_lock_release	server/lock_pthread.c	/^my_lock_release()$/;"	f
my_lock_wait	server/lock_fcntl.c	/^my_lock_wait()$/;"	f
my_lock_wait	server/lock_pthread.c	/^my_lock_wait()$/;"	f
my_open	unixdomain/mycat.c	/^int		my_open(const char *, int);$/;"	p	file:	signature:(const char *, int)
my_open	unixdomain/myopen.c	/^my_open(const char *pathname, int mode)$/;"	f	signature:(const char *pathname, int mode)
my_read	lib/readline.c	/^my_read(int fd, char *ptr)$/;"	f	file:	signature:(int fd, char *ptr)
my_read	test/readline2.c	/^my_read(int fd, char *ptr)$/;"	f	file:	signature:(int fd, char *ptr)
my_read	test/readline3.c	/^my_read(Rline *rptr, char *ptr)$/;"	f	file:	signature:(Rline *rptr, char *ptr)
my_read	threads/readline.c	/^my_read(Rline *tsd, int fd, char *ptr)$/;"	f	file:	signature:(Rline *tsd, int fd, char *ptr)
my_read_r	server/readline_r.c	/^my_read_r(Rline *rptr, char *ptr)$/;"	f	file:	signature:(Rline *rptr, char *ptr)
mydg_echo	advio/udpserv03.c	/^mydg_echo(int sockfd, SA *pcliaddr, socklen_t clilen, SA *myaddr)$/;"	f	signature:(int sockfd, SA *pcliaddr, socklen_t clilen, SA *myaddr)
mydg_echo	advio/udpserv03.c	/^void	mydg_echo(int, SA *, socklen_t, SA *);$/;"	p	file:	signature:(int, SA *, socklen_t, SA *)
mydg_echo	advio/udpserv04.c	/^mydg_echo(int sockfd, SA *myaddr, socklen_t salen)$/;"	f	signature:(int sockfd, SA *myaddr, socklen_t salen)
mydg_echo	advio/udpserv04.c	/^void	mydg_echo(int, SA *, socklen_t);$/;"	p	file:	signature:(int, SA *, socklen_t)
myfunc	threads/test01.c	/^myfunc(void *ptr)$/;"	f	signature:(void *ptr)
myfunc	threads/test02.c	/^myfunc(void *ptr)$/;"	f	signature:(void *ptr)
myfunc	threads/test03.c	/^myfunc(void *ptr)$/;"	f	signature:(void *ptr)
myfunc	threads/test04.c	/^myfunc(void *ptr)$/;"	f	signature:(void *ptr)
name	key/name.c	/^	const char *name;$/;"	m	struct:idlist	file:	access:public
nbuf	sock/main.c	/^int		nbuf = 1024;		\/* number of buffers to write (sink mode) *\/$/;"	v
nchildren	server/serv02.c	/^static int		nchildren;$/;"	v	file:
nchildren	server/serv02m.c	/^static int		nchildren;$/;"	v	file:
nchildren	server/serv03.c	/^static int		nchildren;$/;"	v	file:
nchildren	server/serv03m.c	/^static int		nchildren;$/;"	v	file:
nchildren	server/serv04.c	/^static int		nchildren;$/;"	v	file:
nchildren	server/serv05.c	/^static int		nchildren;$/;"	v	file:
nconn	nonblock/web.h	/^int		nconn, nfiles, nlefttoconn, nlefttoread, maxfd;$/;"	v
nconn	threads/web01.c	/^int		nconn, nfiles, nlefttoconn, nlefttoread;$/;"	v
nconn	threads/web02.c	/^int		nconn, nfiles, nlefttoconn, nlefttoread;$/;"	v
nconn	threads/web03.c	/^int		nconn, nfiles, nlefttoconn, nlefttoread;$/;"	v
ndone	threads/test03.c	/^int				ndone;$/;"	v
ndone	threads/web02.c	/^int				ndone;		\/* number of terminated threads & mutex *\/$/;"	v
ndone	threads/web03.c	/^int				ndone;		\/* number of terminated threads *\/$/;"	v
ndone_cond	threads/test03.c	/^pthread_cond_t	ndone_cond = PTHREAD_COND_INITIALIZER;$/;"	v
ndone_cond	threads/web03.c	/^pthread_cond_t	ndone_cond = PTHREAD_COND_INITIALIZER;$/;"	v
ndone_mutex	threads/test03.c	/^pthread_mutex_t	ndone_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v
ndone_mutex	threads/web02.c	/^pthread_mutex_t	ndone_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v
ndone_mutex	threads/web03.c	/^pthread_mutex_t	ndone_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v
net_bind	streams/stream_dg/net_stream.c	/^net_bind (int fd, void *addr, int addrlen)$/;"	f	signature:(int fd, void *addr, int addrlen)
net_open	streams/stream_dg/net_stream.c	/^net_open (char *path, int oflags, void *addr, int addrlen)$/;"	f	signature:(char *path, int oflags, void *addr, int addrlen)
net_recv	streams/stream_dg/net_stream.c	/^net_recv (int fd, char *buf, int len, char *from_addr, int addrlen)$/;"	f	signature:(int fd, char *buf, int len, char *from_addr, int addrlen)
net_rt_dump	libroute/net_rt_dump.c	/^net_rt_dump(int family, int flags, size_t *lenp)$/;"	f	signature:(int family, int flags, size_t *lenp)
net_rt_dump	libroute/unproute.h	/^char	*net_rt_dump(int, int, size_t *);$/;"	p	signature:(int, int, size_t *)
net_rt_dump	route/unproute.h	/^char	*net_rt_dump(int, int, size_t *);$/;"	p	signature:(int, int, size_t *)
net_rt_iflist	libroute/net_rt_iflist.c	/^net_rt_iflist(int family, int flags, size_t *lenp)$/;"	f	signature:(int family, int flags, size_t *lenp)
net_rt_iflist	libroute/unproute.h	/^char	*net_rt_iflist(int, int, size_t *);$/;"	p	signature:(int, int, size_t *)
net_rt_iflist	route/unproute.h	/^char	*net_rt_iflist(int, int, size_t *);$/;"	p	signature:(int, int, size_t *)
net_send	streams/stream_dg/net_stream.c	/^net_send (int fd, char *buf, int len, char *to_addr, int addrlen)$/;"	f	signature:(int fd, char *buf, int len, char *to_addr, int addrlen)
newmask	sock/tellwait.c	/^static sigset_t			newmask, oldmask, zeromask;$/;"	v	file:
next_pcap	udpcksum/pcap.c	/^next_pcap(int *len)$/;"	f	signature:(int *len)
next_pcap	udpcksum/udpcksum.h	/^char			*next_pcap(int *);$/;"	p	signature:(int *)
nfiles	nonblock/web.h	/^int		nconn, nfiles, nlefttoconn, nlefttoread, maxfd;$/;"	v
nfiles	threads/web01.c	/^int		nconn, nfiles, nlefttoconn, nlefttoread;$/;"	v
nfiles	threads/web02.c	/^int		nconn, nfiles, nlefttoconn, nlefttoread;$/;"	v
nfiles	threads/web03.c	/^int		nconn, nfiles, nlefttoconn, nlefttoread;$/;"	v
nlefttoconn	nonblock/web.h	/^int		nconn, nfiles, nlefttoconn, nlefttoread, maxfd;$/;"	v
nlefttoconn	threads/web01.c	/^int		nconn, nfiles, nlefttoconn, nlefttoread;$/;"	v
nlefttoconn	threads/web02.c	/^int		nconn, nfiles, nlefttoconn, nlefttoread;$/;"	v
nlefttoconn	threads/web03.c	/^int		nconn, nfiles, nlefttoconn, nlefttoread;$/;"	v
nlefttoread	nonblock/web.h	/^int		nconn, nfiles, nlefttoconn, nlefttoread, maxfd;$/;"	v
nlefttoread	threads/web01.c	/^int		nconn, nfiles, nlefttoconn, nlefttoread;$/;"	v
nlefttoread	threads/web02.c	/^int		nconn, nfiles, nlefttoconn, nlefttoread;$/;"	v
nlefttoread	threads/web03.c	/^int		nconn, nfiles, nlefttoconn, nlefttoread;$/;"	v
nodelay	sock/main.c	/^int		nodelay;			\/* TCP_NODELAY (Nagle algorithm) *\/$/;"	v
npackets	ping/bsdping.c	/^long npackets;			\/* max packets to transmit *\/$/;"	v
nprobes	oob/heartbeatcli.c	/^static int		nprobes;		\/* #probes since last server response *\/$/;"	v	file:
nprobes	oob/heartbeatserv.c	/^static int	nprobes;		\/* #alarms since last client probe *\/$/;"	v	file:
nprobes	traceroute/main.c	/^int		nprobes = 3;$/;"	v
nprobes	traceroute/trace.h	/^int		 probe, nprobes;$/;"	v
nqueue	sigio/dgecho01.c	/^static int	nqueue;		\/* # on queue for main loop to process *\/$/;"	v	file:
nready	icmpd/icmpd.h	/^int				fd4, fd6, listenfd, maxi, maxfd, nready;$/;"	v
nreceived	ping/bsdping.c	/^long nreceived;			\/* # of packets we got back *\/$/;"	v
nrepeats	ping/bsdping.c	/^long nrepeats;			\/* number of duplicates *\/$/;"	v
nsec	oob/heartbeatcli.c	/^static int		nsec;			\/* #seconds betweeen each alarm *\/$/;"	v	file:
nsec	oob/heartbeatserv.c	/^static int	nsec;			\/* #seconds between each alarm *\/$/;"	v	file:
nsent	ping/ping.h	/^int		 nsent;				\/* add 1 for each sendto() *\/$/;"	v
nsent	traceroute/trace.h	/^int		 nsent;				\/* add 1 for each sendto() *\/$/;"	v
nthreads	server/pthread07.h	/^int				listenfd, nthreads;$/;"	v
nthreads	server/pthread09.h	/^int				listenfd, nthreads;$/;"	v
nthreads	server/serv08.c	/^static int			nthreads;$/;"	v	file:
ntpdata	ssntp/ntp.h	/^struct ntpdata {		\/* NTP header *\/$/;"	s
ntpdata::dispersion	ssntp/ntp.h	/^  struct s_fixedpt	dispersion;$/;"	m	struct:ntpdata	typeref:struct:ntpdata::s_fixedpt	access:public
ntpdata::distance	ssntp/ntp.h	/^  struct s_fixedpt	distance;$/;"	m	struct:ntpdata	typeref:struct:ntpdata::s_fixedpt	access:public
ntpdata::org	ssntp/ntp.h	/^  struct l_fixedpt	org;$/;"	m	struct:ntpdata	typeref:struct:ntpdata::l_fixedpt	access:public
ntpdata::ppoll	ssntp/ntp.h	/^  u_char			ppoll;$/;"	m	struct:ntpdata	access:public
ntpdata::precision	ssntp/ntp.h	/^  int				precision:8;$/;"	m	struct:ntpdata	access:public
ntpdata::rec	ssntp/ntp.h	/^  struct l_fixedpt	rec;$/;"	m	struct:ntpdata	typeref:struct:ntpdata::l_fixedpt	access:public
ntpdata::refid	ssntp/ntp.h	/^  uint32_t			refid;$/;"	m	struct:ntpdata	access:public
ntpdata::reftime	ssntp/ntp.h	/^  struct l_fixedpt	reftime;$/;"	m	struct:ntpdata	typeref:struct:ntpdata::l_fixedpt	access:public
ntpdata::status	ssntp/ntp.h	/^  u_char			status;$/;"	m	struct:ntpdata	access:public
ntpdata::stratum	ssntp/ntp.h	/^  u_char			stratum;$/;"	m	struct:ntpdata	access:public
ntpdata::xmt	ssntp/ntp.h	/^  struct l_fixedpt	xmt;$/;"	m	struct:ntpdata	typeref:struct:ntpdata::l_fixedpt	access:public
ntransmitted	ping/bsdping.c	/^long ntransmitted;		\/* sequence # for outbound packets = #sent *\/$/;"	v
ocnt	ipopts/sourceroute.c	/^static int		ocnt;		\/* count of # addresses *\/$/;"	v	file:
oldmask	sock/tellwait.c	/^static sigset_t			newmask, oldmask, zeromask;$/;"	v	file:
onalrm	ping/bsdping.c	/^onalrm(signo)$/;"	f
onalrm	ping/bsdping.c	/^void	 onalrm __P((int));$/;"	p	file:	signature:(int)
onesbcast	sock/main.c	/^int		onesbcast;			\/* set IP_ONESBCAST for 255.255.255.255 bcasts *\/$/;"	v
oninfo	ping/bsdping.c	/^oninfo(notused)$/;"	f
oninfo	ping/bsdping.c	/^void	 oninfo __P((int));$/;"	p	file:	signature:(int)
onint	ping/bsdping.c	/^onint(notused)$/;"	f
onint	ping/bsdping.c	/^void	 onint __P((int));$/;"	p	file:	signature:(int)
open_max	sock/ourhdr.h	/^int		 open_max(void);			\/* {Prog openmax} *\/$/;"	p	signature:(void)
open_output	udpcksum/senddnsquery-libnet.c	/^open_output(void)$/;"	f	signature:(void)
open_output	udpcksum/udpcksum.h	/^void			 open_output(void);$/;"	p	signature:(void)
open_output	udpcksum/udpwrite.c	/^open_output(void)$/;"	f	signature:(void)
open_pcap	udpcksum/pcap.c	/^open_pcap(void)$/;"	f	signature:(void)
open_pcap	udpcksum/udpcksum.h	/^void			 open_pcap(void);$/;"	p	signature:(void)
opt_level	sockopt/checkopts.c	/^  int		opt_level;$/;"	m	struct:sock_opts	file:	access:public
opt_name	sockopt/checkopts.c	/^  int		opt_name;$/;"	m	struct:sock_opts	file:	access:public
opt_str	sockopt/checkopts.c	/^  const char	   *opt_str;$/;"	m	struct:sock_opts	file:	access:public
opt_val_str	sockopt/checkopts.c	/^  char   *(*opt_val_str)(union val *, int);$/;"	m	struct:sock_opts	file:	access:public
options	ping/bsdping.c	/^u_int options;$/;"	v
optr	ipopts/sourceroute.c	/^static u_char	*optr;		\/* pointer into options being formed *\/$/;"	v	file:
optr	sock/sourceroute.c	/^u_char	*optr;				\/* pointer into options being formed *\/$/;"	v
org	ssntp/ntp.h	/^  struct l_fixedpt	org;$/;"	m	struct:ntpdata	typeref:struct:ntpdata::l_fixedpt	access:public
outpack	ping/bsdping.c	/^u_char outpack[MAXPACKET];$/;"	v
parent_alrm	debug/backlog.c	/^parent_alrm(int signo)$/;"	f	signature:(int signo)
parent_alrm	debug/qlen.c	/^parent_alrm(int signo)$/;"	f	signature:(int signo)
path_alloc	sock/ourhdr.h	/^char	*path_alloc(int *);			\/* {Prog pathalloc} *\/$/;"	p	signature:(int *)
pattern	sock/pattern.c	/^pattern(char *ptr, int len)$/;"	f	signature:(char *ptr, int len)
pattern	sock/sock.h	/^void	pattern(char *, int);$/;"	p	signature:(char *, int)
pattern	sock/sourcesink.c	/^pattern(char *ptr, int len)$/;"	f	signature:(char *ptr, int len)
pattern	sock/sourcesink.c	/^void	pattern(char *ptr, int len);$/;"	p	file:	signature:(char *ptr, int len)
pauseclose	sock/main.c	/^int		pauseclose;			\/* #ms to sleep after recv FIN, before close *\/$/;"	v
pauseinit	sock/main.c	/^int		pauseinit;			\/* #ms to sleep before first read *\/$/;"	v
pauselisten	sock/main.c	/^int		pauselisten;		\/* #ms to sleep after listen() *\/$/;"	v
pauserw	sock/main.c	/^int		pauserw;			\/* #ms to sleep before each read or write *\/$/;"	v
pd	udpcksum/main.c	/^pcap_t *pd;				\/* packet capture struct pointer *\/$/;"	v
pdapi_recvmsg	sctp/sctp_pdapircv.c	/^pdapi_recvmsg(int sock_fd,$/;"	f	signature:(int sock_fd, int *rdlen, SA *from, int *from_len, struct sctp_sndrcvinfo *sri, int *msg_flags)
pfd	debug/backlog.c	/^#define	pfd	/;"	d	file:
pfd	debug/qlen.c	/^#define	pfd	/;"	d	file:
pid	debug/backlog.c	/^pid_t				pid;	\/* of child *\/$/;"	v
pid	debug/qlen.c	/^pid_t				pid;	\/* of child *\/$/;"	v
pid	ping/ping.h	/^pid_t	 pid;				\/* our PID *\/$/;"	v
pid	traceroute/trace.h	/^pid_t	 pid;				\/* our PID *\/$/;"	v
pids	server/serv02.c	/^static pid_t	*pids;$/;"	v	file:
pids	server/serv02m.c	/^static pid_t	*pids;$/;"	v	file:
pids	server/serv03.c	/^static pid_t	*pids;$/;"	v	file:
pids	server/serv03m.c	/^static pid_t	*pids;$/;"	v	file:
pids	server/serv04.c	/^static pid_t	*pids;$/;"	v	file:
ping_v4	ping/ping_v4.c	/^ping_v4(struct hostent *hptr)$/;"	f	signature:(struct hostent *hptr)
pinger	ping/bsdping.c	/^pinger()$/;"	f
pinger	ping/bsdping.c	/^void	 pinger __P((void));$/;"	p	file:	signature:(void)
pipefd	bcast/dgclibcast6.c	/^static int	pipefd[2];$/;"	v	file:
pipefd	debug/backlog.c	/^int			pipefd[2];$/;"	v
pipefd	debug/qlen.c	/^int			pipefd[2];$/;"	v
pname	sock/error.c	/^char	*pname = NULL;		\/* caller can set this from argv[0] *\/$/;"	v
port	sock/main.c	/^char	*port;$/;"	v
ppoll	ssntp/ntp.h	/^  u_char			ppoll;$/;"	m	struct:ntpdata	access:public
pr	ping/ping.h	/^} *pr;$/;"	v	typeref:struct:proto
pr	traceroute/trace.h	/^} *pr;$/;"	v	typeref:struct:proto
pr_addr	ping/bsdping.c	/^char	*pr_addr __P((u_long));$/;"	p	file:	signature:(u_long)
pr_addr	ping/bsdping.c	/^pr_addr(l)$/;"	f
pr_cpu_time	server/pr_cpu_time.c	/^pr_cpu_time(void)$/;"	f	signature:(void)
pr_exit	sock/ourhdr.h	/^void	 pr_exit(int);				\/* {Prog prexit} *\/$/;"	p	signature:(int)
pr_icmph	ping/bsdping.c	/^pr_icmph(icp)$/;"	f
pr_icmph	ping/bsdping.c	/^void	 pr_icmph __P((struct icmp *));$/;"	p	file:	signature:(struct icmp *)
pr_iflist	route/mynetstat.c	/^pr_iflist(int family)$/;"	f	signature:(int family)
pr_iflist	route/mynetstat.c	/^void	pr_iflist(int);$/;"	p	file:	signature:(int)
pr_iph	ping/bsdping.c	/^pr_iph(ip)$/;"	f
pr_iph	ping/bsdping.c	/^void	 pr_iph __P((struct ip *));$/;"	p	file:	signature:(struct ip *)
pr_ipv4	names/hostent3.c	/^pr_ipv4(char **listptr)$/;"	f	signature:(char **listptr)
pr_ipv4	names/hostent3.c	/^void	pr_ipv4(char **);$/;"	p	file:	signature:(char **)
pr_ipv4	names/test1.c	/^void	pr_ipv4(char **);$/;"	p	file:	signature:(char **)
pr_mask	sock/ourhdr.h	/^void	 pr_mask(const char *);		\/* {Prog prmask} *\/$/;"	p	signature:(const char *)
pr_pack	ping/bsdping.c	/^pr_pack(buf, cc, from)$/;"	f
pr_pack	ping/bsdping.c	/^void	 pr_pack __P((char *, int, struct sockaddr_in *));$/;"	p	file:	signature:(char *, int, struct sockaddr_in *)
pr_retip	ping/bsdping.c	/^pr_retip(ip)$/;"	f
pr_retip	ping/bsdping.c	/^void	 pr_retip __P((struct ip *));$/;"	p	file:	signature:(struct ip *)
pr_rtable	route/mynetstat.c	/^pr_rtable(int family)$/;"	f	signature:(int family)
pr_rtable	route/mynetstat.c	/^void	pr_rtable(int);$/;"	p	file:	signature:(int)
precision	ssntp/ntp.h	/^  int				precision:8;$/;"	m	struct:ntpdata	access:public
prefix_all	key/add.c	/^prefix_all(struct sockaddr *sa)$/;"	f	signature:(struct sockaddr *sa)
print_notification	sctp/sctp_displayevents.c	/^print_notification(char *notify_buf)$/;"	f	signature:(char *notify_buf)
print_sadb_msg	key/printsadbmsg.c	/^print_sadb_msg(struct sadb_msg *msg, int msglen)$/;"	f	signature:(struct sadb_msg *msg, int msglen)
probe	traceroute/trace.h	/^int		 probe, nprobes;$/;"	v
proc_v4	ping/ping.h	/^void	 proc_v4(char *, ssize_t, struct msghdr *, struct timeval *);$/;"	p	signature:(char *, ssize_t, struct msghdr *, struct timeval *)
proc_v4	ping/proc_v4.c	/^proc_v4(char *ptr, ssize_t len, struct msghdr *msg, struct timeval *tvrecv)$/;"	f	signature:(char *ptr, ssize_t len, struct msghdr *msg, struct timeval *tvrecv)
proc_v6	ping/ping.h	/^void	 proc_v6(char *, ssize_t, struct msghdr *, struct timeval *);$/;"	p	signature:(char *, ssize_t, struct msghdr *, struct timeval *)
proc_v6	ping/proc_v6.c	/^proc_v6(char *ptr, ssize_t len, struct msghdr *msg, struct timeval* tvrecv)$/;"	f	signature:(char *ptr, ssize_t len, struct msghdr *msg, struct timeval* tvrecv)
produce	threads/example03.c	/^produce(struct buf_t *bptr, int val)$/;"	f	signature:(struct buf_t *bptr, int val)
produce_loop	threads/example03.c	/^produce_loop(void *vptr)$/;"	f	signature:(void *vptr)
produce_loop	threads/example03.c	/^void	*produce_loop(void *);$/;"	p	file:	signature:(void *)
proto	ping/ping.h	/^struct proto {$/;"	s
proto	traceroute/trace.h	/^struct proto {$/;"	s
proto::finit	ping/ping.h	/^  void	 (*finit)(void);$/;"	m	struct:proto	access:public
proto::fproc	ping/ping.h	/^  void	 (*fproc)(char *, ssize_t, struct msghdr *, struct timeval *);$/;"	m	struct:proto	access:public
proto::fsend	ping/ping.h	/^  void	 (*fsend)(void);$/;"	m	struct:proto	access:public
proto::icmpcode	traceroute/trace.h	/^  const char	*(*icmpcode)(int);$/;"	m	struct:proto	access:public
proto::icmpproto	ping/ping.h	/^  int	   	    icmpproto;	\/* IPPROTO_xxx value for ICMP *\/$/;"	m	struct:proto	access:public
proto::icmpproto	traceroute/trace.h	/^  int			icmpproto;	\/* IPPROTO_xxx value for ICMP *\/$/;"	m	struct:proto	access:public
proto::recv	traceroute/trace.h	/^  int	 (*recv)(int, struct timeval *);$/;"	m	struct:proto	access:public
proto::sabind	traceroute/trace.h	/^  struct sockaddr  *sabind;	\/* sockaddr{} for binding source port *\/$/;"	m	struct:proto	typeref:struct:proto::sockaddr	access:public
proto::salast	traceroute/trace.h	/^  struct sockaddr  *salast;	\/* last sockaddr{} for receiving *\/$/;"	m	struct:proto	typeref:struct:proto::sockaddr	access:public
proto::salen	ping/ping.h	/^  socklen_t	    salen;		\/* length of sockaddr{}s *\/$/;"	m	struct:proto	access:public
proto::salen	traceroute/trace.h	/^  socklen_t   		salen;	\/* length of sockaddr{}s *\/$/;"	m	struct:proto	access:public
proto::sarecv	ping/ping.h	/^  struct sockaddr  *sarecv;	\/* sockaddr{} for receiving *\/$/;"	m	struct:proto	typeref:struct:proto::sockaddr	access:public
proto::sarecv	traceroute/trace.h	/^  struct sockaddr  *sarecv;	\/* sockaddr{} for receiving *\/$/;"	m	struct:proto	typeref:struct:proto::sockaddr	access:public
proto::sasend	ping/ping.h	/^  struct sockaddr  *sasend;	\/* sockaddr{} for send, from getaddrinfo *\/$/;"	m	struct:proto	typeref:struct:proto::sockaddr	access:public
proto::sasend	traceroute/trace.h	/^  struct sockaddr  *sasend;	\/* sockaddr{} for send, from getaddrinfo *\/$/;"	m	struct:proto	typeref:struct:proto::sockaddr	access:public
proto::ttllevel	traceroute/trace.h	/^  int	   ttllevel;		\/* setsockopt() level to set TTL *\/$/;"	m	struct:proto	access:public
proto::ttloptname	traceroute/trace.h	/^  int	   ttloptname;		\/* setsockopt() name to set TTL *\/$/;"	m	struct:proto	access:public
proto_v4	ping/main.c	/^struct proto	proto_v4 = { proc_v4, send_v4, NULL, NULL, NULL, 0, IPPROTO_ICMP };$/;"	v	typeref:struct:proto
proto_v4	traceroute/main.c	/^struct proto	proto_v4 = { icmpcode_v4, recv_v4, NULL, NULL, NULL, NULL, 0,$/;"	v	typeref:struct:proto
proto_v6	ping/main.c	/^struct proto	proto_v6 = { proc_v6, send_v6, init_v6, NULL, NULL, 0, IPPROTO_ICMPV6 };$/;"	v	typeref:struct:proto
proto_v6	traceroute/main.c	/^struct proto	proto_v6 = { icmpcode_v6, recv_v6, NULL, NULL, NULL, NULL, 0,$/;"	v	typeref:struct:proto
pselect	key/unp.h	/^int		 pselect(int, fd_set *, fd_set *, fd_set *,$/;"	p	signature:(int, fd_set *, fd_set *, fd_set *, const struct timespec *, const sigset_t *)
pselect	lib/pselect.c	/^pselect(int nfds, fd_set *rset, fd_set *wset, fd_set *xset,$/;"	f	signature:(int nfds, fd_set *rset, fd_set *wset, fd_set *xset, const struct timespec *ts, const sigset_t *sigmask)
pselect	lib/unp.h	/^int		 pselect(int, fd_set *, fd_set *, fd_set *,$/;"	p	signature:(int, fd_set *, fd_set *, fd_set *, const struct timespec *, const sigset_t *)
pselect	sctp/unp.h	/^int		 pselect(int, fd_set *, fd_set *, fd_set *,$/;"	p	signature:(int, fd_set *, fd_set *, fd_set *, const struct timespec *, const sigset_t *)
pthread_create	configure	/^pthread_create ();$/;"	f
pty_fork	sock/ourhdr.h	/^pid_t	 pty_fork(int *, char *, const struct termios *,$/;"	p	signature:(int *, char *, const struct termios *, const struct winsize *)
ptym_open	sock/ourhdr.h	/^int		 ptym_open(char *);			\/* {Progs ptyopen_svr4 ptyopen_44bsd} *\/$/;"	p	signature:(char *)
ptys_open	sock/ourhdr.h	/^int		 ptys_open(int, char *);	\/* {Progs ptyopen_svr4 ptyopen_44bsd} *\/$/;"	p	signature:(int, char *)
rawfd	udpcksum/main.c	/^int		rawfd;			\/* raw socket to write on *\/$/;"	v
rawfd	udpcksum/udpwrite.c	/^int		rawfd;			\/* raw socket to write on *\/$/;"	v
rbuf	sock/main.c	/^char   *rbuf;				\/* pointer that is malloc'ed *\/$/;"	v
rcsid	libfree/inet_ntop.c	/^static char rcsid[] = "$Id: inet_ntop.c,v 1.1.1.1 2002\/11\/14 03:33:35 fenner Exp $";$/;"	v	file:
rcsid	libfree/inet_pton.c	/^static char rcsid[] = "$Id: inet_pton.c,v 1.1.1.1 2002\/11\/14 03:33:35 fenner Exp $";$/;"	v	file:
rcvbuflen	sock/main.c	/^int		rcvbuflen;			\/* size for SO_RCVBUF *\/$/;"	v
rcvd_tbl	ping/bsdping.c	/^char rcvd_tbl[MAX_DUP_CHK \/ 8];$/;"	v
rcvtimeo	sock/main.c	/^long	rcvtimeo;			\/* SO_RCVTIMEO *\/$/;"	v
read_buf	lib/readline.c	/^static char	read_buf[MAXLINE];$/;"	v	file:
read_cnt	lib/readline.c	/^static int	read_cnt;$/;"	v	file:
read_cred	unixdomain/readcred.c	/^read_cred(int fd, void *ptr, size_t nbytes, struct cmsgcred *cmsgcredptr)$/;"	f	signature:(int fd, void *ptr, size_t nbytes, struct cmsgcred *cmsgcredptr)
read_cred	unixdomain/strecho.c	/^ssize_t	read_cred(int, void *, size_t, struct cmsgcred *);$/;"	p	file:	signature:(int, void *, size_t, struct cmsgcred *)
read_fd	key/unp.h	/^ssize_t	 read_fd(int, void *, size_t, int *);$/;"	p	signature:(int, void *, size_t, int *)
read_fd	lib/read_fd.c	/^read_fd(int fd, void *ptr, size_t nbytes, int *recvfd)$/;"	f	signature:(int fd, void *ptr, size_t nbytes, int *recvfd)
read_fd	lib/unp.h	/^ssize_t	 read_fd(int, void *, size_t, int *);$/;"	p	signature:(int, void *, size_t, int *)
read_fd	sctp/unp.h	/^ssize_t	 read_fd(int, void *, size_t, int *);$/;"	p	signature:(int, void *, size_t, int *)
read_fd	server/readline_r.h	/^  int		read_fd;		\/* caller's descriptor to read from *\/$/;"	m	struct:__anon7	access:public
read_fd	test/readline.h	/^  int		read_fd;		\/* caller's descriptor to read from *\/$/;"	m	struct:__anon9	access:public
read_lock	sock/ourhdr.h	/^#define	read_lock(/;"	d
read_maxlen	server/readline_r.h	/^  size_t	read_maxlen;	\/* max #bytes to read *\/$/;"	m	struct:__anon7	access:public
read_maxlen	test/readline.h	/^  size_t	read_maxlen;	\/* max #bytes to read *\/$/;"	m	struct:__anon9	access:public
read_ptr	lib/readline.c	/^static char	*read_ptr;$/;"	v	file:
read_ptr	server/readline_r.h	/^  char		*read_ptr;		\/* caller's buffer to read into *\/$/;"	m	struct:__anon7	access:public
read_ptr	test/readline.h	/^  char		*read_ptr;		\/* caller's buffer to read into *\/$/;"	m	struct:__anon9	access:public
readable_conn	icmpd/icmpd.h	/^int		 readable_conn(int);$/;"	p	signature:(int)
readable_conn	icmpd/readable_conn.c	/^readable_conn(int i)$/;"	f	signature:(int i)
readable_listen	icmpd/icmpd.h	/^int		 readable_listen(void);$/;"	p	signature:(void)
readable_listen	icmpd/readable_listen.c	/^readable_listen(void)$/;"	f	signature:(void)
readable_timeo	key/unp.h	/^int		 readable_timeo(int, int);$/;"	p	signature:(int, int)
readable_timeo	lib/readable_timeo.c	/^readable_timeo(int fd, int sec)$/;"	f	signature:(int fd, int sec)
readable_timeo	lib/unp.h	/^int		 readable_timeo(int, int);$/;"	p	signature:(int, int)
readable_timeo	sctp/unp.h	/^int		 readable_timeo(int, int);$/;"	p	signature:(int, int)
readable_v4	icmpd/icmpd.h	/^int		 readable_v4(void);$/;"	p	signature:(void)
readable_v4	icmpd/readable_v4.c	/^readable_v4(void)$/;"	f	signature:(void)
readable_v6	icmpd/icmpd.h	/^int		 readable_v6(void);$/;"	p	signature:(void)
readable_v6	icmpd/readable_v6.c	/^readable_v6(void)$/;"	f	signature:(void)
readlen	sock/main.c	/^int		readlen = 1024;		\/* default read length for socket *\/$/;"	v
readline	key/unp.h	/^ssize_t	 readline(int, void *, size_t);$/;"	p	signature:(int, void *, size_t)
readline	lib/readline.c	/^readline(int fd, void *vptr, size_t maxlen)$/;"	f	signature:(int fd, void *vptr, size_t maxlen)
readline	lib/unp.h	/^ssize_t	 readline(int, void *, size_t);$/;"	p	signature:(int, void *, size_t)
readline	sctp/unp.h	/^ssize_t	 readline(int, void *, size_t);$/;"	p	signature:(int, void *, size_t)
readline	server/readline.c	/^readline(int fd, void *vptr, size_t maxlen)$/;"	f	signature:(int fd, void *vptr, size_t maxlen)
readline	test/readline1.c	/^readline(int fd, void *vptr, size_t maxlen)$/;"	f	signature:(int fd, void *vptr, size_t maxlen)
readline	test/readline2.c	/^readline(int fd, void *vptr, size_t maxlen)$/;"	f	signature:(int fd, void *vptr, size_t maxlen)
readline	threads/readline.c	/^readline(int fd, void *vptr, size_t maxlen)$/;"	f	signature:(int fd, void *vptr, size_t maxlen)
readline_destructor	threads/readline.c	/^readline_destructor(void *ptr)$/;"	f	file:	signature:(void *ptr)
readline_once	threads/readline.c	/^readline_once(void)$/;"	f	file:	signature:(void)
readline_r	server/readline_r.c	/^readline_r(Rline *rptr)$/;"	f	signature:(Rline *rptr)
readline_r	server/readline_r.h	/^ssize_t	readline_r(Rline *);$/;"	p	signature:(Rline *)
readline_r	test/readline.h	/^ssize_t	readline_r(Rline *);$/;"	p	signature:(Rline *)
readline_r	test/readline3.c	/^readline_r(Rline *rptr)$/;"	f	signature:(Rline *rptr)
readline_rinit	server/readline_r.c	/^readline_rinit(int fd, void *ptr, size_t maxlen, Rline *rptr)$/;"	f	signature:(int fd, void *ptr, size_t maxlen, Rline *rptr)
readline_rinit	server/readline_r.h	/^void	readline_rinit(int, void *, size_t, Rline *);$/;"	p	signature:(int, void *, size_t, Rline *)
readline_rinit	test/readline.h	/^void	readline_rinit(int, void *, size_t, Rline *);$/;"	p	signature:(int, void *, size_t, Rline *)
readline_rinit	test/readline3.c	/^readline_rinit(int fd, void *ptr, size_t maxlen, Rline *rptr)$/;"	f	signature:(int fd, void *ptr, size_t maxlen, Rline *rptr)
readlinebuf	lib/readline.c	/^readlinebuf(void **vptrptr)$/;"	f	signature:(void **vptrptr)
readloop	ping/ping.h	/^void	 readloop(void);$/;"	p	signature:(void)
readloop	ping/readloop.c	/^readloop(void)$/;"	f	signature:(void)
readn	key/unp.h	/^ssize_t	 readn(int, void *, size_t);$/;"	p	signature:(int, void *, size_t)
readn	lib/readn.c	/^readn(int fd, void *vptr, size_t n)$/;"	f	signature:(int fd, void *vptr, size_t n)
readn	lib/unp.h	/^ssize_t	 readn(int, void *, size_t);$/;"	p	signature:(int, void *, size_t)
readn	sctp/unp.h	/^ssize_t	 readn(int, void *, size_t);$/;"	p	signature:(int, void *, size_t)
readn	sock/ourhdr.h	/^ssize_t	 readn(int, void *, size_t);\/* {Prog readn} *\/$/;"	p	signature:(int, void *, size_t)
readw_lock	sock/ourhdr.h	/^#define	readw_lock(/;"	d
rec	ssntp/ntp.h	/^  struct l_fixedpt	rec;$/;"	m	struct:ntpdata	typeref:struct:ntpdata::l_fixedpt	access:public
rec	traceroute/trace.h	/^struct rec {					\/* format of outgoing UDP data *\/$/;"	s
rec::rec_seq	traceroute/trace.h	/^  u_short	rec_seq;			\/* sequence number *\/$/;"	m	struct:rec	access:public
rec::rec_ttl	traceroute/trace.h	/^  u_short	rec_ttl;			\/* TTL packet left with *\/$/;"	m	struct:rec	access:public
rec::rec_tv	traceroute/trace.h	/^  struct timeval	rec_tv;		\/* time packet left *\/$/;"	m	struct:rec	typeref:struct:rec::timeval	access:public
rec_seq	traceroute/trace.h	/^  u_short	rec_seq;			\/* sequence number *\/$/;"	m	struct:rec	access:public
rec_ttl	traceroute/trace.h	/^  u_short	rec_ttl;			\/* TTL packet left with *\/$/;"	m	struct:rec	access:public
rec_tv	traceroute/trace.h	/^  struct timeval	rec_tv;		\/* time packet left *\/$/;"	m	struct:rec	typeref:struct:rec::timeval	access:public
recv	key/unp.h	/^#define	recv(/;"	d
recv	key/unp.h	/^#undef	recv$/;"	d
recv	lib/unp.h	/^#define	recv(/;"	d
recv	lib/unp.h	/^#undef	recv$/;"	d
recv	sctp/unp.h	/^#define	recv(/;"	d
recv	sctp/unp.h	/^#undef	recv$/;"	d
recv	traceroute/trace.h	/^  int	 (*recv)(int, struct timeval *);$/;"	m	struct:proto	access:public
recv_all	mcast/main.c	/^void	recv_all(int, socklen_t);$/;"	p	file:	signature:(int, socklen_t)
recv_all	mcast/recv.c	/^recv_all(int recvfd, socklen_t salen)$/;"	f	signature:(int recvfd, socklen_t salen)
recv_cred	unixdomain/tfcred01.c	/^recv_cred(int fd, void *ptr, size_t nbytes, struct fcred *fcredptr)$/;"	f	signature:(int fd, void *ptr, size_t nbytes, struct fcred *fcredptr)
recv_cred	unixdomain/tfcred01.c	/^ssize_t	recv_cred(int, void *, size_t, struct fcred *);$/;"	p	file:	signature:(int, void *, size_t, struct fcred *)
recv_fd	sock/ourhdr.h	/^int		 recv_fd(int, ssize_t (*func)(int, const void *, size_t));$/;"	p	signature:(int, ssize_t (*func)(int, const void *, size_t))
recv_v4	traceroute/recv_v4.c	/^recv_v4(int seq, struct timeval *tv)$/;"	f	signature:(int seq, struct timeval *tv)
recv_v4	traceroute/trace.h	/^int		 recv_v4(int, struct timeval *);$/;"	p	signature:(int, struct timeval *)
recv_v6	traceroute/recv_v6.c	/^recv_v6(int seq, struct timeval *tv)$/;"	f	signature:(int seq, struct timeval *tv)
recv_v6	traceroute/trace.h	/^int		 recv_v6(int, struct timeval *);$/;"	p	signature:(int, struct timeval *)
recvbuf	traceroute/trace.h	/^char	 recvbuf[BUFSIZE];$/;"	v
recvdstaddr	sock/main.c	/^int		recvdstaddr;		\/* IP_RECVDSTADDR option *\/$/;"	v
recvfd	traceroute/trace.h	/^int		 sendfd, recvfd;	\/* send on UDP sock, read on raw ICMP sock *\/$/;"	v
recvfrom_alarm	bcast/dgclibcast1.c	/^recvfrom_alarm(int signo)$/;"	f	file:	signature:(int signo)
recvfrom_alarm	bcast/dgclibcast1.c	/^static void	recvfrom_alarm(int);$/;"	p	file:	signature:(int)
recvfrom_alarm	bcast/dgclibcast2.c	/^recvfrom_alarm(int signo)$/;"	f	file:	signature:(int signo)
recvfrom_alarm	bcast/dgclibcast2.c	/^static void	recvfrom_alarm(int);$/;"	p	file:	signature:(int)
recvfrom_alarm	bcast/dgclibcast3.c	/^recvfrom_alarm(int signo)$/;"	f	file:	signature:(int signo)
recvfrom_alarm	bcast/dgclibcast3.c	/^static void	recvfrom_alarm(int);$/;"	p	file:	signature:(int)
recvfrom_alarm	bcast/dgclibcast4.c	/^recvfrom_alarm(int signo)$/;"	f	file:	signature:(int signo)
recvfrom_alarm	bcast/dgclibcast4.c	/^static void	recvfrom_alarm(int);$/;"	p	file:	signature:(int)
recvfrom_alarm	bcast/dgclibcast5.c	/^recvfrom_alarm(int signo)$/;"	f	file:	signature:(int signo)
recvfrom_alarm	bcast/dgclibcast5.c	/^static void			recvfrom_alarm(int);$/;"	p	file:	signature:(int)
recvfrom_alarm	bcast/dgclibcast6.c	/^recvfrom_alarm(int signo)$/;"	f	file:	signature:(int signo)
recvfrom_alarm	bcast/dgclibcast6.c	/^static void	recvfrom_alarm(int);$/;"	p	file:	signature:(int)
recvfrom_alarm	mcast/dgclibcast1.c	/^recvfrom_alarm(int signo)$/;"	f	file:	signature:(int signo)
recvfrom_alarm	mcast/dgclibcast1.c	/^static void	recvfrom_alarm(int);$/;"	p	file:	signature:(int)
recvfrom_alarm	mcast/dgclimcast5.c	/^recvfrom_alarm(int signo)$/;"	f	file:	signature:(int signo)
recvfrom_alarm	mcast/dgclimcast5.c	/^static void			recvfrom_alarm(int);$/;"	p	file:	signature:(int)
recvfrom_alarm	mcast/dgclimcast6.c	/^recvfrom_alarm(int signo)$/;"	f	file:	signature:(int signo)
recvfrom_alarm	mcast/dgclimcast6.c	/^static void			recvfrom_alarm(int);$/;"	p	file:	signature:(int)
recvfrom_flags	advio/old/recvfromflags.c	/^recvfrom_flags(int fd, void *ptr, size_t nbytes, int *flagsp,$/;"	f	signature:(int fd, void *ptr, size_t nbytes, int *flagsp, SA *sa, socklen_t *salenptr, void *dstaddrp)
recvfrom_flags	advio/recvfromflags.c	/^recvfrom_flags(int fd, void *ptr, size_t nbytes, int *flagsp,$/;"	f	signature:(int fd, void *ptr, size_t nbytes, int *flagsp, SA *sa, socklen_t *salenptr, struct unp_in_pktinfo *pktp)
recvfrom_flags	key/unp.h	/^ssize_t	 recvfrom_flags(int, void *, size_t, int *, SA *, socklen_t *,$/;"	p	signature:(int, void *, size_t, int *, SA *, socklen_t *, struct in_pktinfo *)
recvfrom_flags	lib/unp.h	/^ssize_t	 recvfrom_flags(int, void *, size_t, int *, SA *, socklen_t *,$/;"	p	signature:(int, void *, size_t, int *, SA *, socklen_t *, struct unp_in_pktinfo *)
recvfrom_flags	sctp/unp.h	/^ssize_t	 recvfrom_flags(int, void *, size_t, int *, SA *, socklen_t *,$/;"	p	signature:(int, void *, size_t, int *, SA *, socklen_t *, struct in_pktinfo *)
recvfrom_int	udpcliserv/dgecholoop1.c	/^recvfrom_int(int signo)$/;"	f	file:	signature:(int signo)
recvfrom_int	udpcliserv/dgecholoop1.c	/^static void	recvfrom_int(int);$/;"	p	file:	signature:(int)
recvfrom_int	udpcliserv/dgecholoop2.c	/^recvfrom_int(int signo)$/;"	f	file:	signature:(int signo)
recvfrom_int	udpcliserv/dgecholoop2.c	/^static void	recvfrom_int(int);$/;"	p	file:	signature:(int)
recvhdr	rtt/dg_send_recv.c	/^} sendhdr, recvhdr;$/;"	v	typeref:struct:hdr	file:
refid	ssntp/ntp.h	/^  uint32_t			refid;$/;"	m	struct:ntpdata	access:public
reftime	ssntp/ntp.h	/^  struct l_fixedpt	reftime;$/;"	m	struct:ntpdata	typeref:struct:ntpdata::l_fixedpt	access:public
res_init	configure	/^res_init ();$/;"	f
result	tcpcliserv/sum.h	/^struct result {$/;"	s
result::sum	tcpcliserv/sum.h	/^  long	sum;$/;"	m	struct:result	access:public
reuseaddr	sock/main.c	/^int		reuseaddr;			\/* SO_REUSEADDR *\/$/;"	v
reuseport	sock/main.c	/^int		reuseport;			\/* SO_REUSEPORT *\/$/;"	v
rl_buf	server/readline_r.h	/^  char		rl_buf[MAXLINE];$/;"	m	struct:__anon7	access:public
rl_buf	test/readline.h	/^  char		rl_buf[MAXLINE];$/;"	m	struct:__anon9	access:public
rl_buf	threads/readline.c	/^  char	 rl_buf[MAXLINE];$/;"	m	struct:__anon10	file:	access:public
rl_bufptr	server/readline_r.h	/^  char		*rl_bufptr;		\/* initialize to rl_buf *\/$/;"	m	struct:__anon7	access:public
rl_bufptr	test/readline.h	/^  char		*rl_bufptr;		\/* initialize to rl_buf *\/$/;"	m	struct:__anon9	access:public
rl_bufptr	threads/readline.c	/^  char	*rl_bufptr;			\/* initialize to rl_buf *\/$/;"	m	struct:__anon10	file:	access:public
rl_cnt	server/readline_r.h	/^  int		rl_cnt;			\/* initialize to 0 *\/$/;"	m	struct:__anon7	access:public
rl_cnt	test/readline.h	/^  int		rl_cnt;			\/* initialize to 0 *\/$/;"	m	struct:__anon9	access:public
rl_cnt	threads/readline.c	/^  int	 rl_cnt;			\/* initialize to 0 *\/$/;"	m	struct:__anon10	file:	access:public
rl_key	threads/readline.c	/^static pthread_key_t	rl_key;$/;"	v	file:
rl_once	threads/readline.c	/^static pthread_once_t	rl_once = PTHREAD_ONCE_INIT;$/;"	v	file:
rset	icmpd/icmpd.h	/^fd_set			rset, allset;$/;"	v
rset	nonblock/web.h	/^fd_set	rset, wset;$/;"	v
rtt_base	lib/unprtt.h	/^  uint32_t	rtt_base;	\/* # sec since 1\/1\/1970 at start *\/$/;"	m	struct:rtt_info	access:public
rtt_base	rtt/unprtt.h	/^  uint32_t	rtt_base;	\/* #sec since 1\/1\/1970 at start *\/$/;"	m	struct:rtt_info	access:public
rtt_d_flag	lib/rtt.c	/^int		rtt_d_flag = 0;		\/* debug flag; can be set by caller *\/$/;"	v
rtt_debug	lib/rtt.c	/^rtt_debug(struct rtt_info *ptr)$/;"	f	signature:(struct rtt_info *ptr)
rtt_debug	lib/unprtt.h	/^void	 rtt_debug(struct rtt_info *);$/;"	p	signature:(struct rtt_info *)
rtt_debug	rtt/unprtt.h	/^void	 rtt_debug(struct rtt_info *);$/;"	p	signature:(struct rtt_info *)
rtt_info	lib/unprtt.h	/^struct rtt_info {$/;"	s
rtt_info	rtt/unprtt.h	/^struct rtt_info {$/;"	s
rtt_info::rtt_base	lib/unprtt.h	/^  uint32_t	rtt_base;	\/* # sec since 1\/1\/1970 at start *\/$/;"	m	struct:rtt_info	access:public
rtt_info::rtt_base	rtt/unprtt.h	/^  uint32_t	rtt_base;	\/* #sec since 1\/1\/1970 at start *\/$/;"	m	struct:rtt_info	access:public
rtt_info::rtt_nrexmt	lib/unprtt.h	/^  int		rtt_nrexmt;	\/* # times retransmitted: 0, 1, 2, ... *\/$/;"	m	struct:rtt_info	access:public
rtt_info::rtt_nrexmt	rtt/unprtt.h	/^  int		rtt_nrexmt;	\/* #times retransmitted: 0, 1, 2, ... *\/$/;"	m	struct:rtt_info	access:public
rtt_info::rtt_rto	lib/unprtt.h	/^  float		rtt_rto;	\/* current RTO to use, in seconds *\/$/;"	m	struct:rtt_info	access:public
rtt_info::rtt_rto	rtt/unprtt.h	/^  float		rtt_rto;	\/* current RTO to use, seconds *\/$/;"	m	struct:rtt_info	access:public
rtt_info::rtt_rtt	lib/unprtt.h	/^  float		rtt_rtt;	\/* most recent measured RTT, in seconds *\/$/;"	m	struct:rtt_info	access:public
rtt_info::rtt_rtt	rtt/unprtt.h	/^  float		rtt_rtt;	\/* most recent measured RTT, seconds *\/$/;"	m	struct:rtt_info	access:public
rtt_info::rtt_rttvar	lib/unprtt.h	/^  float		rtt_rttvar;	\/* smoothed mean deviation, in seconds *\/$/;"	m	struct:rtt_info	access:public
rtt_info::rtt_rttvar	rtt/unprtt.h	/^  float		rtt_rttvar;	\/* smoothed mean deviation, seconds *\/$/;"	m	struct:rtt_info	access:public
rtt_info::rtt_srtt	lib/unprtt.h	/^  float		rtt_srtt;	\/* smoothed RTT estimator, in seconds *\/$/;"	m	struct:rtt_info	access:public
rtt_info::rtt_srtt	rtt/unprtt.h	/^  float		rtt_srtt;	\/* smoothed RTT estimator, seconds *\/$/;"	m	struct:rtt_info	access:public
rtt_init	lib/rtt.c	/^rtt_init(struct rtt_info *ptr)$/;"	f	signature:(struct rtt_info *ptr)
rtt_init	lib/unprtt.h	/^void	 rtt_init(struct rtt_info *);$/;"	p	signature:(struct rtt_info *)
rtt_init	rtt/unprtt.h	/^void	 rtt_init(struct rtt_info *);$/;"	p	signature:(struct rtt_info *)
rtt_minmax	lib/rtt.c	/^rtt_minmax(float rto)$/;"	f	file:	signature:(float rto)
rtt_newpack	lib/rtt.c	/^rtt_newpack(struct rtt_info *ptr)$/;"	f	signature:(struct rtt_info *ptr)
rtt_newpack	lib/unprtt.h	/^void	 rtt_newpack(struct rtt_info *);$/;"	p	signature:(struct rtt_info *)
rtt_newpack	rtt/unprtt.h	/^void	 rtt_newpack(struct rtt_info *);$/;"	p	signature:(struct rtt_info *)
rtt_nrexmt	lib/unprtt.h	/^  int		rtt_nrexmt;	\/* # times retransmitted: 0, 1, 2, ... *\/$/;"	m	struct:rtt_info	access:public
rtt_nrexmt	rtt/unprtt.h	/^  int		rtt_nrexmt;	\/* #times retransmitted: 0, 1, 2, ... *\/$/;"	m	struct:rtt_info	access:public
rtt_rto	lib/unprtt.h	/^  float		rtt_rto;	\/* current RTO to use, in seconds *\/$/;"	m	struct:rtt_info	access:public
rtt_rto	rtt/unprtt.h	/^  float		rtt_rto;	\/* current RTO to use, seconds *\/$/;"	m	struct:rtt_info	access:public
rtt_rtt	lib/unprtt.h	/^  float		rtt_rtt;	\/* most recent measured RTT, in seconds *\/$/;"	m	struct:rtt_info	access:public
rtt_rtt	rtt/unprtt.h	/^  float		rtt_rtt;	\/* most recent measured RTT, seconds *\/$/;"	m	struct:rtt_info	access:public
rtt_rttvar	lib/unprtt.h	/^  float		rtt_rttvar;	\/* smoothed mean deviation, in seconds *\/$/;"	m	struct:rtt_info	access:public
rtt_rttvar	rtt/unprtt.h	/^  float		rtt_rttvar;	\/* smoothed mean deviation, seconds *\/$/;"	m	struct:rtt_info	access:public
rtt_srtt	lib/unprtt.h	/^  float		rtt_srtt;	\/* smoothed RTT estimator, in seconds *\/$/;"	m	struct:rtt_info	access:public
rtt_srtt	rtt/unprtt.h	/^  float		rtt_srtt;	\/* smoothed RTT estimator, seconds *\/$/;"	m	struct:rtt_info	access:public
rtt_start	lib/rtt.c	/^rtt_start(struct rtt_info *ptr)$/;"	f	signature:(struct rtt_info *ptr)
rtt_start	lib/unprtt.h	/^int		 rtt_start(struct rtt_info *);$/;"	p	signature:(struct rtt_info *)
rtt_start	rtt/unprtt.h	/^int		 rtt_start(struct rtt_info *);$/;"	p	signature:(struct rtt_info *)
rtt_stop	lib/rtt.c	/^rtt_stop(struct rtt_info *ptr, uint32_t ms)$/;"	f	signature:(struct rtt_info *ptr, uint32_t ms)
rtt_stop	lib/unprtt.h	/^void	 rtt_stop(struct rtt_info *, uint32_t);$/;"	p	signature:(struct rtt_info *, uint32_t)
rtt_stop	rtt/unprtt.h	/^void	 rtt_stop(struct rtt_info *, uint32_t);$/;"	p	signature:(struct rtt_info *, uint32_t)
rtt_timeout	lib/rtt.c	/^rtt_timeout(struct rtt_info *ptr)$/;"	f	signature:(struct rtt_info *ptr)
rtt_timeout	lib/unprtt.h	/^int		 rtt_timeout(struct rtt_info *);$/;"	p	signature:(struct rtt_info *)
rtt_timeout	rtt/unprtt.h	/^int		 rtt_timeout(struct rtt_info *);$/;"	p	signature:(struct rtt_info *)
rtt_ts	lib/rtt.c	/^rtt_ts(struct rtt_info *ptr)$/;"	f	signature:(struct rtt_info *ptr)
rtt_ts	lib/unprtt.h	/^uint32_t rtt_ts(struct rtt_info *);$/;"	p	signature:(struct rtt_info *)
rtt_ts	rtt/unprtt.h	/^uint32_t rtt_ts(struct rtt_info *);$/;"	p	signature:(struct rtt_info *)
rttinfo	rtt/dg_send_recv.c	/^static struct rtt_info   rttinfo;$/;"	v	typeref:struct:rtt_info	file:
rttinit	rtt/dg_send_recv.c	/^static int	rttinit = 0;$/;"	v	file:
s	ping/bsdping.c	/^int s;				\/* socket file descriptor *\/$/;"	v
s_fixedpt	ssntp/ntp.h	/^struct s_fixedpt {		\/* 32-bit fixed-point *\/$/;"	s
s_fixedpt::fraction	ssntp/ntp.h	/^  uint16_t	fraction;$/;"	m	struct:s_fixedpt	access:public
s_fixedpt::int_part	ssntp/ntp.h	/^  uint16_t	int_part;$/;"	m	struct:s_fixedpt	access:public
s_pipe	sock/ourhdr.h	/^int		 s_pipe(int *);				\/* {Progs svr4_spipe bsd_spipe} *\/$/;"	p	signature:(int *)
sa_print	key/printsadbmsg.c	/^sa_print(struct sadb_ext *ext)$/;"	f	signature:(struct sadb_ext *ext)
sabind	traceroute/trace.h	/^  struct sockaddr  *sabind;	\/* sockaddr{} for binding source port *\/$/;"	m	struct:proto	typeref:struct:proto::sockaddr	access:public
sadb_add	key/add.c	/^sadb_add(struct sockaddr *src, struct sockaddr *dst, int type, int alg,$/;"	f	signature:(struct sockaddr *src, struct sockaddr *dst, int type, int alg, int spi, int keybits, unsigned char *keydata)
sadb_dump	key/dump.c	/^sadb_dump(int type)$/;"	f	signature:(int type)
sadb_register	key/register.c	/^sadb_register(int type)$/;"	f	signature:(int type)
salast	traceroute/trace.h	/^  struct sockaddr  *salast;	\/* last sockaddr{} for receiving *\/$/;"	m	struct:proto	typeref:struct:proto::sockaddr	access:public
salen	key/add.c	/^salen(struct sockaddr *sa)$/;"	f	signature:(struct sockaddr *sa)
salen	ping/ping.h	/^  socklen_t	    salen;		\/* length of sockaddr{}s *\/$/;"	m	struct:proto	access:public
salen	traceroute/trace.h	/^  socklen_t   		salen;	\/* length of sockaddr{}s *\/$/;"	m	struct:proto	access:public
sarecv	ping/ping.h	/^  struct sockaddr  *sarecv;	\/* sockaddr{} for receiving *\/$/;"	m	struct:proto	typeref:struct:proto::sockaddr	access:public
sarecv	traceroute/trace.h	/^  struct sockaddr  *sarecv;	\/* sockaddr{} for receiving *\/$/;"	m	struct:proto	typeref:struct:proto::sockaddr	access:public
sasend	ping/ping.h	/^  struct sockaddr  *sasend;	\/* sockaddr{} for send, from getaddrinfo *\/$/;"	m	struct:proto	typeref:struct:proto::sockaddr	access:public
sasend	traceroute/trace.h	/^  struct sockaddr  *sasend;	\/* sockaddr{} for send, from getaddrinfo *\/$/;"	m	struct:proto	typeref:struct:proto::sockaddr	access:public
satype	key/name.c	/^static struct idlist satype[] = {$/;"	v	typeref:struct:idlist	file:
sccsid	ping/bsdping.c	/^static char sccsid[] = "@(#)ping.c	8.1 (Berkeley) 6\/5\/93";$/;"	v	file:
sctp_address_to_associd	sctp/sctp_addr_to_associd.c	/^sctp_address_to_associd(int sock_fd, struct sockaddr *sa, socklen_t salen)$/;"	f	signature:(int sock_fd, struct sockaddr *sa, socklen_t salen)
sctp_address_to_associd	sctp/unp.h	/^sctp_address_to_associd(int sock_fd, struct sockaddr *sa, socklen_t);$/;"	p	signature:(int sock_fd, struct sockaddr *sa, socklen_t)
sctp_bind_arg_list	sctp/sctp_bindargs.c	/^sctp_bind_arg_list(int sock_fd, char **argv, int argc)$/;"	f	signature:(int sock_fd, char **argv, int argc)
sctp_bind_arg_list	sctp/unp.h	/^int      sctp_bind_arg_list(int sock_fd, char **argv, int argc);$/;"	p	signature:(int sock_fd, char **argv, int argc)
sctp_check_notification	sctp/unp.h	/^void sctp_check_notification(int sock_fd,char *recvlin);$/;"	p	signature:(int sock_fd,char *recvlin)
sctp_get_no_strms	sctp/sctp_getnostrm.c	/^sctp_get_no_strms(int sock_fd,struct sockaddr *to, socklen_t tolen)$/;"	f	signature:(int sock_fd,struct sockaddr *to, socklen_t tolen)
sctp_heartbeat_action	sctp/unp.h	/^int sctp_heartbeat_action(int sock_fd, struct sockaddr *sa, $/;"	p	signature:(int sock_fd, struct sockaddr *sa, int action, u_int value)
sctp_pdapi_rdbuf_sz	sctp/sctp_pdapircv.c	/^static int sctp_pdapi_rdbuf_sz=0;$/;"	v	file:
sctp_pdapi_readbuf	sctp/sctp_pdapircv.c	/^static uint8_t *sctp_pdapi_readbuf=NULL;$/;"	v	file:
sctp_pdapi_recvmsg	sctp/unp.h	/^uint8_t *sctp_pdapi_recvmsg(int sock_fd, int *rdlen, SA *from, int *from_len,$/;"	p	signature:(int sock_fd, int *rdlen, SA *from, int *from_len, struct sctp_sndrcvinfo *sri, int *msg_flags)
sctp_print_addresses	sctp/sctp_print_addrs.c	/^sctp_print_addresses(struct sockaddr_storage *addrs, int num)$/;"	f	signature:(struct sockaddr_storage *addrs, int num)
sctp_print_addresses	sctp/unp.h	/^void sctp_print_addresses(struct sockaddr_storage *addrs, int num);$/;"	p	signature:(struct sockaddr_storage *addrs, int num)
sctp_print_notification	sctp/unp.h	/^sctp_print_notification(char *notify_buf);$/;"	p	signature:(char *notify_buf)
sctpstr_cli	sctp/sctp_strcli.c	/^sctpstr_cli(FILE *fp, int sock_fd, struct sockaddr *to, socklen_t tolen)$/;"	f	signature:(FILE *fp, int sock_fd, struct sockaddr *to, socklen_t tolen)
sctpstr_cli	sctp/sctp_strcli1.c	/^sctpstr_cli(FILE *fp, int sock_fd, struct sockaddr *to, socklen_t tolen)$/;"	f	signature:(FILE *fp, int sock_fd, struct sockaddr *to, socklen_t tolen)
sctpstr_cli	sctp/sctp_strcli_un.c	/^sctpstr_cli(FILE *fp, int sock_fd, struct sockaddr *to, socklen_t tolen)$/;"	f	signature:(FILE *fp, int sock_fd, struct sockaddr *to, socklen_t tolen)
sctpstr_cli	sctp/unp.h	/^void     sctpstr_cli(FILE *fp, int sock_fd, struct sockaddr *to, socklen_t tolen);$/;"	p	signature:(FILE *fp, int sock_fd, struct sockaddr *to, socklen_t tolen)
sctpstr_cli_echoall	sctp/sctp_strcliecho.c	/^sctpstr_cli_echoall(FILE *fp, int sock_fd, struct sockaddr *to, socklen_t tolen)$/;"	f	signature:(FILE *fp, int sock_fd, struct sockaddr *to, socklen_t tolen)
sctpstr_cli_echoall	sctp/sctp_strcliecho2.c	/^sctpstr_cli_echoall(FILE *fp, int sock_fd, struct sockaddr *to, socklen_t tolen)$/;"	f	signature:(FILE *fp, int sock_fd, struct sockaddr *to, socklen_t tolen)
sctpstr_cli_echoall	sctp/unp.h	/^void	 sctpstr_cli_echoall(FILE *fp, int sock_fd, struct sockaddr *to, $/;"	p	signature:(FILE *fp, int sock_fd, struct sockaddr *to, socklen_t tolen)
search	libgai/gai_hdr.h	/^struct search {$/;"	s
search	libgai/old/savecopy.c	/^struct search {$/;"	s	file:
search::family	libgai/gai_hdr.h	/^  int			family;	\/* AF_xxx *\/$/;"	m	struct:search	access:public
search::family	libgai/old/savecopy.c	/^  int			family;	\/* AF_xxx *\/$/;"	m	struct:search	file:	access:public
search::host	libgai/gai_hdr.h	/^  const char	*host;	\/* hostname or address string *\/$/;"	m	struct:search	access:public
search::host	libgai/old/savecopy.c	/^  const char	*host;	\/* hostname of address string *\/$/;"	m	struct:search	file:	access:public
send	key/unp.h	/^#define	send(/;"	d
send	key/unp.h	/^#undef	send$/;"	d
send	lib/unp.h	/^#define	send(/;"	d
send	lib/unp.h	/^#undef	send$/;"	d
send	sctp/unp.h	/^#define	send(/;"	d
send	sctp/unp.h	/^#undef	send$/;"	d
send	sock/ourhdr.h	/^#define	send(/;"	d
send_all	mcast/main.c	/^void	send_all(int, SA *, socklen_t);$/;"	p	file:	signature:(int, SA *, socklen_t)
send_all	mcast/send.c	/^send_all(int sendfd, SA *sadest, socklen_t salen)$/;"	f	signature:(int sendfd, SA *sadest, socklen_t salen)
send_dns_query	udpcksum/senddnsquery-libnet.c	/^send_dns_query(void)$/;"	f	signature:(void)
send_dns_query	udpcksum/senddnsquery-raw.c	/^send_dns_query(void)$/;"	f	signature:(void)
send_dns_query	udpcksum/udpcksum.h	/^void			 send_dns_query(void);$/;"	p	signature:(void)
send_err	sock/ourhdr.h	/^int		 send_err(int, int, const char *);\/* {Prog senderr} *\/$/;"	p	signature:(int, int, const char *)
send_fd	sock/ourhdr.h	/^int		 send_fd(int, int);			\/* {Progs sendfd_svr4 sendfd_43bsd} *\/$/;"	p	signature:(int, int)
send_v4	ping/ping.h	/^void	 send_v4(void);$/;"	p	signature:(void)
send_v4	ping/send_v4.c	/^send_v4(void)$/;"	f	signature:(void)
send_v6	ping/ping.h	/^void	 send_v6(void);$/;"	p	signature:(void)
send_v6	ping/send_v6.c	/^send_v6()$/;"	f
sendbuf	ping/ping.h	/^char	 sendbuf[BUFSIZE];$/;"	v
sendbuf	traceroute/trace.h	/^char	 sendbuf[BUFSIZE];$/;"	v
sendfd	traceroute/trace.h	/^int		 sendfd, recvfd;	\/* send on UDP sock, read on raw ICMP sock *\/$/;"	v
sendhdr	rtt/dg_send_recv.c	/^} sendhdr, recvhdr;$/;"	v	typeref:struct:hdr	file:
sendto_01	test/test1.c	/^sendto_01()$/;"	f
seq	rtt/dg_send_recv.c	/^  uint32_t	seq;	\/* sequence # *\/$/;"	m	struct:hdr	file:	access:public
serv	debug/backlog.c	/^struct sockaddr_in	serv;$/;"	v	typeref:struct:sockaddr_in
serv	debug/qlen.c	/^struct sockaddr_in	serv;$/;"	v	typeref:struct:sockaddr_in
serv_accept	sock/ourhdr.h	/^int		 serv_accept(int, uid_t *);	\/* {Progs servaccept_svr4 servaccept_44bsd} *\/$/;"	p	signature:(int, uid_t *)
serv_listen	sock/ourhdr.h	/^int		 serv_listen(const char *);	\/* {Progs servlisten_svr4 servlisten_44bsd} *\/$/;"	p	signature:(const char *)
servaddr	sock/main.c	/^struct sockaddr_in	cliaddr, servaddr;$/;"	v	typeref:struct:
servaddr	test/test1.c	/^struct sockaddr_in	servaddr, cliaddr;$/;"	v	typeref:struct:sockaddr_in
server	sock/main.c	/^int		server;				\/* to act as server requires -s option *\/$/;"	v
servfd	oob/heartbeatcli.c	/^static int		servfd;$/;"	v	file:
servfd	oob/heartbeatserv.c	/^static int	servfd;$/;"	v	file:
servopen	sock/servopen.c	/^servopen(char *host, char *port)$/;"	f	signature:(char *host, char *port)
servopen	sock/sock.h	/^int		servopen(char *, char *);$/;"	p	signature:(char *, char *)
set_fl	sock/ourhdr.h	/^void	 set_fl(int, int);			\/* {Prog setfl} *\/$/;"	p	signature:(int, int)
sig_alrm	advio/dgclitimeo3.c	/^sig_alrm(int signo)$/;"	f	file:	signature:(int signo)
sig_alrm	advio/dgclitimeo3.c	/^static void	sig_alrm(int);$/;"	p	file:	signature:(int)
sig_alrm	debug/test04.c	/^sig_alrm(int signo)$/;"	f	signature:(int signo)
sig_alrm	oob/heartbeatcli.c	/^sig_alrm(int signo)$/;"	f	file:	signature:(int signo)
sig_alrm	oob/heartbeatcli.c	/^static void	sig_urg(int), sig_alrm(int);$/;"	p	file:	signature:(int)
sig_alrm	oob/heartbeatserv.c	/^sig_alrm(int signo)$/;"	f	file:	signature:(int signo)
sig_alrm	oob/heartbeatserv.c	/^static void	sig_urg(int), sig_alrm(int);$/;"	p	file:	signature:(int)
sig_alrm	ping/ping.h	/^void	 sig_alrm(int);$/;"	p	signature:(int)
sig_alrm	ping/sig_alrm.c	/^sig_alrm(int signo)$/;"	f	signature:(int signo)
sig_alrm	rtt/dg_send_recv.c	/^sig_alrm(int signo)$/;"	f	file:	signature:(int signo)
sig_alrm	rtt/dg_send_recv.c	/^static void	sig_alrm(int signo);$/;"	p	file:	signature:(int signo)
sig_alrm	tcpcliserv/tcpcli07.c	/^sig_alrm(int signo)$/;"	f	signature:(int signo)
sig_alrm	traceroute/sig_alrm.c	/^sig_alrm(int signo)$/;"	f	signature:(int signo)
sig_alrm	traceroute/trace.h	/^void	 sig_alrm(int);$/;"	p	signature:(int)
sig_alrm	udpcksum/udpcksum.c	/^sig_alrm(int signo)$/;"	f	signature:(int signo)
sig_catch	sock/loop.c	/^sig_catch(int signo)$/;"	f	signature:(int signo)
sig_catch	sock/loop.c	/^void	sig_catch(int);		\/* my function *\/$/;"	p	file:	signature:(int)
sig_chld	advio/sig_chld_waitpid.c	/^sig_chld(int signo)$/;"	f	signature:(int signo)
sig_chld	ipopts/sigchldwaitpid.c	/^sig_chld(int signo)$/;"	f	signature:(int signo)
sig_chld	oob/sigchldwaitpid.c	/^sig_chld(int signo)$/;"	f	signature:(int signo)
sig_chld	server/sig_chld_waitpid.c	/^sig_chld(int signo)$/;"	f	signature:(int signo)
sig_chld	tcpcliserv/sigchldwait.c	/^sig_chld(int signo)$/;"	f	signature:(int signo)
sig_chld	tcpcliserv/sigchldwaitpid.c	/^sig_chld(int signo)$/;"	f	signature:(int signo)
sig_chld	udpcliserv/sigchldwaitpid.c	/^sig_chld(int signo)$/;"	f	signature:(int signo)
sig_chld	unixdomain/sigchldwaitpid.c	/^sig_chld(int signo)$/;"	f	signature:(int signo)
sig_hup	sigio/dgecho01.c	/^sig_hup(int signo)$/;"	f	file:	signature:(int signo)
sig_hup	sigio/dgecho01.c	/^static void	sig_hup(int);$/;"	p	file:	signature:(int)
sig_int	server/serv00.c	/^sig_int(int signo)$/;"	f	signature:(int signo)
sig_int	server/serv01.c	/^sig_int(int signo)$/;"	f	signature:(int signo)
sig_int	server/serv02.c	/^sig_int(int signo)$/;"	f	signature:(int signo)
sig_int	server/serv02m.c	/^sig_int(int signo)$/;"	f	signature:(int signo)
sig_int	server/serv03.c	/^sig_int(int signo)$/;"	f	signature:(int signo)
sig_int	server/serv03m.c	/^sig_int(int signo)$/;"	f	signature:(int signo)
sig_int	server/serv04.c	/^sig_int(int signo)$/;"	f	signature:(int signo)
sig_int	server/serv05.c	/^sig_int(int signo)$/;"	f	signature:(int signo)
sig_int	server/serv06.c	/^sig_int(int signo)$/;"	f	signature:(int signo)
sig_int	server/serv07.c	/^sig_int(int signo)$/;"	f	signature:(int signo)
sig_int	server/serv08.c	/^sig_int(int signo)$/;"	f	signature:(int signo)
sig_int	server/serv09.c	/^sig_int(int signo)$/;"	f	signature:(int signo)
sig_int	test/accept_eintr.c	/^sig_int(int signo)$/;"	f	signature:(int signo)
sig_io	sigio/dgecho01.c	/^sig_io(int signo)$/;"	f	file:	signature:(int signo)
sig_io	sigio/dgecho01.c	/^static void	sig_io(int);$/;"	p	file:	signature:(int)
sig_pipe	tcpcliserv/tsigpipe.c	/^sig_pipe(int signo)$/;"	f	signature:(int signo)
sig_poll	debug/test05.c	/^sig_poll(int signo)$/;"	f	signature:(int signo)
sig_urg	oob/heartbeatcli.c	/^sig_urg(int signo)$/;"	f	file:	signature:(int signo)
sig_urg	oob/heartbeatcli.c	/^static void	sig_urg(int), sig_alrm(int);$/;"	p	file:	signature:(int)
sig_urg	oob/heartbeatserv.c	/^sig_urg(int signo)$/;"	f	file:	signature:(int signo)
sig_urg	oob/heartbeatserv.c	/^static void	sig_urg(int), sig_alrm(int);$/;"	p	file:	signature:(int)
sig_urg	oob/tcprecv01.c	/^sig_urg(int signo)$/;"	f	signature:(int signo)
sig_urg	oob/tcprecv01.c	/^void	sig_urg(int);$/;"	p	file:	signature:(int)
sig_urg	oob/tcprecv05.c	/^sig_urg(int signo)$/;"	f	signature:(int signo)
sig_urg	oob/tcprecv05.c	/^void	sig_urg(int);$/;"	p	file:	signature:(int)
sig_usr	sock/tellwait.c	/^sig_usr(int signo)	\/* one signal handler for SIGUSR1 and SIGUSR2 *\/$/;"	f	file:	signature:(int signo)
sigflag	sock/tellwait.c	/^static volatile sig_atomic_t	sigflag;$/;"	v	file:
sigio	sock/main.c	/^int		sigio;				\/* send SIGIO *\/$/;"	v
sigio_func	sock/sockopts.c	/^sigio_func(int signo)$/;"	f	file:	signature:(int signo)
signal	lib/signal.c	/^signal(int signo, Sigfunc *func)$/;"	f	signature:(int signo, Sigfunc *func)
signal_intr	key/unp.h	/^Sigfunc *signal_intr(int, Sigfunc *);$/;"	p	signature:(int, Sigfunc *)
signal_intr	lib/signal_intr.c	/^signal_intr(int signo, Sigfunc *func)$/;"	f	signature:(int signo, Sigfunc *func)
signal_intr	lib/unp.h	/^Sigfunc *signal_intr(int, Sigfunc *);$/;"	p	signature:(int, Sigfunc *)
signal_intr	sctp/unp.h	/^Sigfunc *signal_intr(int, Sigfunc *);$/;"	p	signature:(int, Sigfunc *)
signal_intr	sock/ourhdr.h	/^Sigfunc	*signal_intr(int, Sigfunc *);\/* {Prog signal_intr_function} *\/$/;"	p	signature:(int, Sigfunc *)
sink	sock/sourcesink.c	/^sink(int sockfd)$/;"	f	signature:(int sockfd)
sink_tcp	sock/sinktcp.c	/^sink_tcp(int sockfd)$/;"	f	signature:(int sockfd)
sink_tcp	sock/sock.h	/^void	sink_tcp(int);$/;"	p	signature:(int)
sink_udp	sock/sinkudp.c	/^sink_udp(int sockfd)	\/* TODO: use recvfrom ?? *\/$/;"	f	signature:(int sockfd)
sink_udp	sock/sock.h	/^void	sink_udp(int);$/;"	p	signature:(int)
sleep_us	sock/ourhdr.h	/^void	 sleep_us(unsigned int);	\/* {Ex sleepus} *\/$/;"	p	signature:(unsigned int)
sleep_us	sock/sleepus.c	/^sleep_us(unsigned int nusecs)$/;"	f	signature:(unsigned int nusecs)
sleep_us	sock/sock.h	/^void	sleep_us(unsigned int);$/;"	p	signature:(unsigned int)
snaplen	udpcksum/main.c	/^int		snaplen = 200;	\/* amount of data to capture *\/$/;"	v
sndbuflen	sock/main.c	/^int		sndbuflen;			\/* size for SO_SNDBUF *\/$/;"	v
sndtimeo	sock/main.c	/^long	sndtimeo;			\/* SO_SNDTIMEO *\/$/;"	v
snprintf	key/unp.h	/^int		 snprintf(char *, size_t, const char *, ...);$/;"	p	signature:(char *, size_t, const char *, ...)
snprintf	lib/snprintf.c	/^snprintf(char *buf, size_t size, const char *fmt, ...)$/;"	f	signature:(char *buf, size_t size, const char *fmt, ...)
snprintf	lib/unp.h	/^int		 snprintf(char *, size_t, const char *, ...);$/;"	p	signature:(char *, size_t, const char *, ...)
snprintf	sctp/unp.h	/^int		 snprintf(char *, size_t, const char *, ...);$/;"	p	signature:(char *, size_t, const char *, ...)
sntp_proc	ssntp/sntp.h	/^void	 sntp_proc(char *, ssize_t, struct timeval *);$/;"	p	signature:(char *, ssize_t, struct timeval *)
sntp_proc	ssntp/sntp_proc.c	/^sntp_proc(char *buf, ssize_t n, struct timeval *nowptr)$/;"	f	signature:(char *buf, ssize_t n, struct timeval *nowptr)
sock_bind_wild	key/unp.h	/^int		 sock_bind_wild(int, int);$/;"	p	signature:(int, int)
sock_bind_wild	lib/sock_bind_wild.c	/^sock_bind_wild(int sockfd, int family)$/;"	f	signature:(int sockfd, int family)
sock_bind_wild	lib/unp.h	/^int		 sock_bind_wild(int, int);$/;"	p	signature:(int, int)
sock_bind_wild	sctp/unp.h	/^int		 sock_bind_wild(int, int);$/;"	p	signature:(int, int)
sock_cmp_addr	key/unp.h	/^int		 sock_cmp_addr(const SA *, const SA *, socklen_t);$/;"	p	signature:(const SA *, const SA *, socklen_t)
sock_cmp_addr	lib/sock_cmp_addr.c	/^sock_cmp_addr(const struct sockaddr *sa1, const struct sockaddr *sa2,$/;"	f	signature:(const struct sockaddr *sa1, const struct sockaddr *sa2, socklen_t salen)
sock_cmp_addr	lib/unp.h	/^int		 sock_cmp_addr(const SA *, const SA *, socklen_t);$/;"	p	signature:(const SA *, const SA *, socklen_t)
sock_cmp_addr	sctp/unp.h	/^int		 sock_cmp_addr(const SA *, const SA *, socklen_t);$/;"	p	signature:(const SA *, const SA *, socklen_t)
sock_cmp_port	key/unp.h	/^int		 sock_cmp_port(const SA *, const SA *, socklen_t);$/;"	p	signature:(const SA *, const SA *, socklen_t)
sock_cmp_port	lib/sock_cmp_port.c	/^sock_cmp_port(const struct sockaddr *sa1, const struct sockaddr *sa2,$/;"	f	signature:(const struct sockaddr *sa1, const struct sockaddr *sa2, socklen_t salen)
sock_cmp_port	lib/unp.h	/^int		 sock_cmp_port(const SA *, const SA *, socklen_t);$/;"	p	signature:(const SA *, const SA *, socklen_t)
sock_cmp_port	sctp/unp.h	/^int		 sock_cmp_port(const SA *, const SA *, socklen_t);$/;"	p	signature:(const SA *, const SA *, socklen_t)
sock_get_port	key/unp.h	/^int		 sock_get_port(const SA *, socklen_t);$/;"	p	signature:(const SA *, socklen_t)
sock_get_port	lib/sock_get_port.c	/^sock_get_port(const struct sockaddr *sa, socklen_t salen)$/;"	f	signature:(const struct sockaddr *sa, socklen_t salen)
sock_get_port	lib/unp.h	/^int		 sock_get_port(const SA *, socklen_t);$/;"	p	signature:(const SA *, socklen_t)
sock_get_port	sctp/unp.h	/^int		 sock_get_port(const SA *, socklen_t);$/;"	p	signature:(const SA *, socklen_t)
sock_masktop	libroute/sock_masktop.c	/^sock_masktop(SA *sa, socklen_t salen)$/;"	f	signature:(SA *sa, socklen_t salen)
sock_masktop	libroute/unproute.h	/^const char	*sock_masktop(struct sockaddr *, socklen_t);$/;"	p	signature:(struct sockaddr *, socklen_t)
sock_masktop	route/unproute.h	/^char	*sock_masktop(struct sockaddr *, socklen_t);$/;"	p	signature:(struct sockaddr *, socklen_t)
sock_ntop	key/unp.h	/^char	*sock_ntop(const SA *, socklen_t);$/;"	p	signature:(const SA *, socklen_t)
sock_ntop	lib/sock_ntop.c	/^sock_ntop(const struct sockaddr *sa, socklen_t salen)$/;"	f	signature:(const struct sockaddr *sa, socklen_t salen)
sock_ntop	lib/unp.h	/^char	*sock_ntop(const SA *, socklen_t);$/;"	p	signature:(const SA *, socklen_t)
sock_ntop	sctp/unp.h	/^char	*sock_ntop(const SA *, socklen_t);$/;"	p	signature:(const SA *, socklen_t)
sock_ntop_host	key/unp.h	/^char	*sock_ntop_host(const SA *, socklen_t);$/;"	p	signature:(const SA *, socklen_t)
sock_ntop_host	lib/sock_ntop_host.c	/^sock_ntop_host(const struct sockaddr *sa, socklen_t salen)$/;"	f	signature:(const struct sockaddr *sa, socklen_t salen)
sock_ntop_host	lib/unp.h	/^char	*sock_ntop_host(const SA *, socklen_t);$/;"	p	signature:(const SA *, socklen_t)
sock_ntop_host	sctp/unp.h	/^char	*sock_ntop_host(const SA *, socklen_t);$/;"	p	signature:(const SA *, socklen_t)
sock_opts	sockopt/checkopts.c	/^struct sock_opts {$/;"	s	file:
sock_opts	sockopt/checkopts.c	/^} sock_opts[] = {$/;"	v	typeref:struct:sock_opts
sock_opts::opt_level	sockopt/checkopts.c	/^  int		opt_level;$/;"	m	struct:sock_opts	file:	access:public
sock_opts::opt_name	sockopt/checkopts.c	/^  int		opt_name;$/;"	m	struct:sock_opts	file:	access:public
sock_opts::opt_str	sockopt/checkopts.c	/^  const char	   *opt_str;$/;"	m	struct:sock_opts	file:	access:public
sock_opts::opt_val_str	sockopt/checkopts.c	/^  char   *(*opt_val_str)(union val *, int);$/;"	m	struct:sock_opts	file:	access:public
sock_set_addr	key/unp.h	/^void	 sock_set_addr(SA *, socklen_t, const void *);$/;"	p	signature:(SA *, socklen_t, const void *)
sock_set_addr	lib/sock_set_addr.c	/^sock_set_addr(struct sockaddr *sa, socklen_t salen, const void *addr)$/;"	f	signature:(struct sockaddr *sa, socklen_t salen, const void *addr)
sock_set_addr	lib/unp.h	/^void	 sock_set_addr(SA *, socklen_t, const void *);$/;"	p	signature:(SA *, socklen_t, const void *)
sock_set_addr	sctp/unp.h	/^void	 sock_set_addr(SA *, socklen_t, const void *);$/;"	p	signature:(SA *, socklen_t, const void *)
sock_set_port	key/unp.h	/^void	 sock_set_port(SA *, socklen_t, int);$/;"	p	signature:(SA *, socklen_t, int)
sock_set_port	lib/sock_set_port.c	/^sock_set_port(struct sockaddr *sa, socklen_t salen, int port)$/;"	f	signature:(struct sockaddr *sa, socklen_t salen, int port)
sock_set_port	lib/unp.h	/^void	 sock_set_port(SA *, socklen_t, int);$/;"	p	signature:(SA *, socklen_t, int)
sock_set_port	sctp/unp.h	/^void	 sock_set_port(SA *, socklen_t, int);$/;"	p	signature:(SA *, socklen_t, int)
sock_set_wild	key/unp.h	/^void	 sock_set_wild(SA *, socklen_t);$/;"	p	signature:(SA *, socklen_t)
sock_set_wild	lib/sock_set_wild.c	/^sock_set_wild(struct sockaddr *sa, socklen_t salen)$/;"	f	signature:(struct sockaddr *sa, socklen_t salen)
sock_set_wild	lib/unp.h	/^void	 sock_set_wild(SA *, socklen_t);$/;"	p	signature:(SA *, socklen_t)
sock_set_wild	sctp/unp.h	/^void	 sock_set_wild(SA *, socklen_t);$/;"	p	signature:(SA *, socklen_t)
sock_str_flag	sockopt/checkopts.c	/^sock_str_flag(union val *ptr, int len)$/;"	f	file:	signature:(union val *ptr, int len)
sock_str_flag	sockopt/checkopts.c	/^static char	*sock_str_flag(union val *, int);$/;"	p	file:	signature:(union val *, int)
sock_str_int	sockopt/checkopts.c	/^sock_str_int(union val *ptr, int len)$/;"	f	file:	signature:(union val *ptr, int len)
sock_str_int	sockopt/checkopts.c	/^static char	*sock_str_int(union val *, int);$/;"	p	file:	signature:(union val *, int)
sock_str_linger	sockopt/checkopts.c	/^sock_str_linger(union val *ptr, int len)$/;"	f	file:	signature:(union val *ptr, int len)
sock_str_linger	sockopt/checkopts.c	/^static char	*sock_str_linger(union val *, int);$/;"	p	file:	signature:(union val *, int)
sock_str_timeval	sockopt/checkopts.c	/^sock_str_timeval(union val *ptr, int len)$/;"	f	file:	signature:(union val *ptr, int len)
sock_str_timeval	sockopt/checkopts.c	/^static char	*sock_str_timeval(union val *, int);$/;"	p	file:	signature:(union val *, int)
sockaddr_storage	lib/unp.h	/^struct sockaddr_storage {$/;"	s
sockaddr_storage::__ss_align	lib/unp.h	/^	int64_t		__ss_align;$/;"	m	struct:sockaddr_storage	access:public
sockaddr_storage::__ss_pad1	lib/unp.h	/^	char		__ss_pad1[__SS_PAD1SIZE];$/;"	m	struct:sockaddr_storage	access:public
sockaddr_storage::__ss_pad2	lib/unp.h	/^	char		__ss_pad2[__SS_PAD2SIZE];$/;"	m	struct:sockaddr_storage	access:public
sockaddr_storage::ss_family	lib/unp.h	/^	sa_family_t	ss_family;$/;"	m	struct:sockaddr_storage	access:public
sockaddr_storage::ss_len	lib/unp.h	/^	u_char		ss_len;$/;"	m	struct:sockaddr_storage	access:public
sockatmark	key/unp.h	/^int		 sockatmark(int);$/;"	p	signature:(int)
sockatmark	lib/sockatmark.c	/^sockatmark(int fd)$/;"	f	signature:(int fd)
sockatmark	lib/unp.h	/^int		 sockatmark(int);$/;"	p	signature:(int)
sockatmark	sctp/unp.h	/^int		 sockatmark(int);$/;"	p	signature:(int)
socket	configure	/^socket ();$/;"	f
sockfd	ping/ping.h	/^int		 sockfd;$/;"	v
sockfd	sigio/dgecho01.c	/^static int		sockfd;$/;"	v	file:
sockfd	threads/strclithread.c	/^static int	sockfd;		\/* global for both threads to access *\/$/;"	v	file:
sockfd	threads/strclithread2.c	/^static int	sockfd;$/;"	v	file:
sockfd_to_family	key/unp.h	/^int		 sockfd_to_family(int);$/;"	p	signature:(int)
sockfd_to_family	lib/sockfd_to_family.c	/^sockfd_to_family(int sockfd)$/;"	f	signature:(int sockfd)
sockfd_to_family	lib/unp.h	/^int		 sockfd_to_family(int);$/;"	p	signature:(int)
sockfd_to_family	sctp/unp.h	/^int		 sockfd_to_family(int);$/;"	p	signature:(int)
sockopts	sock/sock.h	/^void	sockopts(int, int);$/;"	p	signature:(int, int)
sockopts	sock/sockopts.c	/^sockopts(int sockfd, int doall)$/;"	f	signature:(int sockfd, int doall)
source_tcp	sock/sock.h	/^void	source_tcp(int);$/;"	p	signature:(int)
source_tcp	sock/sourcetcp.c	/^source_tcp(int sockfd)$/;"	f	signature:(int sockfd)
source_udp	sock/sock.h	/^void	source_udp(int);$/;"	p	signature:(int)
source_udp	sock/sourceudp.c	/^source_udp(int sockfd)	\/* TODO: use sendto ?? *\/$/;"	f	signature:(int sockfd)
sourcesink	sock/main.c	/^int		sourcesink;			\/* source\/sink mode *\/$/;"	v
sport	traceroute/trace.h	/^u_short	 sport, dport;$/;"	v
sroute_cnt	sock/main.c	/^int		sroute_cnt;			\/* count of #IP addresses in route *\/$/;"	v
sroute_doopt	sock/sock.h	/^void	sroute_doopt(int, char *);$/;"	p	signature:(int, char *)
sroute_doopt	sock/sourceroute.c	/^sroute_doopt(int strict, char *argptr)$/;"	f	signature:(int strict, char *argptr)
sroute_opt	sock/sourceroute.c	/^u_char	sroute_opt[44];		\/* some implementations require this to be$/;"	v
sroute_set	sock/sock.h	/^void	sroute_set(int);$/;"	p	signature:(int)
sroute_set	sock/sourceroute.c	/^sroute_set(int sockfd)$/;"	f	signature:(int sockfd)
ss_family	lib/unp.h	/^	sa_family_t	ss_family;$/;"	m	struct:sockaddr_storage	access:public
ss_len	lib/unp.h	/^	u_char		ss_len;$/;"	m	struct:sockaddr_storage	access:public
ssize_t	sock/ourhdr.h	/^typedef	int	ssize_t;$/;"	t
start_connect	nonblock/start_connect.c	/^start_connect(struct file *fptr)$/;"	f	signature:(struct file *fptr)
start_connect	nonblock/web.h	/^void	start_connect(struct file *);$/;"	p	signature:(struct file *)
status	ssntp/ntp.h	/^  u_char			status;$/;"	m	struct:ntpdata	access:public
str_cli	advio/str_cli_kqueue04.c	/^str_cli(FILE *fp, int sockfd)$/;"	f	signature:(FILE *fp, int sockfd)
str_cli	advio/str_cli_poll03.c	/^str_cli(FILE *fp, int sockfd)$/;"	f	signature:(FILE *fp, int sockfd)
str_cli	advio/str_cli_select02.c	/^str_cli(FILE *fp, int sockfd)$/;"	f	signature:(FILE *fp, int sockfd)
str_cli	key/unp.h	/^void	 str_cli(FILE *, int);$/;"	p	signature:(FILE *, int)
str_cli	lib/str_cli.c	/^str_cli(FILE *fp, int sockfd)$/;"	f	signature:(FILE *fp, int sockfd)
str_cli	lib/unp.h	/^void	 str_cli(FILE *, int);$/;"	p	signature:(FILE *, int)
str_cli	nonblock/strclifork.c	/^str_cli(FILE *fp, int sockfd)$/;"	f	signature:(FILE *fp, int sockfd)
str_cli	nonblock/strclinonb.c	/^str_cli(FILE *fp, int sockfd)$/;"	f	signature:(FILE *fp, int sockfd)
str_cli	oob/strcliselect02.c	/^str_cli(FILE *fp, int sockfd)$/;"	f	signature:(FILE *fp, int sockfd)
str_cli	sctp/unp.h	/^void	 str_cli(FILE *, int);$/;"	p	signature:(FILE *, int)
str_cli	select/strcliselect01.c	/^str_cli(FILE *fp, int sockfd)$/;"	f	signature:(FILE *fp, int sockfd)
str_cli	select/strcliselect02.c	/^str_cli(FILE *fp, int sockfd)$/;"	f	signature:(FILE *fp, int sockfd)
str_cli	tcpcliserv/str_cli08.c	/^str_cli(FILE *fp, int sockfd)$/;"	f	signature:(FILE *fp, int sockfd)
str_cli	tcpcliserv/str_cli09.c	/^str_cli(FILE *fp, int sockfd)$/;"	f	signature:(FILE *fp, int sockfd)
str_cli	tcpcliserv/str_cli11.c	/^str_cli(FILE *fp, int sockfd)$/;"	f	signature:(FILE *fp, int sockfd)
str_cli	threads/strclithread.c	/^str_cli(FILE *fp_arg, int sockfd_arg)$/;"	f	signature:(FILE *fp_arg, int sockfd_arg)
str_cli	threads/strclithread2.c	/^str_cli(FILE *fp_arg, int sockfd_arg)$/;"	f	signature:(FILE *fp_arg, int sockfd_arg)
str_echo	advio/str_echo_stdio02.c	/^str_echo(int sockfd)$/;"	f	signature:(int sockfd)
str_echo	key/unp.h	/^void	 str_echo(int);$/;"	p	signature:(int)
str_echo	lib/str_echo.c	/^str_echo(int sockfd)$/;"	f	signature:(int sockfd)
str_echo	lib/unp.h	/^void	 str_echo(int);$/;"	p	signature:(int)
str_echo	oob/strecho02.c	/^str_echo(int sockfd)$/;"	f	signature:(int sockfd)
str_echo	sctp/unp.h	/^void	 str_echo(int);$/;"	p	signature:(int)
str_echo	tcpcliserv/str_echo08.c	/^str_echo(int sockfd)$/;"	f	signature:(int sockfd)
str_echo	tcpcliserv/str_echo09.c	/^str_echo(int sockfd)$/;"	f	signature:(int sockfd)
str_echo	unixdomain/strecho.c	/^str_echo(int sockfd)$/;"	f	signature:(int sockfd)
str_fam	libgai/testga.c	/^static const char *str_fam(int);$/;"	p	file:	signature:(int)
str_fam	libgai/testga.c	/^str_fam(int family)$/;"	f	file:	signature:(int family)
str_sock	libgai/testga.c	/^static const char *str_sock(int);$/;"	p	file:	signature:(int)
str_sock	libgai/testga.c	/^str_sock(int socktype)$/;"	f	file:	signature:(int socktype)
stratum	ssntp/ntp.h	/^  u_char			stratum;$/;"	m	struct:ntpdata	access:public
strerror	sock/strerror.c	/^strerror(int error)$/;"	f	signature:(int error)
strres	sockopt/checkopts.c	/^static char	strres[128];$/;"	v	file:
sum	tcpcliserv/sum.h	/^  long	sum;$/;"	m	struct:result	access:public
summary	ping/bsdping.c	/^summary()$/;"	f
summary	ping/bsdping.c	/^void	 summary __P((void));$/;"	p	file:	signature:(void)
supported_print	key/printsadbmsg.c	/^supported_print(struct sadb_ext *ext)$/;"	f	signature:(struct sadb_ext *ext)
t_open	configure	/^t_open ();$/;"	f
t_scalar_t	config.h	/^#define t_scalar_t /;"	d
t_scalar_t	sparc64-unknown-freebsd5.1/config.h	/^#define t_scalar_t /;"	d
t_uscalar_t	config.h	/^#define t_uscalar_t /;"	d
t_uscalar_t	sparc64-unknown-freebsd5.1/config.h	/^#define t_uscalar_t /;"	d
tcp_connect	key/unp.h	/^int		 tcp_connect(const char *, const char *);$/;"	p	signature:(const char *, const char *)
tcp_connect	lib/tcp_connect.c	/^tcp_connect(const char *host, const char *serv)$/;"	f	signature:(const char *host, const char *serv)
tcp_connect	lib/unp.h	/^int		 tcp_connect(const char *, const char *);$/;"	p	signature:(const char *, const char *)
tcp_connect	sctp/unp.h	/^int		 tcp_connect(const char *, const char *);$/;"	p	signature:(const char *, const char *)
tcp_listen	key/unp.h	/^int		 tcp_listen(const char *, const char *, socklen_t *);$/;"	p	signature:(const char *, const char *, socklen_t *)
tcp_listen	lib/tcp_listen.c	/^tcp_listen(const char *host, const char *serv, socklen_t *addrlenp)$/;"	f	signature:(const char *host, const char *serv, socklen_t *addrlenp)
tcp_listen	lib/unp.h	/^int		 tcp_listen(const char *, const char *, socklen_t *);$/;"	p	signature:(const char *, const char *, socklen_t *)
tcp_listen	sctp/unp.h	/^int		 tcp_listen(const char *, const char *, socklen_t *);$/;"	p	signature:(const char *, const char *, socklen_t *)
test_udp	udpcksum/udpcksum.c	/^test_udp(void)$/;"	f	signature:(void)
test_udp	udpcksum/udpcksum.h	/^void			 test_udp(void);$/;"	p	signature:(void)
thread_count	server/pthread07.h	/^  long			thread_count;	\/* # connections handled *\/$/;"	m	struct:__anon4	access:public
thread_count	server/pthread08.h	/^  long			thread_count;	\/* # connections handled *\/$/;"	m	struct:__anon5	access:public
thread_count	server/pthread09.h	/^  long			thread_count;	\/* #connections handled *\/$/;"	m	struct:__anon6	access:public
thread_main	server/pthread07.c	/^thread_main(void *arg)$/;"	f	signature:(void *arg)
thread_main	server/pthread08.c	/^thread_main(void *arg)$/;"	f	signature:(void *arg)
thread_main	server/pthread09.c	/^thread_main(void *arg)$/;"	f	signature:(void *arg)
thread_make	server/pthread07.c	/^thread_make(int i)$/;"	f	signature:(int i)
thread_make	server/pthread08.c	/^thread_make(int i)$/;"	f	signature:(int i)
thread_make	server/pthread09.c	/^thread_make(int i)$/;"	f	signature:(int i)
thread_tid	server/pthread07.h	/^  pthread_t		thread_tid;		\/* thread ID *\/$/;"	m	struct:__anon4	access:public
thread_tid	server/pthread08.h	/^  pthread_t		thread_tid;		\/* thread ID *\/$/;"	m	struct:__anon5	access:public
thread_tid	server/pthread09.h	/^  pthread_t		thread_tid;		\/* thread ID *\/$/;"	m	struct:__anon6	access:public
timespec	key/unp.h	/^struct timespec {$/;"	s
timespec	lib/unp.h	/^struct timespec {$/;"	s
timespec	sctp/unp.h	/^struct timespec {$/;"	s
timespec::tv_nsec	key/unp.h	/^  long		tv_nsec;	\/* and nanoseconds *\/$/;"	m	struct:timespec	access:public
timespec::tv_nsec	lib/unp.h	/^  long		tv_nsec;	\/* and nanoseconds *\/$/;"	m	struct:timespec	access:public
timespec::tv_nsec	sctp/unp.h	/^  long		tv_nsec;	\/* and nanoseconds *\/$/;"	m	struct:timespec	access:public
timespec::tv_sec	key/unp.h	/^  time_t	tv_sec;		\/* seconds *\/$/;"	m	struct:timespec	access:public
timespec::tv_sec	lib/unp.h	/^  time_t	tv_sec;		\/* seconds *\/$/;"	m	struct:timespec	access:public
timespec::tv_sec	sctp/unp.h	/^  time_t	tv_sec;		\/* seconds *\/$/;"	m	struct:timespec	access:public
timeval_val	sockopt/checkopts.c	/^  struct timeval	timeval_val;$/;"	m	union:val	typeref:struct:val::timeval	file:	access:public
timing	ping/bsdping.c	/^int timing;			\/* flag to do timing *\/$/;"	v
tmax	ping/bsdping.c	/^double tmax = 0.0;		\/* maximum round trip time *\/$/;"	v
tmin	ping/bsdping.c	/^double tmin = 999999999.0;	\/* minimum round trip time *\/$/;"	v
tpi_bind	streams/tpi_bind.c	/^tpi_bind(int fd, const void *addr, size_t addrlen)$/;"	f	signature:(int fd, const void *addr, size_t addrlen)
tpi_bind	streams/tpi_daytime.h	/^void	tpi_bind(int, const void *, size_t);$/;"	p	signature:(int, const void *, size_t)
tpi_close	streams/tpi_close.c	/^tpi_close(int fd)$/;"	f	signature:(int fd)
tpi_close	streams/tpi_daytime.h	/^void	tpi_close(int);$/;"	p	signature:(int)
tpi_connect	streams/tpi_connect.c	/^tpi_connect(int fd, const void *addr, size_t addrlen)$/;"	f	signature:(int fd, const void *addr, size_t addrlen)
tpi_connect	streams/tpi_daytime.h	/^void	tpi_connect(int, const void *, size_t);$/;"	p	signature:(int, const void *, size_t)
tpi_read	streams/tpi_daytime.h	/^ssize_t	tpi_read(int, void *, size_t);$/;"	p	signature:(int, void *, size_t)
tpi_read	streams/tpi_read.c	/^tpi_read(int fd, void *buf, size_t len)$/;"	f	signature:(int fd, void *buf, size_t len)
tptr	server/pthread07.h	/^Thread	*tptr;		\/* array of Thread structures; calloc'ed *\/$/;"	v
tptr	server/pthread08.h	/^Thread	*tptr;		\/* array of Thread structures; calloc'ed *\/$/;"	v
tptr	server/pthread09.h	/^Thread	*tptr;		\/* array of Thread structures; calloc'ed *\/$/;"	v
traceloop	traceroute/trace.h	/^void	 traceloop(void);$/;"	p	signature:(void)
traceloop	traceroute/traceloop.c	/^traceloop(void)$/;"	f	signature:(void)
ts	rtt/dg_send_recv.c	/^  uint32_t	ts;		\/* timestamp when sent *\/$/;"	m	struct:hdr	file:	access:public
tsum	ping/bsdping.c	/^double tsum = 0.0;		\/* sum of all times, for doing average *\/$/;"	v
ttab	ping/bsdping.c	/^static char *ttab[] = {$/;"	v	file:
ttl	traceroute/trace.h	/^int		 ttl, max_ttl;$/;"	v
ttllevel	traceroute/trace.h	/^  int	   ttllevel;		\/* setsockopt() level to set TTL *\/$/;"	m	struct:proto	access:public
ttloptname	traceroute/trace.h	/^  int	   ttloptname;		\/* setsockopt() name to set TTL *\/$/;"	m	struct:proto	access:public
tty_atexit	sock/loop.c	/^void	tty_atexit(void);	\/* in library *\/$/;"	p	file:	signature:(void)
tty_atexit	sock/ourhdr.h	/^void	 tty_atexit(void);			\/* {Prog raw} *\/$/;"	p	signature:(void)
tty_cbreak	sock/ourhdr.h	/^int		 tty_cbreak(int);			\/* {Prog raw} *\/$/;"	p	signature:(int)
tty_raw	sock/ourhdr.h	/^int		 tty_raw(int);				\/* {Prog raw} *\/$/;"	p	signature:(int)
tty_reset	sock/ourhdr.h	/^int		 tty_reset(int);			\/* {Prog raw} *\/$/;"	p	signature:(int)
tty_termios	sock/ourhdr.h	/^struct termios	*tty_termios(void);	\/* {Prog raw} *\/$/;"	p	signature:(void)
tv_nsec	key/unp.h	/^  long		tv_nsec;	\/* and nanoseconds *\/$/;"	m	struct:timespec	access:public
tv_nsec	lib/unp.h	/^  long		tv_nsec;	\/* and nanoseconds *\/$/;"	m	struct:timespec	access:public
tv_nsec	sctp/unp.h	/^  long		tv_nsec;	\/* and nanoseconds *\/$/;"	m	struct:timespec	access:public
tv_sec	key/unp.h	/^  time_t	tv_sec;		\/* seconds *\/$/;"	m	struct:timespec	access:public
tv_sec	lib/unp.h	/^  time_t	tv_sec;		\/* seconds *\/$/;"	m	struct:timespec	access:public
tv_sec	sctp/unp.h	/^  time_t	tv_sec;		\/* seconds *\/$/;"	m	struct:timespec	access:public
tv_sub	key/unp.h	/^void	 tv_sub(struct timeval *, struct timeval *);$/;"	p	signature:(struct timeval *, struct timeval *)
tv_sub	lib/tv_sub.c	/^tv_sub(struct timeval *out, struct timeval *in)$/;"	f	signature:(struct timeval *out, struct timeval *in)
tv_sub	lib/unp.h	/^void	 tv_sub(struct timeval *, struct timeval *);$/;"	p	signature:(struct timeval *, struct timeval *)
tv_sub	ping/ping.h	/^void	 tv_sub(struct timeval *, struct timeval *);$/;"	p	signature:(struct timeval *, struct timeval *)
tv_sub	ping/tv_sub.c	/^tv_sub(struct timeval *out, struct timeval *in)$/;"	f	signature:(struct timeval *out, struct timeval *in)
tv_sub	sctp/unp.h	/^void	 tv_sub(struct timeval *, struct timeval *);$/;"	p	signature:(struct timeval *, struct timeval *)
tv_sub	traceroute/trace.h	/^void	 tv_sub(struct timeval *, struct timeval *);$/;"	p	signature:(struct timeval *, struct timeval *)
tv_sub	traceroute/tv_sub.c	/^tv_sub(struct timeval *out, struct timeval *in)$/;"	f	signature:(struct timeval *out, struct timeval *in)
tvsub	ping/bsdping.c	/^tvsub(out, in)$/;"	f
tvsub	ping/bsdping.c	/^void	 tvsub __P((struct timeval *, struct timeval *));$/;"	p	file:	signature:(struct timeval *, struct timeval *)
udp	sock/main.c	/^int		udp;				\/* use UDP instead of TCP *\/$/;"	v
udp_01	test/test1.c	/^udp_01()$/;"	f
udp_check	udpcksum/udpread.c	/^struct udpiphdr	*udp_check(char *, int);$/;"	p	file:	signature:(char *, int)
udp_check	udpcksum/udpread.c	/^udp_check(char *ptr, int len)$/;"	f	signature:(char *ptr, int len)
udp_client	key/unp.h	/^int		 udp_client(const char *, const char *, void **, socklen_t *);$/;"	p	signature:(const char *, const char *, void **, socklen_t *)
udp_client	lib/udp_client.c	/^udp_client(const char *host, const char *serv, SA **saptr, socklen_t *lenp)$/;"	f	signature:(const char *host, const char *serv, SA **saptr, socklen_t *lenp)
udp_client	lib/unp.h	/^int		 udp_client(const char *, const char *, SA **, socklen_t *);$/;"	p	signature:(const char *, const char *, SA **, socklen_t *)
udp_client	sctp/unp.h	/^int		 udp_client(const char *, const char *, void **, socklen_t *);$/;"	p	signature:(const char *, const char *, void **, socklen_t *)
udp_client	test/test2.c	/^udp_client(const char *host, const char *serv, void **saptr, socklen_t *lenp)$/;"	f	signature:(const char *host, const char *serv, void **saptr, socklen_t *lenp)
udp_connect	key/unp.h	/^int		 udp_connect(const char *, const char *);$/;"	p	signature:(const char *, const char *)
udp_connect	lib/udp_connect.c	/^udp_connect(const char *host, const char *serv)$/;"	f	signature:(const char *host, const char *serv)
udp_connect	lib/unp.h	/^int		 udp_connect(const char *, const char *);$/;"	p	signature:(const char *, const char *)
udp_connect	sctp/unp.h	/^int		 udp_connect(const char *, const char *);$/;"	p	signature:(const char *, const char *)
udp_read	udpcksum/udpcksum.h	/^struct udpiphdr *udp_read(void);$/;"	p	signature:(void)
udp_read	udpcksum/udpread.c	/^udp_read(void)$/;"	f	signature:(void)
udp_server	key/unp.h	/^int		 udp_server(const char *, const char *, socklen_t *);$/;"	p	signature:(const char *, const char *, socklen_t *)
udp_server	lib/udp_server.c	/^udp_server(const char *host, const char *serv, socklen_t *addrlenp)$/;"	f	signature:(const char *host, const char *serv, socklen_t *addrlenp)
udp_server	lib/unp.h	/^int		 udp_server(const char *, const char *, socklen_t *);$/;"	p	signature:(const char *, const char *, socklen_t *)
udp_server	sctp/unp.h	/^int		 udp_server(const char *, const char *, socklen_t *);$/;"	p	signature:(const char *, const char *, socklen_t *)
udp_server_reuseaddr	names/udp_server_reuseaddr.c	/^udp_server_reuseaddr(const char *host, const char *serv, socklen_t *addrlenp)$/;"	f	signature:(const char *host, const char *serv, socklen_t *addrlenp)
udp_write	udpcksum/udpcksum.h	/^void			 udp_write(char *, int);$/;"	p	signature:(char *, int)
udp_write	udpcksum/udpwrite.c	/^udp_write(char *buf, int userlen)$/;"	f	signature:(char *buf, int userlen)
un_ctl6	ping/old/ip6.h	/^	} un_ctl6;$/;"	m	union:ip6hdr::__anon2	typeref:struct:ip6hdr::__anon2::ip6hdrctl	access:public
un_data16	ping/old/icmp6.h	/^	u_int16_t	un_data16[2];	\/* Type-specific field *\/$/;"	m	union:icmp6hdr::__anon1	access:public
un_data32	ping/old/icmp6.h	/^	u_int32_t	un_data32[1];	\/* Type-specific field *\/$/;"	m	union:icmp6hdr::__anon1	access:public
un_data8	ping/old/icmp6.h	/^	u_int8_t	un_data8[4];	\/* Type-specific field *\/$/;"	m	union:icmp6hdr::__anon1	access:public
un_lock	sock/ourhdr.h	/^#define	un_lock(/;"	d
un_vfc	ping/old/ip6.h	/^	u_int8_t un_vfc;		\/* 4 bits version, 4 bits reserved *\/$/;"	m	union:ip6hdr::__anon2	access:public
unlock_it	server/lock_fcntl.c	/^static struct flock	lock_it, unlock_it;$/;"	v	typeref:struct:	file:
unp_in_pktinfo	lib/unp.h	/^struct unp_in_pktinfo {$/;"	s
unp_in_pktinfo::ipi_addr	lib/unp.h	/^  struct in_addr	ipi_addr;	\/* dst IPv4 address *\/$/;"	m	struct:unp_in_pktinfo	typeref:struct:unp_in_pktinfo::in_addr	access:public
unp_in_pktinfo::ipi_ifindex	lib/unp.h	/^  int				ipi_ifindex;\/* received interface index *\/$/;"	m	struct:unp_in_pktinfo	access:public
urgwrite	sock/main.c	/^int		urgwrite;			\/* write urgent byte after this write *\/$/;"	v
usage	libgai/testga.c	/^static void	usage(const char *);$/;"	p	file:	signature:(const char *)
usage	libgai/testga.c	/^usage(const char *msg)$/;"	f	file:	signature:(const char *msg)
usage	ping/bsdping.c	/^usage()$/;"	f
usage	ping/bsdping.c	/^void	 usage __P((void));$/;"	p	file:	signature:(void)
usage	sock/main.c	/^static void	usage(const char *);$/;"	p	file:	signature:(const char *)
usage	sock/main.c	/^usage(const char *msg)$/;"	f	file:	signature:(const char *msg)
usage	test/test1.c	/^usage(const char *msg)$/;"	f	file:	signature:(const char *msg)
usage	udpcksum/main.c	/^static void	usage(const char *);$/;"	p	file:	signature:(const char *)
usage	udpcksum/main.c	/^usage(const char *msg)$/;"	f	file:	signature:(const char *msg)
usewritev	sock/main.c	/^int		usewritev;			\/* use writev() instead of write() *\/$/;"	v
val	key/name.c	/^	int val;$/;"	m	struct:idlist	file:	access:public
val	sockopt/checkopts.c	/^union val {$/;"	u	file:
val	sockopt/checkopts.c	/^} val;$/;"	v	typeref:union:val
val::i_val	sockopt/checkopts.c	/^  int				i_val;$/;"	m	union:val	file:	access:public
val::l_val	sockopt/checkopts.c	/^  long				l_val;$/;"	m	union:val	file:	access:public
val::linger_val	sockopt/checkopts.c	/^  struct linger		linger_val;$/;"	m	union:val	typeref:struct:val::linger	file:	access:public
val::timeval_val	sockopt/checkopts.c	/^  struct timeval	timeval_val;$/;"	m	union:val	typeref:struct:val::timeval	file:	access:public
verbose	ping/ping.h	/^int		 verbose;$/;"	v
verbose	sock/main.c	/^int		verbose;			\/* each -v increments this by 1 *\/$/;"	v
verbose	test/test1.c	/^int		verbose;$/;"	v
verbose	traceroute/trace.h	/^int		 verbose;$/;"	v
verbose	udpcksum/main.c	/^int		verbose;$/;"	v
vflag	libgai/testga.c	/^int		vflag;$/;"	v
wbuf	sock/main.c	/^char   *wbuf;				\/* pointer that is malloc'ed *\/$/;"	v
web_child	server/web_child.c	/^web_child(int sockfd)$/;"	f	signature:(int sockfd)
web_child	server/web_child_r.c	/^web_child(int sockfd)$/;"	f	signature:(int sockfd)
whereto	ping/bsdping.c	/^struct sockaddr whereto;	\/* who to ping *\/$/;"	v	typeref:struct:sockaddr
writable_timeo	key/unp.h	/^int		 writable_timeo(int, int);$/;"	p	signature:(int, int)
writable_timeo	lib/unp.h	/^int		 writable_timeo(int, int);$/;"	p	signature:(int, int)
writable_timeo	lib/writable_timeo.c	/^writable_timeo(int fd, int sec)$/;"	f	signature:(int fd, int sec)
writable_timeo	sctp/unp.h	/^int		 writable_timeo(int, int);$/;"	p	signature:(int, int)
write_fd	key/unp.h	/^ssize_t	 write_fd(int, void *, size_t, int);$/;"	p	signature:(int, void *, size_t, int)
write_fd	lib/unp.h	/^ssize_t	 write_fd(int, void *, size_t, int);$/;"	p	signature:(int, void *, size_t, int)
write_fd	lib/write_fd.c	/^write_fd(int fd, void *ptr, size_t nbytes, int sendfd)$/;"	f	signature:(int fd, void *ptr, size_t nbytes, int sendfd)
write_fd	sctp/unp.h	/^ssize_t	 write_fd(int, void *, size_t, int);$/;"	p	signature:(int, void *, size_t, int)
write_get_cmd	nonblock/web.h	/^void	write_get_cmd(struct file *);$/;"	p	signature:(struct file *)
write_get_cmd	nonblock/write_get_cmd.c	/^write_get_cmd(struct file *fptr)$/;"	f	signature:(struct file *fptr)
write_get_cmd	threads/web01.c	/^void	write_get_cmd(struct file *);$/;"	p	file:	signature:(struct file *)
write_get_cmd	threads/web01.c	/^write_get_cmd(struct file *fptr)$/;"	f	signature:(struct file *fptr)
write_get_cmd	threads/web02.c	/^void	write_get_cmd(struct file *);$/;"	p	file:	signature:(struct file *)
write_get_cmd	threads/web02.c	/^write_get_cmd(struct file *fptr)$/;"	f	signature:(struct file *fptr)
write_get_cmd	threads/web03.c	/^void	write_get_cmd(struct file *);$/;"	p	file:	signature:(struct file *)
write_get_cmd	threads/web03.c	/^write_get_cmd(struct file *fptr)$/;"	f	signature:(struct file *fptr)
write_lock	sock/ourhdr.h	/^#define	write_lock(/;"	d
writelen	sock/main.c	/^int		writelen = 1024;	\/* default write length for socket *\/$/;"	v
writen	key/unp.h	/^ssize_t	 writen(int, const void *, size_t);$/;"	p	signature:(int, const void *, size_t)
writen	lib/unp.h	/^ssize_t	 writen(int, const void *, size_t);$/;"	p	signature:(int, const void *, size_t)
writen	lib/writen.c	/^writen(int fd, const void *vptr, size_t n)$/;"	f	signature:(int fd, const void *vptr, size_t n)
writen	sctp/unp.h	/^ssize_t	 writen(int, const void *, size_t);$/;"	p	signature:(int, const void *, size_t)
writen	sock/ourhdr.h	/^ssize_t	 writen(int, const void *, size_t);\/* {Prog writen} *\/$/;"	p	signature:(int, const void *, size_t)
writen	sock/writen.c	/^writen(int fd, const void *vptr, size_t n)$/;"	f	signature:(int fd, const void *vptr, size_t n)
writew_lock	sock/ourhdr.h	/^#define	writew_lock(/;"	d
wset	nonblock/web.h	/^fd_set	rset, wset;$/;"	v
xmt	ssntp/ntp.h	/^  struct l_fixedpt	xmt;$/;"	m	struct:ntpdata	typeref:struct:ntpdata::l_fixedpt	access:public
xti_accept	debug/unpxti.h	/^int		 xti_accept(int, struct netbuf *, int);$/;"	p	signature:(int, struct netbuf *, int)
xti_accept	streams/unpxti.h	/^int		 xti_accept(int, struct netbuf *, int);$/;"	p	signature:(int, struct netbuf *, int)
xti_flags_str	debug/unpxti.h	/^char	*xti_flags_str(int);$/;"	p	signature:(int)
xti_flags_str	streams/unpxti.h	/^char	*xti_flags_str(int);$/;"	p	signature:(int)
xti_getopt	debug/unpxti.h	/^int		 xti_getopt(int, int, int, void *, socklen_t *);$/;"	p	signature:(int, int, int, void *, socklen_t *)
xti_getopt	streams/unpxti.h	/^int		 xti_getopt(int, int, int, void *, socklen_t *);$/;"	p	signature:(int, int, int, void *, socklen_t *)
xti_ntop	debug/unpxti.h	/^char	*xti_ntop(const struct netbuf *);$/;"	p	signature:(const struct netbuf *)
xti_ntop	streams/unpxti.h	/^char	*xti_ntop(const struct netbuf *);$/;"	p	signature:(const struct netbuf *)
xti_ntop_host	debug/unpxti.h	/^char	*xti_ntop_host(const struct netbuf *);$/;"	p	signature:(const struct netbuf *)
xti_ntop_host	streams/unpxti.h	/^char	*xti_ntop_host(const struct netbuf *);$/;"	p	signature:(const struct netbuf *)
xti_rdwr	debug/unpxti.h	/^int		 xti_rdwr(int);$/;"	p	signature:(int)
xti_rdwr	streams/unpxti.h	/^int		 xti_rdwr(int);$/;"	p	signature:(int)
xti_setopt	debug/unpxti.h	/^int		 xti_setopt(int, int, int, void *, socklen_t);$/;"	p	signature:(int, int, int, void *, socklen_t)
xti_setopt	streams/unpxti.h	/^int		 xti_setopt(int, int, int, void *, socklen_t);$/;"	p	signature:(int, int, int, void *, socklen_t)
xti_str_flags	debug/unpxti.h	/^char	*xti_str_flags(t_scalar_t);$/;"	p	signature:(t_scalar_t)
xti_str_flags	streams/unpxti.h	/^char	*xti_str_flags(t_scalar_t);$/;"	p	signature:(t_scalar_t)
xti_str_kpalive	debug/unpxti.h	/^char	*xti_str_kpalive(struct t_opthdr *);$/;"	p	signature:(struct t_opthdr *)
xti_str_kpalive	streams/unpxti.h	/^char	*xti_str_kpalive(struct t_opthdr *);$/;"	p	signature:(struct t_opthdr *)
xti_str_lend	debug/unpxti.h	/^char	*xti_str_lend(struct t_opthdr *);$/;"	p	signature:(struct t_opthdr *)
xti_str_lend	streams/unpxti.h	/^char	*xti_str_lend(struct t_opthdr *);$/;"	p	signature:(struct t_opthdr *)
xti_str_linger	debug/unpxti.h	/^char	*xti_str_linger(struct t_opthdr *);$/;"	p	signature:(struct t_opthdr *)
xti_str_linger	streams/unpxti.h	/^char	*xti_str_linger(struct t_opthdr *);$/;"	p	signature:(struct t_opthdr *)
xti_str_syng	debug/unpxti.h	/^char	*xti_str_syng(t_scalar_t);$/;"	p	signature:(t_scalar_t)
xti_str_syng	streams/unpxti.h	/^char	*xti_str_syng(t_scalar_t);$/;"	p	signature:(t_scalar_t)
xti_str_uchard	debug/unpxti.h	/^char	*xti_str_uchard(struct t_opthdr *);$/;"	p	signature:(struct t_opthdr *)
xti_str_uchard	streams/unpxti.h	/^char	*xti_str_uchard(struct t_opthdr *);$/;"	p	signature:(struct t_opthdr *)
xti_str_ucharx	debug/unpxti.h	/^char	*xti_str_ucharx(struct t_opthdr *);$/;"	p	signature:(struct t_opthdr *)
xti_str_ucharx	streams/unpxti.h	/^char	*xti_str_ucharx(struct t_opthdr *);$/;"	p	signature:(struct t_opthdr *)
xti_str_uiyn	debug/unpxti.h	/^char	*xti_str_uiyn(struct t_opthdr *);$/;"	p	signature:(struct t_opthdr *)
xti_str_uiyn	streams/unpxti.h	/^char	*xti_str_uiyn(struct t_opthdr *);$/;"	p	signature:(struct t_opthdr *)
xti_str_uscalard	debug/unpxti.h	/^char	*xti_str_uscalard(struct t_opthdr *);$/;"	p	signature:(struct t_opthdr *)
xti_str_uscalard	streams/unpxti.h	/^char	*xti_str_uscalard(struct t_opthdr *);$/;"	p	signature:(struct t_opthdr *)
xti_str_usyn	debug/unpxti.h	/^char	*xti_str_usyn(struct t_opthdr *);$/;"	p	signature:(struct t_opthdr *)
xti_str_usyn	streams/unpxti.h	/^char	*xti_str_usyn(struct t_opthdr *);$/;"	p	signature:(struct t_opthdr *)
xti_str_yn	debug/unpxti.h	/^char	*xti_str_yn(t_uscalar_t);$/;"	p	signature:(t_uscalar_t)
xti_str_yn	streams/unpxti.h	/^char	*xti_str_yn(t_uscalar_t);$/;"	p	signature:(t_uscalar_t)
xti_tlook_str	debug/unpxti.h	/^char	*xti_tlook_str(int);$/;"	p	signature:(int)
xti_tlook_str	streams/unpxti.h	/^char	*xti_tlook_str(int);$/;"	p	signature:(int)
zeromask	sock/tellwait.c	/^static sigset_t			newmask, oldmask, zeromask;$/;"	v	file:
zerosum	udpcksum/main.c	/^int		zerosum;		\/* send UDP query with no checksum *\/$/;"	v
